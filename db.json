{"meta":{"version":1,"warehouse":"3.0.1"},"models":{"Asset":[{"_id":"source/images/bird_32_gray.png","path":"images/bird_32_gray.png","modified":0,"renderable":0},{"_id":"source/images/bird_32_gray_fail.png","path":"images/bird_32_gray_fail.png","modified":0,"renderable":0},{"_id":"source/images/code_bg.png","path":"images/code_bg.png","modified":0,"renderable":0},{"_id":"source/images/dotted-border.png","path":"images/dotted-border.png","modified":0,"renderable":0},{"_id":"source/images/email.png","path":"images/email.png","modified":0,"renderable":0},{"_id":"source/images/line-tile.png","path":"images/line-tile.png","modified":0,"renderable":0},{"_id":"source/images/rss.png","path":"images/rss.png","modified":0,"renderable":0},{"_id":"source/images/noise.png","path":"images/noise.png","modified":0,"renderable":0},{"_id":"source/images/rss555.png","path":"images/rss555.png","modified":0,"renderable":0},{"_id":"source/images/runtime_class2.png","path":"images/runtime_class2.png","modified":0,"renderable":0},{"_id":"source/images/runtime_class3.png","path":"images/runtime_class3.png","modified":0,"renderable":0},{"_id":"source/images/runtime_class6.png","path":"images/runtime_class6.png","modified":0,"renderable":0},{"_id":"source/images/runtime_method3.png","path":"images/runtime_method3.png","modified":0,"renderable":0},{"_id":"source/images/runtime_method4.png","path":"images/runtime_method4.png","modified":0,"renderable":0},{"_id":"source/images/runtime_variable1.png","path":"images/runtime_variable1.png","modified":0,"renderable":0},{"_id":"source/images/runtime_variable3.png","path":"images/runtime_variable3.png","modified":0,"renderable":0},{"_id":"source/images/runtime_variable2.png","path":"images/runtime_variable2.png","modified":0,"renderable":0},{"_id":"source/images/search.png","path":"images/search.png","modified":0,"renderable":0},{"_id":"source/images/webimage_flow.png","path":"images/webimage_flow.png","modified":0,"renderable":0},{"_id":"source/images/mvvm1.png","path":"images/mvvm1.png","modified":0,"renderable":0},{"_id":"source/images/mvvm2.png","path":"images/mvvm2.png","modified":0,"renderable":0},{"_id":"source/images/runtime_method1.png","path":"images/runtime_method1.png","modified":0,"renderable":0},{"_id":"source/images/runtime_method7.png","path":"images/runtime_method7.png","modified":0,"renderable":0},{"_id":"source/images/runtime_variable4.png","path":"images/runtime_variable4.png","modified":0,"renderable":0},{"_id":"source/images/sdwebimage_ifelse.png","path":"images/sdwebimage_ifelse.png","modified":0,"renderable":0},{"_id":"source/images/thread4.png","path":"images/thread4.png","modified":0,"renderable":0},{"_id":"source/images/downloadmanager.jpg","path":"images/downloadmanager.jpg","modified":0,"renderable":0},{"_id":"source/images/runtime_class5.png","path":"images/runtime_class5.png","modified":0,"renderable":0},{"_id":"source/images/runtime_variable5.png","path":"images/runtime_variable5.png","modified":0,"renderable":0},{"_id":"source/images/mvvm3.png","path":"images/mvvm3.png","modified":0,"renderable":0},{"_id":"source/images/runtime_class4.png","path":"images/runtime_class4.png","modified":0,"renderable":0},{"_id":"source/images/runtime_forwarding1.png","path":"images/runtime_forwarding1.png","modified":0,"renderable":0},{"_id":"source/images/runtime_method5.png","path":"images/runtime_method5.png","modified":0,"renderable":0},{"_id":"source/images/github_url.png","path":"images/github_url.png","modified":0,"renderable":0},{"_id":"source/images/runtime_method8.png","path":"images/runtime_method8.png","modified":0,"renderable":0},{"_id":"source/images/thread1.png","path":"images/thread1.png","modified":0,"renderable":0},{"_id":"source/images/sdwebimage.jpg","path":"images/sdwebimage.jpg","modified":0,"renderable":0},{"_id":"source/images/thread3.png","path":"images/thread3.png","modified":0,"renderable":0},{"_id":"source/images/runtime_method2.png","path":"images/runtime_method2.png","modified":0,"renderable":0},{"_id":"source/images/thread2.png","path":"images/thread2.png","modified":0,"renderable":0},{"_id":"source/images/runtime_forwarding2.png","path":"images/runtime_forwarding2.png","modified":0,"renderable":0},{"_id":"source/images/runtime_method6.png","path":"images/runtime_method6.png","modified":0,"renderable":0},{"_id":"source/images/mvc.png","path":"images/mvc.png","modified":0,"renderable":0},{"_id":"source/images/runtime_forwarding3.png","path":"images/runtime_forwarding3.png","modified":0,"renderable":0},{"_id":"source/images/runtime_class1.png","path":"images/runtime_class1.png","modified":0,"renderable":0},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/slider.e37972.js","path":"slider.e37972.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/main.0cf68a.css","path":"main.0cf68a.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/main.0cf68a.js","path":"main.0cf68a.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/mobile.992cbe.js","path":"mobile.992cbe.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/fonts/iconfont.16acc2.ttf","path":"fonts/iconfont.16acc2.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/fonts/iconfont.8c627f.woff","path":"fonts/iconfont.8c627f.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/fonts/iconfont.45d7ee.svg","path":"fonts/iconfont.45d7ee.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/fonts/iconfont.b322fa.eot","path":"fonts/iconfont.b322fa.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0,"renderable":1},{"_id":"source/images/apple_3.jpg","path":"images/apple_3.jpg","modified":0,"renderable":0},{"_id":"source/images/apple_4.jpg","path":"images/apple_4.jpg","modified":0,"renderable":0},{"_id":"source/images/apple_7.jpg","path":"images/apple_7.jpg","modified":0,"renderable":0},{"_id":"source/images/apple_2.jpg","path":"images/apple_2.jpg","modified":0,"renderable":0},{"_id":"source/images/apple_1.png","path":"images/apple_1.png","modified":0,"renderable":0},{"_id":"source/images/apple_5.png","path":"images/apple_5.png","modified":0,"renderable":0},{"_id":"source/images/apple_6.png","path":"images/apple_6.png","modified":0,"renderable":0},{"_id":"source/images/digital_3.png","path":"images/digital_3.png","modified":0,"renderable":0},{"_id":"source/images/digital_2.png","path":"images/digital_2.png","modified":0,"renderable":0},{"_id":"source/images/digital_1.png","path":"images/digital_1.png","modified":0,"renderable":0},{"_id":"source/images/digital_4.png","path":"images/digital_4.png","modified":0,"renderable":0},{"_id":"source/images/hotfix-003.png","path":"images/hotfix-003.png","modified":0,"renderable":0},{"_id":"source/images/hotfix-010.png","path":"images/hotfix-010.png","modified":0,"renderable":0},{"_id":"source/images/hotfix-002.png","path":"images/hotfix-002.png","modified":0,"renderable":0},{"_id":"source/images/hotfix-004.png","path":"images/hotfix-004.png","modified":0,"renderable":0},{"_id":"source/images/hotfix-005.png","path":"images/hotfix-005.png","modified":0,"renderable":0},{"_id":"source/images/hotfix-001.png","path":"images/hotfix-001.png","modified":0,"renderable":0},{"_id":"source/images/hotfix-006.png","path":"images/hotfix-006.png","modified":0,"renderable":0},{"_id":"source/images/hotfix-007.png","path":"images/hotfix-007.png","modified":0,"renderable":0},{"_id":"source/images/hotfix-008.png","path":"images/hotfix-008.png","modified":0,"renderable":0},{"_id":"source/images/hotfix_5.png","path":"images/hotfix_5.png","modified":0,"renderable":0},{"_id":"source/images/runloop.png","path":"images/runloop.png","modified":0,"renderable":0},{"_id":"source/images/hotfix-009.png","path":"images/hotfix-009.png","modified":0,"renderable":0},{"_id":"source/images/hotfix_4.png","path":"images/hotfix_4.png","modified":0,"renderable":0},{"_id":"source/images/hotfix_3.png","path":"images/hotfix_3.png","modified":0,"renderable":0},{"_id":"source/images/hotfix_2.png","path":"images/hotfix_2.png","modified":0,"renderable":0},{"_id":"source/images/hotfix_1.png","path":"images/hotfix_1.png","modified":0,"renderable":0},{"_id":"source/images/aop-1.png","path":"images/aop-1.png","modified":0,"renderable":0},{"_id":"source/images/cocoapods_3.png","path":"images/cocoapods_3.png","modified":0,"renderable":0},{"_id":"source/images/frp-01.png","path":"images/frp-01.png","modified":0,"renderable":0},{"_id":"source/images/frp-001.png","path":"images/frp-001.png","modified":0,"renderable":0},{"_id":"source/images/frp-003.png","path":"images/frp-003.png","modified":0,"renderable":0},{"_id":"source/images/frp-004.png","path":"images/frp-004.png","modified":0,"renderable":0},{"_id":"source/images/frp-011.png","path":"images/frp-011.png","modified":0,"renderable":0},{"_id":"source/images/frp-012.png","path":"images/frp-012.png","modified":0,"renderable":0},{"_id":"source/images/frp-016.png","path":"images/frp-016.png","modified":0,"renderable":0},{"_id":"source/images/frp-015.png","path":"images/frp-015.png","modified":0,"renderable":0},{"_id":"source/images/frp-018.png","path":"images/frp-018.png","modified":0,"renderable":0},{"_id":"source/images/frp-009.png","path":"images/frp-009.png","modified":0,"renderable":0},{"_id":"source/images/frp-007.png","path":"images/frp-007.png","modified":0,"renderable":0},{"_id":"source/images/frp-006.png","path":"images/frp-006.png","modified":0,"renderable":0},{"_id":"source/images/frp-013.png","path":"images/frp-013.png","modified":0,"renderable":0},{"_id":"source/images/iOS-1.png","path":"images/iOS-1.png","modified":0,"renderable":0},{"_id":"source/images/cocoapods_1.png","path":"images/cocoapods_1.png","modified":0,"renderable":0},{"_id":"source/images/cocoapods_2.png","path":"images/cocoapods_2.png","modified":0,"renderable":0},{"_id":"source/images/frp-002.png","path":"images/frp-002.png","modified":0,"renderable":0},{"_id":"source/images/frp-008.png","path":"images/frp-008.png","modified":0,"renderable":0},{"_id":"source/images/frp-010.png","path":"images/frp-010.png","modified":0,"renderable":0},{"_id":"source/images/frp-005.png","path":"images/frp-005.png","modified":0,"renderable":0},{"_id":"source/images/jenkins-1.png","path":"images/jenkins-1.png","modified":0,"renderable":0},{"_id":"source/images/jenkins-2.png","path":"images/jenkins-2.png","modified":0,"renderable":0},{"_id":"source/images/frp-014.png","path":"images/frp-014.png","modified":0,"renderable":0},{"_id":"source/images/frp-017.png","path":"images/frp-017.png","modified":0,"renderable":0},{"_id":"source/images/track-1.png","path":"images/track-1.png","modified":0,"renderable":0},{"_id":"source/images/scroll-1.jpg","path":"images/scroll-1.jpg","modified":0,"renderable":0},{"_id":"source/images/strong-3.png","path":"images/strong-3.png","modified":0,"renderable":0},{"_id":"source/images/php.png","path":"images/php.png","modified":0,"renderable":0},{"_id":"source/images/breakhull-2.png","path":"images/breakhull-2.png","modified":0,"renderable":0},{"_id":"source/images/breakhull-1.png","path":"images/breakhull-1.png","modified":0,"renderable":0},{"_id":"source/images/strong-1.png","path":"images/strong-1.png","modified":0,"renderable":0},{"_id":"source/images/strong-2.png","path":"images/strong-2.png","modified":0,"renderable":0}],"Cache":[{"_id":"themes/jacman/LICENSE","hash":"931516aa36c53eb7843c83d82662eb50cc3c4367","modified":1577957496433},{"_id":"themes/jacman/README.md","hash":"098545637b0aeb27b14707c15e429470c603d78d","modified":1577957496433},{"_id":"themes/jacman/.gitignore","hash":"7d65523f2a5afb69d76824dd1dfa62a34faa3197","modified":1577957496433},{"_id":"themes/jacman/README_zh.md","hash":"9c73931bca4883de13eedd4be254da547d4ca52e","modified":1577957496433},{"_id":"themes/jacman/_config.yml","hash":"9b627edf866307b8850e4f94d0a03e18eb2fab41","modified":1577964320263},{"_id":"source/_posts/first-blog-test.md","hash":"1d58662a21f235c3b549afe7125dc472f8b7260a","modified":1578034242138},{"_id":"source/_posts/ji-lu-yi-xie-hao-de-wang-zhan-huo-bo-ke.md","hash":"bf86a2c4a89bdf2317b59aace3f7d2bb9f440734","modified":1577966077653},{"_id":"source/_posts/first-blog.md","hash":"56fe259000c5cd4acc0a5d1fc5bf886a17865919","modified":1578036469505},{"_id":"source/_posts/ji-yu-octopressde-github-pageschuang-jian.md","hash":"f45d48fafa818e3e10540a6b8cd07f105533211c","modified":1592884254032},{"_id":"source/_posts/hello-world.md","hash":"b59bd771cdf80d4e6add33fab60828e8482c6aca","modified":1577965911533},{"_id":"source/_posts/ji-zhu-bo-ke.md","hash":"ee606cdefc14845cde02d5e6aa087e289f1a1aa1","modified":1592892579303},{"_id":"source/_posts/ruan-jian-jia-gou-mvvm.md","hash":"6401fafd9e746071d73d2114333c1af088523274","modified":1592892507689},{"_id":"source/_posts/multi-thread.md","hash":"98b3ccdf09858b0f1b5fe9e240b1193dfa152353","modified":1592892533934},{"_id":"source/_posts/runtimeyun-xing-shi-zhi-bian-liang.md","hash":"361de880a296b8521b5adeb3c739dad56eb7b44e","modified":1578033029257},{"_id":"source/_posts/runtimeyun-xing-shi-zhi-class.md","hash":"37008ef4da4fb6c723052f8803a0bab054bbcf96","modified":1578033044283},{"_id":"source/_posts/runtimeyun-xing-shi-de-li-jie.md","hash":"273f6b74613e3c73930a25404c199d5fefb988eb","modified":1592892473299},{"_id":"source/_posts/runtimeyun-xing-shi-zhi-fang-fa-method.md","hash":"64d57738d838566ff51baa67fef79b4af398a8a8","modified":1592892411463},{"_id":"source/_posts/runtimeyun-xing-shi-zhi-xiao-xi-zhuan-fa-message-forwarding.md","hash":"54c3c0fd71ec315dfb6acaac461ab8dd32a062c0","modified":1592892384920},{"_id":"source/_posts/sdwebimageyuan-ma-fen-xi.md","hash":"7462579ad386fe1d6e280ec1d79209127e7e9d97","modified":1592892150437},{"_id":"source/_posts/shi-jian-ri-li-kong-jian.md","hash":"2eeff4cf71b2b2761c4d0d570a2483a457a58755","modified":1592892085194},{"_id":"source/_posts/zi-ding-yi-jian-pan-he-shu-ru-kuang.md","hash":"0e73a8e4fd0d75567c7e80cc53c4d84f6245ee79","modified":1592891963900},{"_id":"source/images/bird_32_gray.png","hash":"d14826ea3c724cbac219497e7221019655c657d2","modified":1459398530000},{"_id":"source/images/bird_32_gray_fail.png","hash":"e32c5c1bfde4a0027b5582cb4d1faf3297e45978","modified":1459398530000},{"_id":"source/images/code_bg.png","hash":"f234231d5e15a38782ae064ab6433369ab6eada7","modified":1459398530000},{"_id":"source/images/dotted-border.png","hash":"ff805a8400e9f0147ec03f8d6bf2ff6e91838f79","modified":1459398530000},{"_id":"source/images/email.png","hash":"8360a8ceb0144288af7efbad8a7f4d7f83fa7fdd","modified":1459398530000},{"_id":"source/images/line-tile.png","hash":"54f2fb96fea67bc6f88c8dc7c0831ff25f12d476","modified":1459398530000},{"_id":"source/images/rss.png","hash":"b1ade4d8ba253eea4687174e43e76628fb36d86b","modified":1459398530000},{"_id":"source/images/noise.png","hash":"2b45462f5b06fb5d719e858c231ffa8c05302f55","modified":1459398530000},{"_id":"source/images/rss555.png","hash":"b1ade4d8ba253eea4687174e43e76628fb36d86b","modified":1459398530000},{"_id":"source/images/runtime_class2.png","hash":"560d034cd3fc35ab0a2f7121211c04c58c8edccb","modified":1459398530000},{"_id":"source/images/runtime_class3.png","hash":"1971038426615b7eae0a257d61baccbbcd99ffc7","modified":1459398530000},{"_id":"source/images/runtime_class6.png","hash":"5fd5a1812ae3d9e10a0e14f190b831fdff34a653","modified":1459398530000},{"_id":"source/images/runtime_method3.png","hash":"a28d7d02a235595bbef41a8843d983945a1834dd","modified":1459398530000},{"_id":"source/images/runtime_method4.png","hash":"5b7ecc882fc7d346104c1597c2b71d79183c9ff9","modified":1459398530000},{"_id":"source/images/runtime_variable1.png","hash":"3bf2f07a243c08fbf923353174c43802be69a244","modified":1459398530000},{"_id":"source/images/runtime_variable3.png","hash":"2af2bb2cbebdf0450f54342f7830c79a872afa71","modified":1459398530000},{"_id":"source/images/runtime_variable2.png","hash":"a1f0b491726d57c0f89f522226a8a4404e7166ff","modified":1459398530000},{"_id":"source/images/search.png","hash":"75432e9810d369aba1bb623cf980527490b559d1","modified":1459398530000},{"_id":"source/images/webimage_flow.png","hash":"23a4fa696e719427976557846b19bf305ad72844","modified":1459398530000},{"_id":"themes/jacman/languages/default.yml","hash":"eea72d6138497287c0b3f4bd93e4f6f62b7aff37","modified":1577957496434},{"_id":"themes/jacman/languages/zh-CN.yml","hash":"1f3b9d00dd4322352b0c9c82a76dc9865a616d41","modified":1577957496434},{"_id":"themes/jacman/languages/zh-TW.yml","hash":"61a02ba818d641579a86fcd7f5926ab1e6ab5f70","modified":1577957496434},{"_id":"themes/jacman/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1577957496441},{"_id":"themes/jacman/layout/archive.ejs","hash":"a18842e3d719fe3ca9b977a6995f8facc75c8673","modified":1577957496440},{"_id":"themes/jacman/layout/category.ejs","hash":"9b740fc33f6f028df60f0bc4312bf3ebd03aa8ea","modified":1577957496440},{"_id":"themes/jacman/layout/index.ejs","hash":"75cef2172c286994af412e11ab7f4f5a0daaf1f5","modified":1577957496440},{"_id":"themes/jacman/layout/layout.ejs","hash":"5b4289a4526899809b9c2facea535367ff51ba2b","modified":1577957496440},{"_id":"themes/jacman/layout/page.ejs","hash":"bd6bbf2ea8e183bd835867ff617dc6366b56748c","modified":1577957496440},{"_id":"themes/jacman/layout/post.ejs","hash":"3114134775bdde5a83cf14feb019606fa2b2b2be","modified":1577957496441},{"_id":"themes/jacman/layout/tag.ejs","hash":"45150a2365768b6b67880193c9264ad2bb4814db","modified":1577957496441},{"_id":"source/images/mvvm1.png","hash":"c58ad33b17c1901ed18c97becdff1e921b134a55","modified":1459398530000},{"_id":"source/images/mvvm2.png","hash":"65afdb0941af2e3c396313ca3521e53f4c10ca9a","modified":1459398530000},{"_id":"source/images/runtime_method1.png","hash":"fccd2da365734131b2726ac65ab1f15149c16267","modified":1465299120000},{"_id":"source/images/runtime_method7.png","hash":"5e542c5a3572154bd56949968a8b67768edffcc0","modified":1459398530000},{"_id":"source/images/runtime_variable4.png","hash":"99c8984cb26b5bf331072c1488cb3c1ccefa0846","modified":1459398530000},{"_id":"source/images/sdwebimage_ifelse.png","hash":"af2701f8ddbc7d05b1625ee5a413b0b071cb2da1","modified":1459398530000},{"_id":"source/images/thread4.png","hash":"95b5b575c931b98ca85a8735d437e4f7d02e50ed","modified":1459398530000},{"_id":"source/images/downloadmanager.jpg","hash":"f457e41e953c528d2fd252c327a5c681e799987f","modified":1459398530000},{"_id":"source/images/runtime_class5.png","hash":"e29a7e2a32818967196188e4cd327f046d8879ee","modified":1459398530000},{"_id":"source/images/runtime_variable5.png","hash":"f5b9295f170e56f6daadedd388ec5e423b41671e","modified":1459398530000},{"_id":"themes/jacman/layout/_partial/after_footer.ejs","hash":"3e1f1d8dc38b1e17c523d1176f7ee503fc648045","modified":1577957496434},{"_id":"themes/jacman/layout/_partial/analytics.ejs","hash":"697601996220fe0a0f9cd628be67dec3c86ae2aa","modified":1577957496434},{"_id":"themes/jacman/layout/_partial/archive.ejs","hash":"2c7395e7563fe016521712a645c28a13f952d52a","modified":1577957496434},{"_id":"themes/jacman/layout/_partial/article.ejs","hash":"261ecacb8456f4cb972632b6a9103860fa63b9a3","modified":1577957496435},{"_id":"themes/jacman/layout/_partial/article_row.ejs","hash":"4cb855d91ece7f67b2ca0992fffa55472d0b9c93","modified":1577957496435},{"_id":"themes/jacman/layout/_partial/categories.ejs","hash":"8a52d0344d5bce1925cf586ed73c11192925209b","modified":1577957496435},{"_id":"themes/jacman/layout/_partial/footer.ejs","hash":"5f80bf6c6ddcf8c28c4599cd1540b14b25d54f18","modified":1577957496435},{"_id":"themes/jacman/layout/_partial/head.ejs","hash":"761941be4922cd3c177c8130296b909bf7db5c09","modified":1577957496435},{"_id":"themes/jacman/layout/_partial/header.ejs","hash":"18515612344ff048b9372b91b7eef6f3b143801f","modified":1577957496435},{"_id":"themes/jacman/layout/_partial/mathjax.ejs","hash":"d42994ac696f52ba99c1cbac382cd76d5b04a3e8","modified":1577957496435},{"_id":"themes/jacman/layout/_partial/pagination.ejs","hash":"6146ac37dfb4f8613090bc52b3fc8cfa911a186a","modified":1577957496435},{"_id":"themes/jacman/layout/_partial/search.ejs","hash":"1083824a6c6c3df02767f2f3b727aee78ebb76ec","modified":1577957496437},{"_id":"themes/jacman/layout/_partial/sidebar.ejs","hash":"c4f527fff0070fbe65919053a16224412317f40d","modified":1577957496437},{"_id":"themes/jacman/layout/_partial/tags.ejs","hash":"b33b2b5d08f1d53a8de25a95f660f7f1cea7b3cb","modified":1577957496438},{"_id":"themes/jacman/layout/_partial/tinysou_search.ejs","hash":"06ecddc8a9d40b480fe2e958af1dab857a9d5441","modified":1577957496438},{"_id":"themes/jacman/layout/_partial/totop.ejs","hash":"bea5bb7cb9350b8af7d97a8d223af63a5b30ab78","modified":1577957496438},{"_id":"themes/jacman/layout/_widget/archive.ejs","hash":"39ea6b7888406fbd1b4cf236ebd718e881493374","modified":1577957496438},{"_id":"themes/jacman/layout/_widget/category.ejs","hash":"c1fae96b5053da021bcc04ab2ce5c2c8d30de8a2","modified":1577957496438},{"_id":"themes/jacman/layout/_widget/douban.ejs","hash":"e3820c36169e88663e6c9177666b2904c1ce47e6","modified":1577957496438},{"_id":"themes/jacman/layout/_widget/github-card.ejs","hash":"d49a8d609c5fbafa9e7ad328163565af03306519","modified":1577957496439},{"_id":"themes/jacman/layout/_widget/links.ejs","hash":"e49868063439c2092cdf9a8ec82cc295b0e42f66","modified":1577957496439},{"_id":"themes/jacman/layout/_widget/rss.ejs","hash":"0a4b5f2a2e36a1d504fe2e7c6c8372cbb4628aab","modified":1577957496439},{"_id":"themes/jacman/layout/_widget/tag.ejs","hash":"7e82ad9c916b9ce871b2f65ce8f283c5ba47947b","modified":1577957496439},{"_id":"themes/jacman/layout/_widget/tagcloud.ejs","hash":"10a1001189d5c28ce6d42494563b9637c302b454","modified":1577957496439},{"_id":"themes/jacman/layout/_widget/weibo.ejs","hash":"a31c2b223d0feb2a227e203cac9e5d13b7d328a8","modified":1577957496440},{"_id":"themes/jacman/source/css/style.styl","hash":"a0a45af186a72ae68979bf26f2a5d0d2303189ca","modified":1577957496446},{"_id":"themes/jacman/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1577957496446},{"_id":"themes/jacman/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1577957496446},{"_id":"themes/jacman/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1577957496446},{"_id":"themes/jacman/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1577957496447},{"_id":"themes/jacman/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1577957496447},{"_id":"themes/jacman/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1577957496447},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1577957496449},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1577957496451},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1577957496451},{"_id":"themes/jacman/source/font/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1577957496453},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.eot","hash":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1577957496453},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.ttf","hash":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1577957496456},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.woff","hash":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1577957496457},{"_id":"themes/jacman/source/font/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1577957496458},{"_id":"themes/jacman/source/font/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1577957496461},{"_id":"themes/jacman/source/font/fontdiao.eot","hash":"9544a0d7ba208989302bc4da5a184faeb0e883c9","modified":1577957496462},{"_id":"themes/jacman/source/font/fontdiao.ttf","hash":"ee9fd7be2493c9bf6d2841044e69a0830d9d3fab","modified":1577957496464},{"_id":"themes/jacman/source/img/author.jpg","hash":"2a292e681b4c6c975eec9c8c356d99647a465542","modified":1577957496466},{"_id":"themes/jacman/source/font/fontdiao.woff","hash":"71f54eb6e98aa28cafeb04aab71c0e5b349ea89f","modified":1577957496465},{"_id":"themes/jacman/source/img/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1577957496468},{"_id":"themes/jacman/source/img/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1577957496469},{"_id":"themes/jacman/source/img/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1577957496469},{"_id":"themes/jacman/source/img/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1577957496469},{"_id":"themes/jacman/source/img/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1577957496469},{"_id":"themes/jacman/source/img/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1577957496469},{"_id":"themes/jacman/source/img/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1577957496470},{"_id":"themes/jacman/source/img/favicon.ico","hash":"2d22a3e0c7905a894e832c831dd91c29c209c7a5","modified":1577957496470},{"_id":"themes/jacman/source/img/jacman.jpg","hash":"0ba14a4a5e3be012826fc713c33479912126d34e","modified":1577957496470},{"_id":"themes/jacman/source/img/logo.svg","hash":"9ae38f7225c38624faeb7b74996efa9de7bf065b","modified":1577957496470},{"_id":"themes/jacman/source/img/scrollup.png","hash":"2137d4f1739aa8aa3fcb0348c3ddf1e41d62f2e3","modified":1577957496470},{"_id":"themes/jacman/source/js/gallery.js","hash":"f8a4ba7fb8349cca374a3c69fff9b2bf21f742ed","modified":1577957496471},{"_id":"themes/jacman/source/js/jquery.imagesloaded.min.js","hash":"4109837b1f6477bacc6b095a863b1b95b1b3693f","modified":1577957496471},{"_id":"themes/jacman/source/js/jquery.qrcode-0.12.0.min.js","hash":"57c3987166a26415a71292162690e82c21e315ad","modified":1577957496472},{"_id":"themes/jacman/source/js/totop.js","hash":"cad23c5ea7163d1e5c05a0fd3ef9233469da10cb","modified":1577957496472},{"_id":"source/images/mvvm3.png","hash":"0829a5e8ce5441e378940341b05870eb1e7340bb","modified":1459398530000},{"_id":"source/images/runtime_class4.png","hash":"070a7f9fad3455237e2cf6b71af1c94b8ccf5e7e","modified":1459398530000},{"_id":"source/images/runtime_forwarding1.png","hash":"c216ac56067935e7fdd3c6cced8babaf9bc934de","modified":1459398530000},{"_id":"source/images/runtime_method5.png","hash":"af2847340df0c316af24be10db71285c6c486e38","modified":1465299148000},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.svg","hash":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53","modified":1577957496455},{"_id":"themes/jacman/source/font/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1577957496460},{"_id":"themes/jacman/source/font/fontdiao.svg","hash":"334a94e6a66a8b089be7315d876bec93efe38d2b","modified":1577957496464},{"_id":"themes/jacman/source/img/logo.png","hash":"fd08d12d1fa147cf894e8f8327e38f1758de32ed","modified":1577957496470},{"_id":"themes/jacman/source/js/jquery-2.0.3.min.js","hash":"a0ae3697b0ab8c0e8bd3186c80db42abd6d97a8d","modified":1577957496471},{"_id":"source/images/github_url.png","hash":"ff4f85fc13132336bf38dc4a409fa2ea524d37ee","modified":1459398530000},{"_id":"source/images/runtime_method8.png","hash":"ce697e05ada024759b213a3bc4d9cd2b16333c18","modified":1459398530000},{"_id":"source/images/thread1.png","hash":"6ccde81b1bdde074585ebf03f23f4a32713f744c","modified":1459398530000},{"_id":"themes/jacman/layout/_partial/post/article.ejs","hash":"b09e3acea7076e1f01dfe0c2295e19951ea09437","modified":1577957496436},{"_id":"themes/jacman/layout/_partial/post/catetags.ejs","hash":"0e37bababc8f4659f5b59a552a946b46d89e4158","modified":1577957496436},{"_id":"themes/jacman/layout/_partial/post/comment.ejs","hash":"548c69c570d5aac567bc6f088e9ee0c02223b088","modified":1577957496436},{"_id":"themes/jacman/layout/_partial/post/footer.ejs","hash":"b12ec08a5845a3d8c01257614f1dfead879c87d2","modified":1577957496436},{"_id":"themes/jacman/layout/_partial/post/gallery.ejs","hash":"fafc2501d7e65983b0f5c2b58151ca12e57c0574","modified":1577957496436},{"_id":"themes/jacman/layout/_partial/post/header.ejs","hash":"36a705942b691abe0d643ea8afa339981b32f6f2","modified":1577957496436},{"_id":"themes/jacman/layout/_partial/post/jiathis.ejs","hash":"d7f5960039ac74924559ab6ba03c64457b8f0966","modified":1577957496436},{"_id":"themes/jacman/layout/_partial/post/pagination.ejs","hash":"7de9c07a4c968429a8088c31a28b7f3a993ded1b","modified":1577957496437},{"_id":"themes/jacman/source/css/_base/font.styl","hash":"c8a0faf43b08e37ad07a5669db76d595da966159","modified":1577957496442},{"_id":"themes/jacman/source/css/_base/public.styl","hash":"f016180726019927b9a835ed01e04d153f27a149","modified":1577957496443},{"_id":"themes/jacman/source/css/_base/variable.styl","hash":"cb652eb83c28a208743fabab92de896f8b7cbf7b","modified":1577957496443},{"_id":"themes/jacman/source/css/_partial/article.styl","hash":"c69641b4a34a8c62986b335414413dbde26de25e","modified":1577957496443},{"_id":"themes/jacman/source/css/_partial/aside.styl","hash":"506fde1d67ce750452cbe84bee01a19c7d027c5e","modified":1577957496444},{"_id":"themes/jacman/source/css/_partial/duoshuo.styl","hash":"e85f1192283f043115c272a9deb3cb6ced793990","modified":1577957496444},{"_id":"themes/jacman/source/css/_partial/footer.styl","hash":"1911613a19b605a58f801c21b03b5d4c83b90f9c","modified":1577957496444},{"_id":"themes/jacman/source/css/_partial/gallery.styl","hash":"7246809f4ce3166ec1b259bf475cae1a48e29aad","modified":1577957496445},{"_id":"themes/jacman/source/css/_partial/header.styl","hash":"5121ceb712be3f2dde98b8b6e589b546e19eab8f","modified":1577957496445},{"_id":"themes/jacman/source/css/_partial/helper.styl","hash":"1136600932b97534b88465bf05ef313630b2de3d","modified":1577957496445},{"_id":"themes/jacman/source/css/_partial/index.styl","hash":"a72ff14effd276015264f870f47ed8f8413bf5d3","modified":1577957496445},{"_id":"themes/jacman/source/css/_partial/totop.styl","hash":"96363d7c5aaed5f649667fc0752a62620a67e872","modified":1577957496445},{"_id":"themes/jacman/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1577957496447},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1577957496447},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1577957496448},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1577957496448},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1577957496448},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1577957496448},{"_id":"source/images/sdwebimage.jpg","hash":"a49b47aa2cd0cb57b46c977798c583e0cb93f0a7","modified":1459398530000},{"_id":"source/images/thread3.png","hash":"c4c666fa5fc1b0d275921cdc63b99273908ea0eb","modified":1459398530000},{"_id":"source/images/runtime_method2.png","hash":"fc3c4a8d6a5fe9135bef9a2416bc460f445e939e","modified":1465299133000},{"_id":"source/images/thread2.png","hash":"aae4f6bfe10146d4ebcfcd29a36be9e136472316","modified":1459398530000},{"_id":"themes/jacman/source/css/_base/highlight/highlight.styl","hash":"91b62bfc58390b0d5db782a75be6965ee3665eb3","modified":1577957496442},{"_id":"themes/jacman/source/css/_base/highlight/theme.styl","hash":"e3a59bd427ba37a54ead9eeba9a5356b3f720a48","modified":1577957496443},{"_id":"themes/jacman/source/font/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1577957496459},{"_id":"themes/jacman/source/img/banner.jpg","hash":"5104860c4f8b2e84ef734ba6c37fe7a288bf0d74","modified":1577957496468},{"_id":"source/images/runtime_forwarding2.png","hash":"36206ffa0d70b518da792f7f02bec7145ea744ce","modified":1465299305000},{"_id":"source/images/runtime_method6.png","hash":"9077a42dd48d137dd1ef81a044a70f9863dc73e1","modified":1465299172000},{"_id":"source/images/mvc.png","hash":"944e58f4c9fd3e2710ee042f031519c18aedc389","modified":1459398530000},{"_id":"source/images/runtime_forwarding3.png","hash":"8127a72357b4e8fb8a305dc6054e3f5da42f47b7","modified":1465299317000},{"_id":"source/images/runtime_class1.png","hash":"bbd8a3290cfe6ba42c786b4ce9ed041838beef96","modified":1459398530000},{"_id":"public/2019/12/31/first-blog-test/index.html","hash":"1d4b2a57dbc37449b1f3e86581e75438b44f659b","modified":1592807776011},{"_id":"public/2016/05/11/ji-lu-yi-xie-hao-de-wang-zhan-huo-bo-ke/index.html","hash":"c12f150c730f9a2cc8ce976059b25f22dbb6d51c","modified":1593336656177},{"_id":"public/2016/02/20/ji-zhu-bo-ke/index.html","hash":"f04f82e98fb28c7672f1a42ba461fe10b959bfd8","modified":1593336656177},{"_id":"public/archives/index.html","hash":"950ede26976a8d8b518b0847de68b277423247a6","modified":1593340118690},{"_id":"public/archives/page/2/index.html","hash":"c6296574b9c2acbe9c5f250061c4a0befb61fe9a","modified":1593340118690},{"_id":"public/archives/2016/index.html","hash":"61131f1a2616ae6e00be68cb6b49b092d98478cb","modified":1593340118690},{"_id":"public/archives/2016/page/2/index.html","hash":"929c2c8c233382e81de680cdd940face09038f86","modified":1593340118690},{"_id":"public/archives/2016/02/index.html","hash":"1dd3aa14f8339ec859863872ddfd14ff4ba357d6","modified":1593336656177},{"_id":"public/archives/2016/03/index.html","hash":"507d7eb06f6c409cf886e2c4abfda9f8dfaf413f","modified":1593336656177},{"_id":"public/archives/2016/05/index.html","hash":"a5a9d39732d35cd5a2935899777aa511cf4a1a58","modified":1593336656177},{"_id":"public/archives/2016/06/index.html","hash":"8451a652b01dd0264c2433d3cbab35b8083a829d","modified":1593336656177},{"_id":"public/archives/2019/index.html","hash":"8c6aac00fe964037cbefbaa8c2ba6554a030b9e5","modified":1593340118690},{"_id":"public/archives/2019/12/index.html","hash":"da0fa53d3a2313e411056a3f708dd6cbe47dd04b","modified":1593340118690},{"_id":"public/archives/2020/index.html","hash":"34975fc6b13a5ffd4815f9d6e21ddb48b76574c8","modified":1593336656177},{"_id":"public/archives/2020/01/index.html","hash":"9373ce1781fde688472ff42b4cef358e414d7e3e","modified":1593336656177},{"_id":"public/index.html","hash":"d2a075da03fa30ffa4da4de3a14f97b7a147d830","modified":1593340118690},{"_id":"public/page/2/index.html","hash":"ce398d6547350fc12355c5ddfd16d665eb13f575","modified":1593340118690},{"_id":"public/categories/OC/index.html","hash":"9abffb8a1beda312fa371f8c521e4d8a7f872b37","modified":1593336656177},{"_id":"public/categories/开发/index.html","hash":"072d30b6d80c88b8da85756ad7f5fb8d102e25aa","modified":1592807776011},{"_id":"public/categories/软件架构/index.html","hash":"4b928590e6c756fef500ec1b11dc6de6d095111a","modified":1593336656177},{"_id":"public/categories/多线程/index.html","hash":"fe78a1d3f12756e3d0739c2b8a2a280343459989","modified":1593336656177},{"_id":"public/categories/runtime/index.html","hash":"7d5dc321ce0042f8ff64b5888a54884620d59a49","modified":1593336656177},{"_id":"public/categories/架构/index.html","hash":"d26d9d0032b2a4c642098d657a075ebda1f1b971","modified":1593336656177},{"_id":"public/categories/图片下载/index.html","hash":"7f8bc02b2b8ef816ee097009891ce4a90521653c","modified":1593336656177},{"_id":"public/categories/日历/index.html","hash":"41a3a2dba3a8b1377d084b8bdfbb66bae09c88e2","modified":1593336656177},{"_id":"public/categories/键盘/index.html","hash":"2b4f3217baa80441139dcf39ff7a9f8daa99bb88","modified":1593336656177},{"_id":"public/categories/macdown/index.html","hash":"04418c9f100daed22ed4f57aa63e668a796655ca","modified":1593336656177},{"_id":"public/tags/测滑返回/index.html","hash":"c0c6018f95d95f19b2179e7915a802e9df9a60a8","modified":1592807776011},{"_id":"public/tags/动画/index.html","hash":"337235da0e288b5ee4bcc7be30f2bdb5e1209025","modified":1592807776011},{"_id":"public/tags/MVVM/index.html","hash":"713506a00713d5e867c3e57ce2584853a038de9c","modified":1593336656177},{"_id":"public/tags/线程安全/index.html","hash":"af9053b434b89768b4d32184e409c8d00bcc1913","modified":1593336656177},{"_id":"public/tags/线程的分类/index.html","hash":"046b187c6b26c6f252c283e7ade116007511b30d","modified":1593336656177},{"_id":"public/tags/variable/index.html","hash":"cb7575e85b670b4df65c8f82bbdcb6f9d0078eba","modified":1593336656177},{"_id":"public/tags/class/index.html","hash":"ad3bdd2948c494ed822d528c43918fb5c41c6895","modified":1593336656177},{"_id":"public/tags/运行时/index.html","hash":"7e60027b5b30150d62f2f5142fa3b1b34c432a8e","modified":1593336656177},{"_id":"public/tags/method/index.html","hash":"30334b914cc7dbc48a26a2417d047a304c2436f7","modified":1593336656177},{"_id":"public/tags/消息转发/index.html","hash":"916ae20edc39fe0d1bba9be7473006bc099388ab","modified":1593336656177},{"_id":"public/tags/sdwebimage/index.html","hash":"74699877987cc8e35541c923ac46a36ec42d1288","modified":1593336656177},{"_id":"public/tags/NSCalendar/index.html","hash":"79ebe38d990b70c219e651a7e600f47718d4ebe8","modified":1593336656177},{"_id":"public/tags/UITextField/index.html","hash":"470783c71cc22d715c728710d059eac923dac9ec","modified":1593336656177},{"_id":"public/tags/inputView/index.html","hash":"20905bf3787e7e8de2b261d0258030ef27fc01c8","modified":1593336656177},{"_id":"public/tags/macdown/index.html","hash":"8e2932d956e585676310b99d1efd95294625db3b","modified":1593336656177},{"_id":"public/2020/01/03/first-blog/index.html","hash":"85653d580832e9ce820559dfae3c6b8102c01139","modified":1592807776011},{"_id":"public/2019/12/31/hello-world/index.html","hash":"771ceee5a74c85ecf800008ec0a886f23289d52e","modified":1592807776011},{"_id":"public/2016/06/07/zi-ding-yi-jian-pan-he-shu-ru-kuang/index.html","hash":"7ef3929978843fb018d47f50c8928956cb0fbe1b","modified":1593340118690},{"_id":"public/2016/05/31/shi-jian-ri-li-kong-jian/index.html","hash":"f95beb22ab7f544fd99671013294fd207c36ea92","modified":1593336656177},{"_id":"public/2016/03/21/multi-thread/index.html","hash":"fd06a735949e5a7cd56975a41ed485e5000b22d5","modified":1593336656177},{"_id":"public/2016/03/08/ruan-jian-jia-gou-mvvm/index.html","hash":"fead7579b82605e0573627672f037ba6ca171603","modified":1593336656177},{"_id":"public/2016/02/29/runtimeyun-xing-shi-zhi-xiao-xi-zhuan-fa-message-forwarding/index.html","hash":"e47f1c88159cddb6ff13faab00f41174dcec2c97","modified":1593336656177},{"_id":"public/2016/02/29/runtimeyun-xing-shi-zhi-fang-fa-method/index.html","hash":"680142f31693bd5988638c4969eab8da254edf91","modified":1593336656177},{"_id":"public/2016/02/29/runtimeyun-xing-shi-zhi-bian-liang/index.html","hash":"49c026f7cc95bf59b979878279fcb074077929af","modified":1593336656177},{"_id":"public/2016/02/29/runtimeyun-xing-shi-zhi-class/index.html","hash":"ad89b18d73348cef52e4355cc9a1095691ddcd12","modified":1593336656177},{"_id":"public/2016/02/29/runtimeyun-xing-shi-de-li-jie/index.html","hash":"1d1b510c3948dd63e546b01274a34eda13672dad","modified":1593336656177},{"_id":"public/2016/02/21/sdwebimageyuan-ma-fen-xi/index.html","hash":"62553571ea1fc9b7ae61dc50715615f23aa77520","modified":1593336656177},{"_id":"public/2016/02/15/ji-yu-octopressde-github-pageschuang-jian/index.html","hash":"9af492ea8a6319bd9a1814668f68f18614692889","modified":1593336656177},{"_id":"public/images/bird_32_gray.png","hash":"d14826ea3c724cbac219497e7221019655c657d2","modified":1578045479807},{"_id":"public/images/bird_32_gray_fail.png","hash":"e32c5c1bfde4a0027b5582cb4d1faf3297e45978","modified":1578045479807},{"_id":"public/images/code_bg.png","hash":"f234231d5e15a38782ae064ab6433369ab6eada7","modified":1578045479807},{"_id":"public/images/email.png","hash":"8360a8ceb0144288af7efbad8a7f4d7f83fa7fdd","modified":1578045479807},{"_id":"public/images/dotted-border.png","hash":"ff805a8400e9f0147ec03f8d6bf2ff6e91838f79","modified":1578045479807},{"_id":"public/images/line-tile.png","hash":"54f2fb96fea67bc6f88c8dc7c0831ff25f12d476","modified":1578045479807},{"_id":"public/images/rss.png","hash":"b1ade4d8ba253eea4687174e43e76628fb36d86b","modified":1578045479807},{"_id":"public/images/rss555.png","hash":"b1ade4d8ba253eea4687174e43e76628fb36d86b","modified":1578045479807},{"_id":"public/images/noise.png","hash":"2b45462f5b06fb5d719e858c231ffa8c05302f55","modified":1578045479807},{"_id":"public/images/runtime_class2.png","hash":"560d034cd3fc35ab0a2f7121211c04c58c8edccb","modified":1578045479807},{"_id":"public/images/runtime_method4.png","hash":"5b7ecc882fc7d346104c1597c2b71d79183c9ff9","modified":1578045479807},{"_id":"public/images/runtime_class6.png","hash":"5fd5a1812ae3d9e10a0e14f190b831fdff34a653","modified":1578045479807},{"_id":"public/images/runtime_variable1.png","hash":"3bf2f07a243c08fbf923353174c43802be69a244","modified":1578045479807},{"_id":"public/images/runtime_variable3.png","hash":"2af2bb2cbebdf0450f54342f7830c79a872afa71","modified":1578045479807},{"_id":"public/images/runtime_method3.png","hash":"a28d7d02a235595bbef41a8843d983945a1834dd","modified":1578045479807},{"_id":"public/images/runtime_class3.png","hash":"1971038426615b7eae0a257d61baccbbcd99ffc7","modified":1578045479807},{"_id":"public/images/runtime_variable2.png","hash":"a1f0b491726d57c0f89f522226a8a4404e7166ff","modified":1578045479807},{"_id":"public/images/search.png","hash":"75432e9810d369aba1bb623cf980527490b559d1","modified":1578045479807},{"_id":"public/images/webimage_flow.png","hash":"23a4fa696e719427976557846b19bf305ad72844","modified":1578045479807},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1592806967277},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1592806967277},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1592806967277},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1592806967277},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1592806967277},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1592806967277},{"_id":"public/font/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1578045479807},{"_id":"public/font/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1578045479807},{"_id":"public/font/coveredbyyourgrace-webfont.eot","hash":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1578045479807},{"_id":"public/font/coveredbyyourgrace-webfont.ttf","hash":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1578045479807},{"_id":"public/font/coveredbyyourgrace-webfont.woff","hash":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1578045479807},{"_id":"public/font/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1578045479807},{"_id":"public/font/fontdiao.eot","hash":"9544a0d7ba208989302bc4da5a184faeb0e883c9","modified":1578045479807},{"_id":"public/font/fontdiao.ttf","hash":"ee9fd7be2493c9bf6d2841044e69a0830d9d3fab","modified":1578045479807},{"_id":"public/img/author.jpg","hash":"2a292e681b4c6c975eec9c8c356d99647a465542","modified":1578045479807},{"_id":"public/font/fontdiao.woff","hash":"71f54eb6e98aa28cafeb04aab71c0e5b349ea89f","modified":1578045479807},{"_id":"public/img/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1578045479807},{"_id":"public/img/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1578045479807},{"_id":"public/img/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1578045479807},{"_id":"public/img/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1578045479807},{"_id":"public/img/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1578045479807},{"_id":"public/img/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1578045479807},{"_id":"public/img/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1578045479807},{"_id":"public/img/favicon.ico","hash":"2d22a3e0c7905a894e832c831dd91c29c209c7a5","modified":1578045479807},{"_id":"public/img/jacman.jpg","hash":"0ba14a4a5e3be012826fc713c33479912126d34e","modified":1578045479807},{"_id":"public/img/logo.svg","hash":"9ae38f7225c38624faeb7b74996efa9de7bf065b","modified":1578045479807},{"_id":"public/img/scrollup.png","hash":"2137d4f1739aa8aa3fcb0348c3ddf1e41d62f2e3","modified":1578045479807},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1592806967277},{"_id":"public/images/mvvm1.png","hash":"c58ad33b17c1901ed18c97becdff1e921b134a55","modified":1578045479807},{"_id":"public/images/mvvm2.png","hash":"65afdb0941af2e3c396313ca3521e53f4c10ca9a","modified":1578045479807},{"_id":"public/images/runtime_method7.png","hash":"5e542c5a3572154bd56949968a8b67768edffcc0","modified":1578045479807},{"_id":"public/images/runtime_method1.png","hash":"fccd2da365734131b2726ac65ab1f15149c16267","modified":1578045479807},{"_id":"public/images/runtime_variable4.png","hash":"99c8984cb26b5bf331072c1488cb3c1ccefa0846","modified":1578045479807},{"_id":"public/images/sdwebimage_ifelse.png","hash":"af2701f8ddbc7d05b1625ee5a413b0b071cb2da1","modified":1578045479807},{"_id":"public/images/thread4.png","hash":"95b5b575c931b98ca85a8735d437e4f7d02e50ed","modified":1578045479807},{"_id":"public/images/downloadmanager.jpg","hash":"f457e41e953c528d2fd252c327a5c681e799987f","modified":1578045479807},{"_id":"public/font/coveredbyyourgrace-webfont.svg","hash":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53","modified":1578045479807},{"_id":"public/font/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1578045479807},{"_id":"public/font/fontdiao.svg","hash":"334a94e6a66a8b089be7315d876bec93efe38d2b","modified":1578045479807},{"_id":"public/img/logo.png","hash":"fd08d12d1fa147cf894e8f8327e38f1758de32ed","modified":1578045479807},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1592806967277},{"_id":"public/js/gallery.js","hash":"f8a4ba7fb8349cca374a3c69fff9b2bf21f742ed","modified":1578045479807},{"_id":"public/js/jquery.imagesloaded.min.js","hash":"4109837b1f6477bacc6b095a863b1b95b1b3693f","modified":1578045479807},{"_id":"public/js/totop.js","hash":"cad23c5ea7163d1e5c05a0fd3ef9233469da10cb","modified":1578045479807},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1592806967277},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1592806967277},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1592806967277},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1592806967277},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1592806967277},{"_id":"public/css/style.css","hash":"d4cfa90089c78a8b791252afae9fafa3b5658900","modified":1592807057601},{"_id":"public/images/runtime_class5.png","hash":"e29a7e2a32818967196188e4cd327f046d8879ee","modified":1578045479807},{"_id":"public/images/runtime_class4.png","hash":"070a7f9fad3455237e2cf6b71af1c94b8ccf5e7e","modified":1578045479807},{"_id":"public/images/runtime_forwarding1.png","hash":"c216ac56067935e7fdd3c6cced8babaf9bc934de","modified":1578045479807},{"_id":"public/images/sdwebimage.jpg","hash":"a49b47aa2cd0cb57b46c977798c583e0cb93f0a7","modified":1578045479807},{"_id":"public/images/runtime_variable5.png","hash":"f5b9295f170e56f6daadedd388ec5e423b41671e","modified":1578045479807},{"_id":"public/images/thread1.png","hash":"6ccde81b1bdde074585ebf03f23f4a32713f744c","modified":1578045479807},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1592806967277},{"_id":"public/js/jquery.qrcode-0.12.0.min.js","hash":"57c3987166a26415a71292162690e82c21e315ad","modified":1578045479807},{"_id":"public/images/mvvm3.png","hash":"0829a5e8ce5441e378940341b05870eb1e7340bb","modified":1578045479807},{"_id":"public/images/runtime_method8.png","hash":"ce697e05ada024759b213a3bc4d9cd2b16333c18","modified":1578045479807},{"_id":"public/img/banner.jpg","hash":"5104860c4f8b2e84ef734ba6c37fe7a288bf0d74","modified":1578045479807},{"_id":"public/images/runtime_method5.png","hash":"af2847340df0c316af24be10db71285c6c486e38","modified":1578045479807},{"_id":"public/images/github_url.png","hash":"ff4f85fc13132336bf38dc4a409fa2ea524d37ee","modified":1578045479807},{"_id":"public/font/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1578045479807},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1592806967277},{"_id":"public/images/thread2.png","hash":"aae4f6bfe10146d4ebcfcd29a36be9e136472316","modified":1578045479807},{"_id":"public/images/runtime_forwarding2.png","hash":"36206ffa0d70b518da792f7f02bec7145ea744ce","modified":1578045479807},{"_id":"public/images/runtime_method2.png","hash":"fc3c4a8d6a5fe9135bef9a2416bc460f445e939e","modified":1578045479807},{"_id":"public/images/thread3.png","hash":"c4c666fa5fc1b0d275921cdc63b99273908ea0eb","modified":1578045479807},{"_id":"public/images/runtime_method6.png","hash":"9077a42dd48d137dd1ef81a044a70f9863dc73e1","modified":1578045479807},{"_id":"public/js/jquery-2.0.3.min.js","hash":"a0ae3697b0ab8c0e8bd3186c80db42abd6d97a8d","modified":1578045479807},{"_id":"public/images/runtime_forwarding3.png","hash":"8127a72357b4e8fb8a305dc6054e3f5da42f47b7","modified":1578045479807},{"_id":"public/images/mvc.png","hash":"944e58f4c9fd3e2710ee042f031519c18aedc389","modified":1578045479807},{"_id":"public/images/runtime_class1.png","hash":"bbd8a3290cfe6ba42c786b4ce9ed041838beef96","modified":1578045479807},{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1578045697384},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1578045697385},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1578045697385},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1578045697385},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1578045697386},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1578045697394},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1578045697386},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1578045697387},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1578045697387},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1578045697387},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1578045697388},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1578045697388},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1578045697388},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1578045697388},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1578045697388},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1578045697388},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1578045697389},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1578045697389},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1578045697393},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1578045697393},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1578045697393},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1578045697393},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1578045697393},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1578045697394},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1578045697393},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1578045697394},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1578045697389},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1578045697389},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1578045697389},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1578045697389},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1578045697390},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1578045697390},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1578045697390},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1578045697390},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1578045697390},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1578045697390},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1578045697392},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1578045697392},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1578045697392},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1578045697392},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1578045697392},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1578045697393},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1578045697394},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1578045697397},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1578045697401},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1578045697401},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1578045697402},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1578045697401},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1578045697402},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1578045697402},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1578045697402},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1578045697404},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1578045697404},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1578045697404},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1578045697405},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1578045697391},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1578045697391},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1578045697391},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1578045697391},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1578045697392},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1578045697392},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1578045697394},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1578045697395},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1578045697395},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1578045697395},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1578045697395},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1578045697395},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1578045697395},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1578045697396},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1578045697396},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1578045697396},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1578045697396},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1578045697396},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1578045697397},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1578045697397},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1578045697402},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1578045697403},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1578045697403},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1578045697399},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1578045697403},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1578045697403},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1578045697403},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1578045697399},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1578045697398},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1578045697401},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1592806967277},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1592806967277},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1592806967277},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1592806967277},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1592806967277},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1592806967277},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1592806967277},{"_id":"themes/hexo-theme-yilia/.eslintignore","hash":"df0a50b13cc00acb749226fee3cee6e0351fb1d9","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/.eslintrc.js","hash":"5696ae049de010ed3786768b0c359f14c05b5ec6","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/.editorconfig","hash":"da6d022b8f4d9c961e2f8f80677e92af8de0db4d","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/.gitignore","hash":"9c4b7d27a1e3e5efa0c8ed143a032a85d586b03b","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/.babelrc","hash":"b1b76475ac17dc9e2fa50af96c9e31eea2d0f2b4","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/README.md","hash":"1bf755806af9d8874bd22e1abbdaaa24328ef4dc","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/.gitattributes","hash":"e0f24dceeb1e6878a1dd9b01a2b9df1bc037a867","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/_config.yml","hash":"c3a1694c111e2e1f05a174bd893fe951038fbda2","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/package.json","hash":"367cb9579d35968a942c243ab248a5f5ebfaf462","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/webpack.config.js","hash":"05ba46a4ae744272f5312e684928910dccad3755","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/languages/zh-tw.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/index.ejs","hash":"a35dc900203f9d8dd863ea4c1722198d6d457ec8","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/layout.ejs","hash":"0a332bdbd3b86c231d690614687f5b97186b85d5","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source/slider.e37972.js","hash":"6dec4e220c89049037eebc44404abd8455d22ad7","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source/main.0cf68a.css","hash":"ddf6e2c6b953c2c59a3c271e6070010a4cc81cf9","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css.ejs","hash":"94dbdb02ca11849e415d54fb28546a598f2cffb1","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/script.ejs","hash":"c21381e1317db7bb157f1d182b8c088cb7cba411","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/toc.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source/main.0cf68a.js","hash":"993fadeb5f6d296e9d997a49ee20dc97333ceab7","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source/mobile.992cbe.js","hash":"01b35e71e37aa2849664eb5daf26daede2278398","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/after-footer.ejs","hash":"b86b248720ad415ec1b5fee53fb583776c776f83","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/archive-post.ejs","hash":"1f7d4819b7f67602c4a1b99871808d2160b60978","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/article.ejs","hash":"630c6ec866d056657d3d91e34b4c64eb993c0654","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/aside.ejs","hash":"8edbd7993b9b061611a193533a664e2e85eae748","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/baidu-analytics.ejs","hash":"f0e6e88f9f7eb08b8fe51449a8a3016273507924","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/css.ejs","hash":"236f8a377b2e4e35754319c3029bcd4a4115431d","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/footer.ejs","hash":"f2994e0acd1d606ebf4680afc4fa652e148ccf4e","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/head.ejs","hash":"64f092186b5a744aa1603ce22bb1d44a34446add","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/mathjax.ejs","hash":"151a1ef2173ba7b6789d349f0f8da89616cc1394","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/left-col.ejs","hash":"183d7ca4ba8e7c80694ffdc8cf39957092238346","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/mobile-nav.ejs","hash":"7fbbfabf5e29525b24ada14613c21a26789132b4","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/tools.ejs","hash":"c41341b9618e591538e1136a2d1637587c1bbd90","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/viewer.ejs","hash":"e495790b2abe2290875817e42bd505bc611d3e26","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/_core.scss","hash":"24f347a2412abbf58318369152504da9538f8d3b","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/_function.scss","hash":"93a50dd19a93485712da1f8d0a1672482dd1eabc","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/archive.scss","hash":"7d27e22ac898e8fafec14549e940c73cbea1fba8","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/article-inner.scss","hash":"d79f2d35a06de83a2a226ca790b7a0a34789c115","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/article-main.scss","hash":"3fad68bd74260326f83090b0974dd80707e7bac7","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/article-nav.scss","hash":"43e507f2a48504079afd9471353337e23ca47470","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/article.scss","hash":"0f6d61af99ed4db87f8589db1feaea7747b55963","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/aside.scss","hash":"578a67464dd0f542197f7fcee158c991db058563","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/comment.scss","hash":"cafe3834017a3bf47420f37543725025225a2c89","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/fonts.scss","hash":"97b8fba41c914145710b90091f400b845879577f","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/footer.scss","hash":"7c995410b25baaf61dfc5e148e22ca60330abcd3","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/grid.scss","hash":"849a29fcd7150214fcf7b9715fa5dc71d1f9b896","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/highlight.scss","hash":"3719994c2c9393813cc1d42b657205c368a329cb","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/left.scss","hash":"0d30c0e7cdb831c3881a017006c782f2214ac195","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/main.scss","hash":"2f86a014af93583caba78a563d9549826bf28294","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/mobile-slider.scss","hash":"f053c609d84df0dd9eee1d11ddf0c19163a456be","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/mobile.scss","hash":"ace041d72f95b419f6a5e443191703c2b62007f4","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/page.scss","hash":"bf206bb7f7d0967bc8b7fdf01b7ffc99aff9ba88","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/reward.scss","hash":"80a4fcf9171d4a33235da96ac8a2b7dcabc45dfb","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/scroll.scss","hash":"9c8dfd1c76854ef063494ca76fac6360b391ed6d","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/share.scss","hash":"150c6425f6582e7ec78a873256ce49c9930e8805","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/social.scss","hash":"724162ccf3977e70a45d189abfaa20b6e2fba87b","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/tags-cloud.scss","hash":"c8aa84fca93862d3caae77c552873b8610f33327","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/tags.scss","hash":"ac67a3c7097849206244db9b0ba91daaba017ef5","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/tools.scss","hash":"1b1aa0908e58cf942b28e3881d07c5573c4129e1","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/tooltip.scss","hash":"53d5a554bc2f38e9bb3d26400a47767013c05216","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/js/Q.js","hash":"d011af172064b6c6e0c7051d8f9879373ddac113","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/js/anm.js","hash":"4a4c5d82b09a3063f91a434388e6aa064fd7fd98","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/js/aside.js","hash":"754f771264548a6c5a8ad842908e59ae4e7ed099","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/js/browser.js","hash":"04095b38cfd4316a23f8eb14b1ffaf95f78a4260","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/js/fix.js","hash":"d6782d53c992e712af39c84e804eccaf38830b94","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/js/main.js","hash":"3894e60827c817319e43c9ff3ed045fc3d7336ce","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/js/mobile.js","hash":"4d823b039fd296d24a454eae5a798b93c44560cb","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/js/report.js","hash":"4f1d9a18a936ce40b037f636a39127dd19175b6e","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/js/share.js","hash":"b090f82cf80cba7da764753906d9e2cc2acdf30d","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/js/slider.js","hash":"e846bcc5aac9c68b93f7b8de353df54d8d29f666","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/js/util.js","hash":"8456e9d6b19532742582c99b2fb9d09e146e1c58","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/js/viewer.js","hash":"2577deb6a9fe4f5436360b2ce9afcc7f9a7f0116","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/script.ejs","hash":"4cb685f07e89dd5175c2a576e73a1a957aec5637","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/category.ejs","hash":"0809a4829aabeb4e911a3ed04ec28db4df7dfe3f","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/changyan.ejs","hash":"5f99b55980da64a723a8e14d5a7daba0d6504647","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/date.ejs","hash":"ef71c4081e866a494367575c59610e7e6339ece0","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/gitment.ejs","hash":"e68bbac9ffb1ad27b56837c9abad6ed6bb7daa0c","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/nav.ejs","hash":"1036c8e4e1a7bc935ba173744da735a0d6ed09cd","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/share.ejs","hash":"5dccfbe165b23a101f1333cc65ed8efbd197453c","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/tag.ejs","hash":"2e783e68755abb852760eb0e627a3fbb50a05a55","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/wangyiyun.ejs","hash":"ea41c462168d9697caef9485862e9cac718a12c1","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/core/_animation.scss","hash":"63a37f26276f9207405afe0f2d65339ce295bbaf","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/core/_media-queries.scss","hash":"491ab3378d5c11005ba65c607608bb36b368a9d5","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/core/_mixin.scss","hash":"3bba5c77bad5981eac859fe05c9561d580ba7fa9","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/core/_reset.scss","hash":"fab871fa93bd542e76a71a56428f2994a4aaf443","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/core/_variables.scss","hash":"fb511c505d1309249f21dc577d4ad2bad99a764f","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/fonts/iconfont.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/fonts/iconfont.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/fonts/iconfont.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1510733361000},{"_id":"themes/hexo-theme-yilia/source-src/css/fonts/iconfont.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1510733361000},{"_id":"public/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1592807776011},{"_id":"public/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1592807776011},{"_id":"public/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1592807776011},{"_id":"public/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1592807776011},{"_id":"public/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1592807776011},{"_id":"public/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1592807776011},{"_id":"public/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1592807776011},{"_id":"public/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1592807776011},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1592807776011},{"_id":"public/slider.e37972.js","hash":"6dec4e220c89049037eebc44404abd8455d22ad7","modified":1592807776011},{"_id":"public/main.0cf68a.css","hash":"ddf6e2c6b953c2c59a3c271e6070010a4cc81cf9","modified":1592807776011},{"_id":"public/main.0cf68a.js","hash":"993fadeb5f6d296e9d997a49ee20dc97333ceab7","modified":1592807776011},{"_id":"public/mobile.992cbe.js","hash":"01b35e71e37aa2849664eb5daf26daede2278398","modified":1592807776011},{"_id":"source/_posts/hexo-use.md","hash":"51e63543028095b1a2de7fd90690a5125ead622e","modified":1592811962613},{"_id":"source/_posts/macdown_intro.md","hash":"9e22a8af25187e463c8ede49cac62da4bb27a918","modified":1592812181292},{"_id":"public/archives/2016/01/index.html","hash":"f87b31bcda2b5c8110cb4d276cf1c7440826f382","modified":1593340118690},{"_id":"public/2018/01/05/hexo-use/index.html","hash":"f54c860d6b6eb9a2efc89478cede9d4c433682e0","modified":1593340118690},{"_id":"public/archives/2018/index.html","hash":"a7eb5b43570b1520c0c0f50e451fa1ad349b0dfb","modified":1593340118690},{"_id":"public/archives/2018/01/index.html","hash":"e50ea1d5138c32c1df9bdd2a1fc6e71348375dc4","modified":1593336656177},{"_id":"public/2016/01/03/macdown_intro/index.html","hash":"6dced26f09fc642ea953e8b726eee2acada8675d","modified":1592811987166},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1592811995431},{"_id":"public/2016/03/03/macdown_intro/index.html","hash":"012ac5f9b6de66481c42c06b71eadc2a639bcec1","modified":1593336656177},{"_id":"source/.DS_Store","hash":"18deceff64b840207a0cf14abb0b70bb4e1482ef","modified":1593335583828},{"_id":"source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1592816346876},{"_id":"source/_posts/apple-register.md","hash":"aad1668e29ca57a4d6d05cbc930106b02da64aff","modified":1592817993707},{"_id":"source/images/apple_3.jpg","hash":"46999ee0ece32356f370b18e03c775f51efd5183","modified":1592817739213},{"_id":"source/images/apple_4.jpg","hash":"a96ecba54a57706ae774ee36da30dd6c9433f92f","modified":1592817750610},{"_id":"source/images/apple_7.jpg","hash":"6fb9df9e19b6f1b878c1d51b9976f3394cdd12b9","modified":1592817771459},{"_id":"source/images/apple_2.jpg","hash":"9f43df8a156c2849a7d85230fb5a517196c77acf","modified":1592817728018},{"_id":"source/images/apple_1.png","hash":"6e01caa6050d0dcc7b1272680f27eea07a3c2058","modified":1592817527428},{"_id":"source/images/apple_5.png","hash":"8e338141c6f765ab28e4a01fcd9ba971844f117d","modified":1592817757657},{"_id":"source/images/apple_6.png","hash":"5d9f84c57231793ea5f34490cd234468efd61ecc","modified":1592817764849},{"_id":"public/2020/03/21/apple-register/index.html","hash":"da6060a94e1e1e761cb1955a18b65796a144062e","modified":1593336656177},{"_id":"public/archives/2020/03/index.html","hash":"d9f7294ff2a158637f0db3ac471c7ec2d074636e","modified":1593336656177},{"_id":"public/categories/iOS账号/index.html","hash":"d156fa8f0a31cfe5d5bdaedab37d348d4c946a7b","modified":1593336656177},{"_id":"public/categories/上架/index.html","hash":"876570df847535735cb19bcf19cccedd2d22bb2f","modified":1593336656177},{"_id":"public/tags/Apple/index.html","hash":"e8f886a422db00193e0ae176b8faa2c41e4fe8bf","modified":1593336656177},{"_id":"public/tags/续费/index.html","hash":"0baad4eb0da575aad068c24509cd8687d39c27ac","modified":1593336656177},{"_id":"public/images/apple_4.jpg","hash":"a96ecba54a57706ae774ee36da30dd6c9433f92f","modified":1592817998566},{"_id":"public/images/apple_7.jpg","hash":"6fb9df9e19b6f1b878c1d51b9976f3394cdd12b9","modified":1592817998566},{"_id":"public/images/apple_3.jpg","hash":"46999ee0ece32356f370b18e03c775f51efd5183","modified":1592817998566},{"_id":"public/images/apple_2.jpg","hash":"9f43df8a156c2849a7d85230fb5a517196c77acf","modified":1592817998566},{"_id":"public/images/apple_1.png","hash":"6e01caa6050d0dcc7b1272680f27eea07a3c2058","modified":1592817539677},{"_id":"public/images/apple_5.png","hash":"8e338141c6f765ab28e4a01fcd9ba971844f117d","modified":1592817998566},{"_id":"public/images/apple_6.png","hash":"5d9f84c57231793ea5f34490cd234468efd61ecc","modified":1592817998566},{"_id":"source/_posts/ios-crash.md","hash":"5065d186a8188494122a59fa023f0664dc663974","modified":1592892698744},{"_id":"public/2019/04/23/ios-crash/index.html","hash":"1c377be1561c08155c878ce55c3b1b4970a51b90","modified":1593340118690},{"_id":"public/archives/2019/04/index.html","hash":"3f423f2804f675165d6453ecbc6c102e2a810a4f","modified":1593336656177},{"_id":"public/tags/iOS/index.html","hash":"a3ae39563e99b77c1294359d64e267b9ae1a1012","modified":1593336656177},{"_id":"public/tags/crash/index.html","hash":"a8457a0f816b468d00805a7da89d510f09885acd","modified":1593336656177},{"_id":"public/categories/crash/index.html","hash":"6fa04093f9f45887af6be0efd5abe241de06b0ad","modified":1593336656177},{"_id":"public/categories/sdk/index.html","hash":"92b46375c2fe54175f6355a034c99d126da8a99e","modified":1593336656177},{"_id":"public/categories/sentry/index.html","hash":"78f656c7313ef5b87b7b6a0de7f153ff0861b4a1","modified":1593336656177},{"_id":"source/_posts/digital-signature.md","hash":"16143a0a0b00ed33175b80e57cc0481c47f484ae","modified":1592899135955},{"_id":"source/_posts/encrypt.md","hash":"ffbff4d78d662b48cd5c32c2a38643004fb20a65","modified":1592896553614},{"_id":"source/images/digital_3.png","hash":"999435512ee94fba115fd6157c4e371ecbe62ee8","modified":1592898153509},{"_id":"source/digital_4.png","hash":"4f94f4f968a1767179b38bf288bfe772b88a03bc","modified":1592898370579},{"_id":"source/images/digital_2.png","hash":"4530dc04713f1d76ddc3cd1d7ad7ab772eba2c38","modified":1592898143733},{"_id":"source/images/digital_1.png","hash":"f8d6ad94b481e94abdac79ea365e45f5bf07db98","modified":1592897621311},{"_id":"public/2018/09/11/digital-signature/index.html","hash":"ee9e7c6e69111a51e16ea0504543f4f657e16c24","modified":1593340118690},{"_id":"public/2018/09/11/encrypt/index.html","hash":"e8f65b6506263beb99f743954b0b040ef8f72f67","modified":1593336656177},{"_id":"public/categories/加密/index.html","hash":"f4bb1f08efaaf46b074c888715ffdf4ca328a16c","modified":1593336656177},{"_id":"public/categories/算法/index.html","hash":"edb5ca4de2632626b2ab54647757cb455ca78fbb","modified":1593336656177},{"_id":"public/categories/证书链/index.html","hash":"5087bf48941c5c91b636238d4ed4194d7579bda3","modified":1593336656177},{"_id":"public/categories/数字证书/index.html","hash":"e0f2adfcda7f0db00ead5fc18c2f10c442227d46","modified":1593336656177},{"_id":"public/tags/加密/index.html","hash":"025a75b5e230785b36074f03cb894cc42f7651ca","modified":1593336656177},{"_id":"public/tags/算法/index.html","hash":"f13cc13c5166b710a55ee3eaaee5ee7ed2691663","modified":1593336656177},{"_id":"public/tags/证书链/index.html","hash":"316ae046370265567e49da96c0f150e67a4b5e93","modified":1593336656177},{"_id":"public/tags/数字证书/index.html","hash":"d1cd23f704d38066e4c99f051d8771146342a3b1","modified":1593336656177},{"_id":"public/archives/2018/09/index.html","hash":"1108319f2207be8f9d014e70802e2ade36a4148a","modified":1593336656177},{"_id":"public/images/digital_3.png","hash":"999435512ee94fba115fd6157c4e371ecbe62ee8","modified":1592899149215},{"_id":"public/images/digital_2.png","hash":"4530dc04713f1d76ddc3cd1d7ad7ab772eba2c38","modified":1592899149215},{"_id":"public/digital_4.png","hash":"4f94f4f968a1767179b38bf288bfe772b88a03bc","modified":1592899149215},{"_id":"public/images/digital_1.png","hash":"f8d6ad94b481e94abdac79ea365e45f5bf07db98","modified":1592899149215},{"_id":"source/images/digital_4.png","hash":"4f94f4f968a1767179b38bf288bfe772b88a03bc","modified":1592898370579},{"_id":"public/images/digital_4.png","hash":"4f94f4f968a1767179b38bf288bfe772b88a03bc","modified":1592899179851},{"_id":"source/_posts/deeplinking.md","hash":"b1b30a118deb5be3d0d839668edeac900d6b1ede","modified":1592903418336},{"_id":"source/_posts/hot-fix.md","hash":"d3b6171c011e7f108bb2b1f1769dc0dbca165f00","modified":1592981927728},{"_id":"source/_posts/runloop.md","hash":"a24b9e81925fbf93b31bca77d2ccc449d2436ed5","modified":1592901114364},{"_id":"source/hotFix热修复/.DS_Store","hash":"26d00884fbf58f0ff3427a04e28b8b83bb3e6200","modified":1592808925000},{"_id":"source/hotFix热修复/hotfix_demo.php","hash":"e5ff4ae2105c13eb2939aa3dc7e19a986218531d","modified":1525934181000},{"_id":"source/hotFix热修复/hotfix_demo_original.php","hash":"567d91de5934518a0db276de9471ada114ae2768","modified":1525768467000},{"_id":"source/hotFix热修复/hotfix_js.php","hash":"ceae6e2c3c6775f62892fe3eb7dd5ff448644840","modified":1525927777000},{"_id":"source/hotFix热修复/hotfix_protocol.php","hash":"fbeae98f1727af9e69f4aa707f13e760d1933de7","modified":1525846871000},{"_id":"source/images/hotfix-003.png","hash":"c67afaafaefa01d6d8c79cd05619069150e3c3cb","modified":1592971359487},{"_id":"source/images/hotfix-010.png","hash":"10fbc1f047a82c7af33b670bbf6510b26fd64d55","modified":1592971359868},{"_id":"source/images/hotfix-002.png","hash":"27ae05f49628e2b39ae7e1912743d717e770fc59","modified":1592971359439},{"_id":"source/images/hotfix-004.png","hash":"203a57e6c2f92acb3a7a76bb6c3af5656d1cbf0a","modified":1592971359533},{"_id":"source/images/hotfix-005.png","hash":"58a31a3583b7047f13d116ee3310f44842b16a73","modified":1592971359583},{"_id":"source/images/hotfix-001.png","hash":"6319ce22dbbe2b68911f29ebcc1fa95629948ae1","modified":1592971359397},{"_id":"source/images/hotfix-006.png","hash":"c9e4aea3e97730d633d3593f8973e9a0d9c5ec5c","modified":1592971359644},{"_id":"source/images/hotfix-007.png","hash":"8a31533bb78159b86d788541071be9e432008acb","modified":1592971359700},{"_id":"source/images/hotfix-008.png","hash":"ac4ba51c08f2649382fa343a816ddaa26d7acf9b","modified":1592971359754},{"_id":"source/images/hotfix_5.png","hash":"d04137d635699931244c4b86dd92552219438ed1","modified":1592970146640},{"_id":"source/images/runloop.png","hash":"cd54f54f0140df931d0dfcc93290277202935266","modified":1567055775533},{"_id":"source/hotFix热修复/JSPatch-Demo/.DS_Store","hash":"d8d99d879eee98953d8bfa264aa139a7b1255a20","modified":1521546670000},{"_id":"source/hotFix热修复/JSPatch-Demo/.travis.yml","hash":"c3197813810126a0de80a4bd4c8f0d5a24a8ce25","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/.gitignore","hash":"72e5aa91f8af2fac2bbb76411ddda38ac0b36c70","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/README-CN.md","hash":"725a5fab0ce73523630170830f7cf097f84c9211","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/JSPatch.podspec","hash":"de5a981b87c3b5e86a0df49926bcdd8968e58f56","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/.DS_Store","hash":"d8d99d879eee98953d8bfa264aa139a7b1255a20","modified":1521546670000},{"_id":"source/hotFix热修复/JSPatch-Demo/LICENSE","hash":"6ff55dce85391e8634b3a300ef32ed4875528fdf","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/README.md","hash":"09baa98c512db547dba4481812b40627bb6be254","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/LICENSE","hash":"6ff55dce85391e8634b3a300ef32ed4875528fdf","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/.travis.yml","hash":"c3197813810126a0de80a4bd4c8f0d5a24a8ce25","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/.gitignore","hash":"72e5aa91f8af2fac2bbb76411ddda38ac0b36c70","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/JSPatch.podspec","hash":"de5a981b87c3b5e86a0df49926bcdd8968e58f56","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/README-CN.md","hash":"725a5fab0ce73523630170830f7cf097f84c9211","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/README.md","hash":"09baa98c512db547dba4481812b40627bb6be254","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JS/.DS_Store","hash":"0683d1ac2a9af4f503033f47b386ecb6e9f9c393","modified":1592808838000},{"_id":"source/hotFix热修复/demo_JSPatch_original/.DS_Store","hash":"47683b0f6cfa94bb6f6c498080f139345843e0b3","modified":1535465003000},{"_id":"source/hotFix热修复/demo_JSPatch_original/.gitignore","hash":"72e5aa91f8af2fac2bbb76411ddda38ac0b36c70","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/.travis.yml","hash":"c3197813810126a0de80a4bd4c8f0d5a24a8ce25","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/JSPatch.podspec","hash":"de5a981b87c3b5e86a0df49926bcdd8968e58f56","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/LICENSE","hash":"6ff55dce85391e8634b3a300ef32ed4875528fdf","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/README-CN.md","hash":"725a5fab0ce73523630170830f7cf097f84c9211","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/README.md","hash":"09baa98c512db547dba4481812b40627bb6be254","modified":1502209254000},{"_id":"source/hotFix热修复/demo_OC/.DS_Store","hash":"762f43c0e9a03cd1bedfb0d32d648de8e735a020","modified":1592808857000},{"_id":"source/hotFix热修复/demo_hotfix/.DS_Store","hash":"2481cb1df0cae9a479db8fcf12fa60c3ae615036","modified":1592808833000},{"_id":"source/hotFix热修复/invocation/.DS_Store","hash":"ca4c5ebb1ec3fcc969a7e3576149e81de258bb6f","modified":1592808870000},{"_id":"source/hotFix热修复/jspatch_text_js/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1558949364000},{"_id":"source/hotFix热修复/jspatch_text_js/main.js","hash":"4f8b5ef38e56885171d4befd8ab72bd9d5360fbc","modified":1522727009000},{"_id":"source/hotFix热修复/jspatch_text_js/rsa_private_key.pem","hash":"69ceb0ce81f6f373ec63233a24c938da537c577d","modified":1521693773000},{"_id":"source/hotFix热修复/jspatch_text_js/main_test.js","hash":"ae2b214a2b707961a63d6777369eecfd466e9a2f","modified":1522653386000},{"_id":"source/hotFix热修复/jspatch_text_js/rsa_public_key.pem","hash":"51452933416ce86efbbd99b7e3a31efb64e69523","modified":1521693797000},{"_id":"source/images/hotfix-009.png","hash":"2b65abd3c8a07434930357e8b8e305da3654bf46","modified":1592971359817},{"_id":"source/images/hotfix_4.png","hash":"80a0f444ec02e84a3d74955fc18693ae2758b8e5","modified":1592913254037},{"_id":"source/images/hotfix_3.png","hash":"8a2a3307bba6ff2f8b64ec7ac5949fa1658ffcbd","modified":1592911606655},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/.DS_Store","hash":"79dbb9d2be8bf5048205c2c225d6fcdcaadce108","modified":1592809004000},{"_id":"source/hotFix热修复/JSPatch-Demo/JSPatch/JSPatch.js","hash":"cb421aef1c1f3613176aa17f09e35c32650ee343","modified":1525879876000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCleaner.h","hash":"a07057944c08afb44b25eca54da7d3b8ec7df861","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCleaner.m","hash":"8cfa539a007cd0bd51e1b7e111747087e72fb3a4","modified":1521632773000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPDispatch.h","hash":"e2784bd4d5bae4d85711aedf1ca7ac6e80faa36e","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPDispatch.m","hash":"0b4632be4974ac575760a881c9c38d2b0d18511e","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPLocker.h","hash":"4badec40ebf939b32e2a9668e7f7d22956bf323c","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPNumber.h","hash":"96a8bb3bc342e59748daec01b38f0274af20a79e","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPLocker.m","hash":"e09dec33fc72adb98c3785b43ee09b58c2cbe4ec","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPNumber.m","hash":"69e4bd4e780cafaaee87e48a9bca8c96b0446c62","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPProtocol.h","hash":"17acb541f7abe9805ceaf9ecb1d7827009309ad5","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPProtocol.m","hash":"1ff0875cc3dcdcc607d65ffe38af902b70fabbe5","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPSpecialInit.m","hash":"6d45b7f11d76caf658294f19c1bf1b8328f2eaf7","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPSpecialInit.h","hash":"743d2bedfc75008adb751e5ecaaf05efc4f13aa3","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Loader/JPLoader.h","hash":"030074bab4a2040e854bad757508e2088bfaef90","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Loader/JPLoader.m","hash":"693c968a07fb4f369211f035fd842540871bff69","modified":1525796944000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/.DS_Store","hash":"de548c189a1e10961bb623d9cc02148d28bbf121","modified":1592808981000},{"_id":"source/hotFix热修复/JSPatch-analyze/JSPatch/JPEngine.h","hash":"8211f7a4df4160132142dea1cdd844ba9995ff4a","modified":1526284424000},{"_id":"source/hotFix热修复/JSPatch-analyze/JSPatch/JSPatch.js","hash":"80d66c0fdfc339eac324ce1bf98b0ff14ef2797b","modified":1526284289000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCleaner.m","hash":"8cfa539a007cd0bd51e1b7e111747087e72fb3a4","modified":1521632773000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPDispatch.h","hash":"e2784bd4d5bae4d85711aedf1ca7ac6e80faa36e","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCleaner.h","hash":"a07057944c08afb44b25eca54da7d3b8ec7df861","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPLocker.h","hash":"4badec40ebf939b32e2a9668e7f7d22956bf323c","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPDispatch.m","hash":"0b4632be4974ac575760a881c9c38d2b0d18511e","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPLocker.m","hash":"e09dec33fc72adb98c3785b43ee09b58c2cbe4ec","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPNumber.h","hash":"96a8bb3bc342e59748daec01b38f0274af20a79e","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPNumber.m","hash":"69e4bd4e780cafaaee87e48a9bca8c96b0446c62","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPProtocol.h","hash":"17acb541f7abe9805ceaf9ecb1d7827009309ad5","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPProtocol.m","hash":"1ff0875cc3dcdcc607d65ffe38af902b70fabbe5","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPSpecialInit.h","hash":"743d2bedfc75008adb751e5ecaaf05efc4f13aa3","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPSpecialInit.m","hash":"6d45b7f11d76caf658294f19c1bf1b8328f2eaf7","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Loader/JPLoader.h","hash":"030074bab4a2040e854bad757508e2088bfaef90","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Loader/JPLoader.m","hash":"693c968a07fb4f369211f035fd842540871bff69","modified":1525796944000},{"_id":"source/hotFix热修复/demo_JS/demo_JS/AppDelegate.m","hash":"c6caf0b520d1c75fee67cd7165d0c65d0882f00d","modified":1525925794000},{"_id":"source/hotFix热修复/demo_JS/demo_JS/Info.plist","hash":"295ce35c96006bb7fe3fa3752b45b128fafd3c8a","modified":1525851078000},{"_id":"source/hotFix热修复/demo_JS/demo_JS/JSDemoViewController.h","hash":"bea5975dd4de411c17381331b48e1e188d0e3fd7","modified":1525851591000},{"_id":"source/hotFix热修复/demo_JS/demo_JS/JSOCBridgeDemoViewController.h","hash":"5898ed3107809f757dc17774b6037b17aea6c7cb","modified":1525851887000},{"_id":"source/hotFix热修复/demo_JS/demo_JS/ViewController.h","hash":"322ebd9698862155a339efb1865d1d769254357e","modified":1525851004000},{"_id":"source/hotFix热修复/demo_JS/demo_JS/JSDemoViewController.m","hash":"9871646647c5bffc56b92dfe9660dfef3427764b","modified":1525855173000},{"_id":"source/hotFix热修复/demo_JS/demo_JS/ViewController.m","hash":"ce0a963504fdaac4b2f2667e5c9d795e591c9fab","modified":1525854994000},{"_id":"source/hotFix热修复/demo_JS/demo_JS/main.js","hash":"23f288c98a5e59ace32ddd7de749b1bdcc8f6746","modified":1526539713000},{"_id":"source/hotFix热修复/demo_JS/demo_JS/main.m","hash":"f1ea26c50121ed45d69126418d6aa61fe6641e53","modified":1525851004000},{"_id":"source/hotFix热修复/demo_JS/demo_JS/AppDelegate.h","hash":"6a36d7768e1bc811fdd79051d53ea563a7a3e76b","modified":1525851004000},{"_id":"source/hotFix热修复/demo_JS/demo_JS.xcodeproj/project.pbxproj","hash":"e5955cae2bd647ba2844e6c1d5f258dffb1d003c","modified":1525856810000},{"_id":"source/hotFix热修复/demo_JS/demo_JS/JSOCBridgeDemoViewController.m","hash":"3d00837253cb0ee57cb99e340447646c27f4fce8","modified":1526539801000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/.DS_Store","hash":"dc3d7f3420950a6d87aeb68537edb9fc5f35b197","modified":1592809009000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCleaner.h","hash":"a07057944c08afb44b25eca54da7d3b8ec7df861","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCleaner.m","hash":"8cfa539a007cd0bd51e1b7e111747087e72fb3a4","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPDispatch.h","hash":"e2784bd4d5bae4d85711aedf1ca7ac6e80faa36e","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPDispatch.m","hash":"0b4632be4974ac575760a881c9c38d2b0d18511e","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPLocker.h","hash":"4badec40ebf939b32e2a9668e7f7d22956bf323c","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPLocker.m","hash":"e09dec33fc72adb98c3785b43ee09b58c2cbe4ec","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPNumber.h","hash":"96a8bb3bc342e59748daec01b38f0274af20a79e","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPNumber.m","hash":"69e4bd4e780cafaaee87e48a9bca8c96b0446c62","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPSpecialInit.h","hash":"743d2bedfc75008adb751e5ecaaf05efc4f13aa3","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPProtocol.m","hash":"1ff0875cc3dcdcc607d65ffe38af902b70fabbe5","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPProtocol.h","hash":"17acb541f7abe9805ceaf9ecb1d7827009309ad5","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPSpecialInit.m","hash":"6d45b7f11d76caf658294f19c1bf1b8328f2eaf7","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/JSPatch/JPEngine.h","hash":"a0824c035de46e06510e2e7c4f683bfbcda2c777","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/JSPatch/JSPatch.js","hash":"ad1efc5d2270dab399d6abe29ad38e897af8ed4d","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Loader/JPLoader.h","hash":"030074bab4a2040e854bad757508e2088bfaef90","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Loader/JPLoader.m","hash":"8e19a88c5fdc026b8d504df9c8815706d88470c4","modified":1502209254000},{"_id":"source/hotFix热修复/demo_OC/demo_OC/AppDelegate.m","hash":"261cf0fc3a98911d8609bbc2f435cddfaf27207b","modified":1525783093000},{"_id":"source/hotFix热修复/demo_OC/demo_OC/ClassDemoController.h","hash":"3a8903956fef7b6597284558f70c749001f42109","modified":1525782797000},{"_id":"source/hotFix热修复/demo_OC/demo_OC/ClassDemoController.m","hash":"a17bf484c95a3932dd5adb45351b71a0d8db8481","modified":1526545519000},{"_id":"source/hotFix热修复/demo_OC/demo_OC/AppDelegate.h","hash":"eed99008b4187ab15c85d4d773e581815af7afef","modified":1525785286000},{"_id":"source/hotFix热修复/demo_OC/demo_OC/DemoClass.m","hash":"2e53490c85a31c7d6198d96e723b7de8de697eb1","modified":1525782846000},{"_id":"source/hotFix热修复/demo_OC/demo_OC/DemoClass.h","hash":"f8160c96ae272cc2885cdd7e276946cb433d6199","modified":1525779717000},{"_id":"source/hotFix热修复/demo_OC/demo_OC/MethodDemoViewController.h","hash":"680ee692c6f41ce408870287ec34d9c0f35d5501","modified":1525785704000},{"_id":"source/hotFix热修复/demo_OC/demo_OC/MethodForwardDemoController.m","hash":"72bb5ceb12fa75c23e501c6ccf8f9d84be4ad018","modified":1525841045000},{"_id":"source/hotFix热修复/demo_OC/demo_OC/MethodDemoViewController.m","hash":"32c95ebac80f09bc7533290dd1cad607d1ab1ea1","modified":1525840458000},{"_id":"source/hotFix热修复/demo_OC/demo_OC/MethodInvokeClass.h","hash":"f7e2d8cbce2876aa6157358bab2c4eecdbd7c30e","modified":1525837985000},{"_id":"source/hotFix热修复/demo_OC/demo_OC/MethodInvokeClass.m","hash":"27af604c1edceb36092086c40158620084ef036c","modified":1525840401000},{"_id":"source/hotFix热修复/demo_OC/demo_OC/MethodInvokeDemoController.h","hash":"9820d5fef67ce6ff35b6f957ec231039a92e1307","modified":1525836826000},{"_id":"source/hotFix热修复/demo_OC/demo_OC/VarDemoViewController.h","hash":"ba839964849f9333d794994b7ccbfd8a916dbc57","modified":1525785150000},{"_id":"source/hotFix热修复/demo_OC/demo_OC/MethodInvokeDemoController.m","hash":"7bb478ae09a5ac4d3e30d097cd4782e1c4a31786","modified":1526547090000},{"_id":"source/hotFix热修复/demo_OC/demo_OC/VarDemoViewController.m","hash":"b84a8bbf21ee9b29921ddd22cfd76a5b6c72fcec","modified":1525789554000},{"_id":"source/hotFix热修复/demo_OC/demo_OC/Info.plist","hash":"295ce35c96006bb7fe3fa3752b45b128fafd3c8a","modified":1525783038000},{"_id":"source/hotFix热修复/demo_OC/demo_OC/ViewController.h","hash":"20c6d33bca6dc210461074a2e66cd7b9950752de","modified":1525771641000},{"_id":"source/hotFix热修复/demo_OC/demo_OC/MethodForwardDemoController.h","hash":"76e16c6d20044160761918c54677ccca3f58c015","modified":1525836786000},{"_id":"source/hotFix热修复/demo_OC/demo_OC/ViewController.m","hash":"03804a52b6a06c4e498f5f431c2a30539202572d","modified":1525853179000},{"_id":"source/hotFix热修复/demo_OC/demo_OC/main.m","hash":"157956d6c03c881d47dbbcc16d8955d1b8d53a99","modified":1525771641000},{"_id":"source/hotFix热修复/demo_OC/demo_OC.xcodeproj/project.pbxproj","hash":"b1f87aef7c6cb5e7033556f4ffd28928231e234b","modified":1525837836000},{"_id":"source/hotFix热修复/demo_hotfix/demo_hotfix/AppDelegate.h","hash":"c786a106ee1d546b49610226e47446ddc476ecc5","modified":1525925692000},{"_id":"source/hotFix热修复/demo_hotfix/demo_hotfix/AppDelegate.m","hash":"d69a0cbfa9900039f4cc74fdef5d9a1b1566fb3a","modified":1526539899000},{"_id":"source/hotFix热修复/demo_hotfix/demo_hotfix/Info.plist","hash":"295ce35c96006bb7fe3fa3752b45b128fafd3c8a","modified":1525925703000},{"_id":"source/hotFix热修复/demo_hotfix/demo_hotfix/ViewController.h","hash":"8624090f7c4640a8381e5ace1493098da0a44ebb","modified":1525925692000},{"_id":"source/hotFix热修复/demo_hotfix/demo_hotfix/ViewController.m","hash":"3ee7b081e7a8864304cae89417583d463d34f99c","modified":1526541770000},{"_id":"source/hotFix热修复/demo_hotfix/demo_hotfix/main.js","hash":"d29cf070d2018875d19df560ad028d2b071af092","modified":1526541733000},{"_id":"source/hotFix热修复/demo_hotfix/demo_hotfix/main.m","hash":"cf9d81913b9fbae604f587c3a090745ca2bf89de","modified":1525925692000},{"_id":"source/hotFix热修复/demo_hotfix/demo_hotfix.xcodeproj/project.pbxproj","hash":"e204fa5223a381141c1c208a6e8e3713f78876a5","modified":1525925813000},{"_id":"source/hotFix热修复/invocation/invocation/AppDelegate.h","hash":"e4f56568d23b787fc79d7fae775cf9cf35b06832","modified":1525254561000},{"_id":"source/hotFix热修复/invocation/invocation/AppDelegate.m","hash":"6baa12745dc3c6cbd435ced06be048f49e4ca079","modified":1525254561000},{"_id":"source/hotFix热修复/invocation/invocation/Info.plist","hash":"95c71dbe598de6169e927fbf5c579175da90d355","modified":1525254561000},{"_id":"source/hotFix热修复/invocation/invocation/TestObj.h","hash":"343a979e824a3058c5efdbfc6b99f307661d20a8","modified":1525255956000},{"_id":"source/hotFix热修复/invocation/invocation/ViewController.h","hash":"1bfc40146dd8ce5308c28048803103262c2d3cdc","modified":1525254561000},{"_id":"source/hotFix热修复/invocation/invocation/ViewController.m","hash":"3a1fc65bc7e26210b17314112458dba7da61fe27","modified":1526118212000},{"_id":"source/hotFix热修复/invocation/invocation/main.m","hash":"74f57a905608286e53403fe03404289e1d81b13f","modified":1525254561000},{"_id":"source/hotFix热修复/invocation/invocation.xcodeproj/project.pbxproj","hash":"234be8060633f7190cd35384158bd3aea3a2f916","modified":1525255958000},{"_id":"source/hotFix热修复/invocation/invocation/TestObj.m","hash":"e0c80a488f37b45c0376db1f9587752da8100268","modified":1525256132000},{"_id":"source/hotFix热修复/JSPatch-Demo/JSPatch/JPEngine.h","hash":"8211f7a4df4160132142dea1cdd844ba9995ff4a","modified":1525763455000},{"_id":"source/hotFix热修复/JSPatch-Demo/JSPatch/JPEngine.m","hash":"74af0ccde9bcb640b275232c2035af87984bee47","modified":1525944932000},{"_id":"source/hotFix热修复/JSPatch-analyze/JSPatch/JPEngine.m","hash":"e23967178131773a042c733272c1358bdfc147cf","modified":1526280670000},{"_id":"source/hotFix热修复/demo_JSPatch_original/JSPatch/JPEngine.m","hash":"36f04e65df9168330ca9f407d51f91870e88a180","modified":1502209254000},{"_id":"source/images/hotfix_2.png","hash":"d04a442860cae4cf79716b23c3e18f96a0abd3a0","modified":1592911519695},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/.DS_Store","hash":"0becdb517d04f6648a054005412df6720757ccac","modified":1526552929000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPBlock/JPBlock.h","hash":"e8f8cb971dbe23633c0e93b5dda4f0140805f644","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPBlock/JPBlock.m","hash":"e6a7d2ed2e867019d66fbb7433c740d81b37b10b","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPBlock/JPBlockWrapper.h","hash":"231417bd6ef26dce4f8fadf3c2f0347a6698d2cd","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPBlock/JPBlockWrapper.m","hash":"d2d80440a759aba4f3514ea8115bae8e1b1dd75a","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunction/JPMemory.h","hash":"be201361e261eec775d2fe44c08c2414139c4ee9","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunction/JPCFunction.h","hash":"688902b45d26a689f0bc61fb2fbc97f7eea3014b","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunction/JPCFunction.m","hash":"4b4a18f0dd76a720ff30fd20dd672fe42bb1372c","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunction/JPStructPointer.h","hash":"c802d1c3878b82cfb5b6bd0cd8ead7bdfe3ec1ee","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunction/JPMemory.m","hash":"8eae4e0352e5ae41070c987b7b7517b1512d36ef","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunction/JPStructPointer.m","hash":"59508ea3daafc6c66664edb5125b19c757a4a001","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/JPMethodSignature.h","hash":"76b1a0a64555695669e9849ffc46ab1370a3ceb9","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/JPMethodSignature.m","hash":"9b450a8fd8dc07788cae62f788f1576a1b54bc74","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/JPPlayground.h","hash":"8c7a8d6069413ce217d5b168ab93c1ffc9470dc4","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/JPPlayground.m","hash":"24a8b33bdb0a8c12d19f7f5f9ab377264376b4a0","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/README.md","hash":"9626b18db021713cae8e4d024ca0981aa5a63e38","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Loader/tools/packer.php","hash":"3e30d272951e5af7f5879df54808e828ad274d4e","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Loader/libs/RSA.m","hash":"fc2d08c78b4b185934a3fff3148479ceaee7b870","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Loader/libs/ZipArchive.h","hash":"f526b70db840f4968ffe4018c87b1c2b991fe3bf","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Loader/libs/RSA.h","hash":"a656c2a5fda0ba7b507c0bf1dbb72a3b93af4b58","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Loader/libs/ZipArchive.m","hash":"697dd72e5d9fb6e9b67330fbd2967bfa87fb73a0","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/.DS_Store","hash":"7195a635fbd2d7f17e6936763be6d05491ab1932","modified":1592808981000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPBlock/JPBlock.h","hash":"e8f8cb971dbe23633c0e93b5dda4f0140805f644","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPBlock/JPBlock.m","hash":"e6a7d2ed2e867019d66fbb7433c740d81b37b10b","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPBlock/JPBlockWrapper.h","hash":"231417bd6ef26dce4f8fadf3c2f0347a6698d2cd","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPBlock/JPBlockWrapper.m","hash":"d2d80440a759aba4f3514ea8115bae8e1b1dd75a","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunction/JPCFunction.m","hash":"4b4a18f0dd76a720ff30fd20dd672fe42bb1372c","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunction/JPCFunction.h","hash":"688902b45d26a689f0bc61fb2fbc97f7eea3014b","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunction/JPMemory.h","hash":"be201361e261eec775d2fe44c08c2414139c4ee9","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunction/JPMemory.m","hash":"8eae4e0352e5ae41070c987b7b7517b1512d36ef","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunction/JPStructPointer.m","hash":"59508ea3daafc6c66664edb5125b19c757a4a001","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunction/JPStructPointer.h","hash":"c802d1c3878b82cfb5b6bd0cd8ead7bdfe3ec1ee","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/JPMethodSignature.h","hash":"76b1a0a64555695669e9849ffc46ab1370a3ceb9","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/JPMethodSignature.m","hash":"9b450a8fd8dc07788cae62f788f1576a1b54bc74","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/JPPlayground.h","hash":"8c7a8d6069413ce217d5b168ab93c1ffc9470dc4","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/JPPlayground.m","hash":"24a8b33bdb0a8c12d19f7f5f9ab377264376b4a0","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/README.md","hash":"9626b18db021713cae8e4d024ca0981aa5a63e38","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Loader/libs/ZipArchive.h","hash":"f526b70db840f4968ffe4018c87b1c2b991fe3bf","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Loader/libs/RSA.m","hash":"fc2d08c78b4b185934a3fff3148479ceaee7b870","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Loader/tools/packer.php","hash":"3e30d272951e5af7f5879df54808e828ad274d4e","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Loader/libs/RSA.h","hash":"a656c2a5fda0ba7b507c0bf1dbb72a3b93af4b58","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Loader/libs/ZipArchive.m","hash":"697dd72e5d9fb6e9b67330fbd2967bfa87fb73a0","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JS/demo_JS/Base.lproj/LaunchScreen.storyboard","hash":"5e869db384b070cba384072f2876fa8cba6702d0","modified":1525851047000},{"_id":"source/hotFix热修复/demo_JS/demo_JS/Base.lproj/Main.storyboard","hash":"ed581c6f1121152f979096bd7cf11781312c1408","modified":1525851047000},{"_id":"source/hotFix热修复/demo_JS/demo_JS.xcodeproj/project.xcworkspace/contents.xcworkspacedata","hash":"f8e17a19ecd049822a1dca690432917f6d3894a1","modified":1525851005000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/.DS_Store","hash":"0dafbfad9aa5b199b44e41bdb47fdd442ece72fb","modified":1525769384000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPBlock/JPBlock.h","hash":"e8f8cb971dbe23633c0e93b5dda4f0140805f644","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPBlock/JPBlock.m","hash":"e6a7d2ed2e867019d66fbb7433c740d81b37b10b","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPBlock/JPBlockWrapper.h","hash":"231417bd6ef26dce4f8fadf3c2f0347a6698d2cd","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPBlock/JPBlockWrapper.m","hash":"d2d80440a759aba4f3514ea8115bae8e1b1dd75a","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunction/JPCFunction.h","hash":"688902b45d26a689f0bc61fb2fbc97f7eea3014b","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunction/JPCFunction.m","hash":"4b4a18f0dd76a720ff30fd20dd672fe42bb1372c","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunction/JPMemory.h","hash":"be201361e261eec775d2fe44c08c2414139c4ee9","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunction/JPMemory.m","hash":"8eae4e0352e5ae41070c987b7b7517b1512d36ef","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunction/JPStructPointer.m","hash":"59508ea3daafc6c66664edb5125b19c757a4a001","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunction/JPStructPointer.h","hash":"c802d1c3878b82cfb5b6bd0cd8ead7bdfe3ec1ee","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/JPMethodSignature.h","hash":"76b1a0a64555695669e9849ffc46ab1370a3ceb9","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/JPPlayground.h","hash":"8c7a8d6069413ce217d5b168ab93c1ffc9470dc4","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/JPMethodSignature.m","hash":"9b450a8fd8dc07788cae62f788f1576a1b54bc74","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/JPPlayground.m","hash":"24a8b33bdb0a8c12d19f7f5f9ab377264376b4a0","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/README.md","hash":"9626b18db021713cae8e4d024ca0981aa5a63e38","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Loader/libs/RSA.h","hash":"a656c2a5fda0ba7b507c0bf1dbb72a3b93af4b58","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Loader/libs/RSA.m","hash":"fc2d08c78b4b185934a3fff3148479ceaee7b870","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Loader/libs/ZipArchive.h","hash":"f526b70db840f4968ffe4018c87b1c2b991fe3bf","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Loader/tools/packer.php","hash":"3e30d272951e5af7f5879df54808e828ad274d4e","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Loader/libs/ZipArchive.m","hash":"697dd72e5d9fb6e9b67330fbd2967bfa87fb73a0","modified":1502209254000},{"_id":"source/hotFix热修复/demo_OC/demo_OC/Base.lproj/LaunchScreen.storyboard","hash":"51555cb1915bc6034a55482c4f240ed24498b1a2","modified":1525771697000},{"_id":"source/hotFix热修复/demo_OC/demo_OC/Base.lproj/Main.storyboard","hash":"f00f7e2d92e0c070c7aa25766795da17015dfdea","modified":1525771697000},{"_id":"source/hotFix热修复/demo_OC/demo_OC.xcodeproj/project.xcworkspace/contents.xcworkspacedata","hash":"9d5e33e9860ed2ac37f2065369dc0b4f5d766bbe","modified":1525771641000},{"_id":"source/hotFix热修复/demo_hotfix/demo_hotfix/Base.lproj/LaunchScreen.storyboard","hash":"31bdf54b2e757430f732000ad79c5324b0bd4f55","modified":1525925692000},{"_id":"source/hotFix热修复/demo_hotfix/demo_hotfix.xcodeproj/project.xcworkspace/contents.xcworkspacedata","hash":"a67632c74ee225437b3301190905cb3b34cc9a14","modified":1525925693000},{"_id":"source/hotFix热修复/invocation/invocation/Base.lproj/LaunchScreen.storyboard","hash":"4ff1a615e617ca5d32673c109b939b1412edb37a","modified":1525254587000},{"_id":"source/hotFix热修复/invocation/invocation/Base.lproj/Main.storyboard","hash":"a6556897c0665608689d54ab936ea018c22ffcad","modified":1525254587000},{"_id":"source/hotFix热修复/invocation/invocation.xcodeproj/project.xcworkspace/contents.xcworkspacedata","hash":"be2060ea534e7fbcd488e8f4c1f05edaa25840de","modified":1525254561000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo/AppDelegate.m","hash":"21eb555f11822df4d7e2dfaba36ca30e73e956c8","modified":1525938713000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo/JPViewController.m","hash":"ffae8128714d6eeb697987bd7b80315633d99bc1","modified":1526550249000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo/AppDelegate.h","hash":"833bf7d272f666bbc667c23b8176400b295bf93a","modified":1525252274000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo/JPViewController.h","hash":"ae4a6d1e66a185e83145de30564b3b8417b60f32","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo/demo.js","hash":"72f89fa9a376eabb0c327459af7127374e44a31f","modified":1525948669000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/InheritTest.js","hash":"46424ee11acdf7076947456b64adb149247ba5a3","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/Info.plist","hash":"82b6f7944fd7f44e261bd0d8cfca7e29af5d9d62","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPCFunctionTest.h","hash":"9bbee9b778c8f95993541d91d241d7a245c77e7f","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPInheritanceTestObjects.h","hash":"80946838772af428817c59afc389509679dcc9dd","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPCFunctionTest.m","hash":"569801960a3a4ba27a70338e7d49d0fa76dc9218","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPInheritanceTestObjects.m","hash":"8a49e44b39b6a2f4752fba1b0573482bcdebd6bf","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPJSClassTest.h","hash":"52fe8b2df7c397be6da790eca3f2e8c56740d6bd","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPMultithreadTestObject.m","hash":"9e433bdbe34ec25d76d9b841dc3a036d1a813fb9","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPJSClassTest.m","hash":"50919993704db7c654b891579116426739e61d3d","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPMultithreadTestObject.h","hash":"4137b4d71834aeff1c985b7414e45613c3684b70","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPNumberTest.m","hash":"2789416a6d5f38155a018cccde4ffa460c2f40eb","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPPerformanceTest.h","hash":"1b49e54039c6f489982d59b0705c46c3637f6509","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPNumberTest.h","hash":"63c9eeb5f081ef76013b96c59439256f25982661","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPSuperTestObject.h","hash":"f90ceefca5213c7520f026183a60b75d736e6a1f","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPPerformanceTest.m","hash":"f3fcbcf282c71e530ef0e433c68d0d489c4f7066","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPSuperTestObject.m","hash":"069234f26df8c1b87284753820f154455059cfa3","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/jsClassTest.js","hash":"5bc080f5e0c6a2bc00426f326cd79dd5d1046563","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/jsCFunctionTest.js","hash":"897e7d76a0677683f40f95fc063be1b0880470f9","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/jsNumberTest.js","hash":"212c8eab63cd24f823d922ec8554ecb83f3e2137","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/multithreadTest.js","hash":"5d1ebae998d8bb415570181322132954230cc427","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPTestObject.m","hash":"5c2f1e7cc8e204afc97e7b71976007784fd20148","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/newProtocolTest.js","hash":"5f33f0552ff064962fa37d2b84c735a45574fb04","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JSPatchTests.m","hash":"ae08f8084f3d37f68ff4382dab197e56d9ffc1ea","modified":1521633239000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/performanceTest.js","hash":"52fd1ee6fd154383994e0a5a3227dd2efdd7b42c","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPTestObject.h","hash":"7555c72e05276d30e4b72e040ee62fa714e887fd","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/superTest.js","hash":"54b2e33e71f5819358de36f208df76319e939eb0","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/protocolTest.js","hash":"f5c786ee592bf2454e65525f04f99377ef753f77","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/newProtocolTest.h","hash":"af7cedd7a5f6ad76b76772855ea06b733a9b8422","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/test.js","hash":"8507634d75ce209352616d1f4d1dbcaa231dbad1","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/newProtocolTest.m","hash":"54a393c15015a14d53534e42c43196c16a15e5a7","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGBitmapContext.h","hash":"333f424c694d4817915d50e95f5da34f9d90b19a","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGColor.m","hash":"858da9a681d892edf3620eb05182cc6007735ccf","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGContext.h","hash":"4e7b711c863f261cb615558a4a7fd6d64cdffe6b","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGGeometry.h","hash":"080649e85daf661b1a4133ff825be473374112b9","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGGeometry.m","hash":"a9d4d2a95a79d1783d93149ba25f989fa6cf88dd","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGBitmapContext.m","hash":"f4b16e4b76b6d7d3074134639079b85c64619818","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGColor.h","hash":"50d1bd17faa6eab7afc4e607a714da1f7c4c9eda","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGImage.h","hash":"ffbc5e85904a88327e20f4fdd7d09058613741a6","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGImage.m","hash":"dfb7751cb35a5c265c1b717a6bc455f6f148d5db","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGPath.h","hash":"960947a2b08203d3d051f867166da58eda9be8a2","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGTransform.h","hash":"8a0ca37a1b689c9edf36a06e0ae2543652263e8f","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGTransform.m","hash":"1039be20452c205eb27eba6d23aeff08917485b4","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGPath.m","hash":"a628f53881f3a864ab2b9b0615b66fd122c00bfd","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCoreGraphics.h","hash":"45e8f0ab255025d671c92cd03d7b611cea87b964","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGContext.m","hash":"a9d81ce9ca783e1323564e8bf5b57708071d048d","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCoreGraphics.m","hash":"7b0a8d1115b69c8329e77b547a7aeeab19a99da4","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/UIKit/JPUIGraphics.m","hash":"1816a21e320875fa66ff3932c5fa7d8faeb8c82c","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/UIKit/JPUIImage.h","hash":"eacaf7342b4c6c8a41b91cd99c6fa6c1032e1253","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/UIKit/JPUIKit.h","hash":"6ec620bea1fa0010b2fa7b1ecbdb2f962ee82d23","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/UIKit/JPUIGeometry.m","hash":"837df10b731a9c156e44e4bcfc18e9f7321eb2cd","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/UIKit/JPUIImage.m","hash":"ca0a9a7704d83c29366186bc7ffbae96f1203286","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/UIKit/JPUIGeometry.h","hash":"27cc0ef131e7f4ab2f57630454dacd8e321a846c","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/UIKit/JPUIGraphics.h","hash":"53a80fd361ddf02c2bd59c277b77e98170a512a1","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/UIKit/JPUIKit.m","hash":"654b31e828d5b00998905ab68fc5fbe5496d8f4f","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/libffi/ffi.h","hash":"90a16ec5a8408012f1ecedebae3bcf7c8f5361ce","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/libffi/ffi_i386.h","hash":"ac060b7cd7b5a5750b8cf67f5b154c3d11e97f9d","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/libffi/ffi_arm.h","hash":"8ae86db0662ddf9670e63a4e95d848b4bbe9bb0c","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/libffi/ffi_arm64.h","hash":"51cfd4d5c675a1486377aa5279b1c1798153fada","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/libffi/ffitarget.h","hash":"eae2265b384c36ad0c827ec23203ab73750c166a","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/libffi/ffi_x86_64.h","hash":"254954593f91d1a423b839f6b6587ac588f6f6b4","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/libffi/ffitarget_arm.h","hash":"aab64e83fc89c05deb9e8689ce143556ba11eb8d","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/libffi/ffitarget_arm64.h","hash":"fff5e22a28ea6769897edb739244fa482be9c1cf","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/libffi/ffitarget_i386.h","hash":"32ea29ca134091e983a0029beec9341e5763cc04","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/libffi/ffitarget_x86_64.h","hash":"f8fb53d79268244747a30b7003566959292cc535","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/JPPlaygroundModule/JPKeyCommands.h","hash":"71c13c1b3693200c1c0f7235e79a638059bad366","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/JPPlaygroundModule/JPKeyCommands.m","hash":"615471974bb75ffece1c9873ba951a4d5ceea98d","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/JPPlaygroundModule/SGDirWatchdog.h","hash":"b915160a2af82728767eb415bc89a9b74fa54a7a","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevErrorView.h","hash":"b1b30141e2cf65ea57907527a97786b9c1f39422","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevErrorView.m","hash":"f39893f8030048b395049322bf91e12ecc7f932b","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevMenu.h","hash":"b29265f5d97ce3ce3305a8ff1ad4e43e54702b08","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevMenu.m","hash":"74c770fa43c7835d928fbb4f30b9b4ef8cd5069c","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevTipView.h","hash":"c75330ebd7693c25b70baab13932ba571177624c","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevTipView.m","hash":"687f6a8478f1d1791bb51b811588cad37c5b8765","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/JPPlaygroundModule/SGDirWatchdog.m","hash":"a0687f1308f7c3e2ae7a7e019637f69dea225021","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Loader/libs/minizip/ioapi.c","hash":"28482373ac6873edefcc1be5cca22e62a2e3887c","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Loader/libs/minizip/crypt.h","hash":"82b2530bfe925b58eebd0a02cd9f2c5bd21dba50","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Loader/libs/minizip/ioapi.h","hash":"d3c5d79817c6585529f89035945f2234f6a6acb6","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Loader/libs/minizip/mztools.c","hash":"fe6372ccfb1245034aa1ceed4e16bf488cf96f7c","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Loader/libs/minizip/mztools.h","hash":"85458c02a1b2b7da6068bf8e98c4f0f66f4834d9","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Loader/libs/minizip/unzip.h","hash":"cbdaca78532d8925a5b2753849e5a097d62a7587","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Loader/libs/minizip/zip.h","hash":"8cef828db4766401b91bec9b47ca56a3118705fc","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1526281150000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/AppDelegate.h","hash":"833bf7d272f666bbc667c23b8176400b295bf93a","modified":1526279040000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/AppDelegate.m","hash":"21eb555f11822df4d7e2dfaba36ca30e73e956c8","modified":1524541710000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/demo.js","hash":"51c1a9f8e02f2d9fd8230b63ce932559bd323b9f","modified":1525515752000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/JPViewController.m","hash":"71cfc6d5112cd901ca2f957984f0871840a6770e","modified":1526280779000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/Info.plist","hash":"82b6f7944fd7f44e261bd0d8cfca7e29af5d9d62","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/InheritTest.js","hash":"46424ee11acdf7076947456b64adb149247ba5a3","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/JPViewController.h","hash":"ae4a6d1e66a185e83145de30564b3b8417b60f32","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPCFunctionTest.h","hash":"9bbee9b778c8f95993541d91d241d7a245c77e7f","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPCFunctionTest.m","hash":"569801960a3a4ba27a70338e7d49d0fa76dc9218","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPInheritanceTestObjects.h","hash":"80946838772af428817c59afc389509679dcc9dd","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPJSClassTest.h","hash":"52fe8b2df7c397be6da790eca3f2e8c56740d6bd","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPJSClassTest.m","hash":"50919993704db7c654b891579116426739e61d3d","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPMultithreadTestObject.h","hash":"4137b4d71834aeff1c985b7414e45613c3684b70","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPMultithreadTestObject.m","hash":"9e433bdbe34ec25d76d9b841dc3a036d1a813fb9","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPNumberTest.h","hash":"63c9eeb5f081ef76013b96c59439256f25982661","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPPerformanceTest.h","hash":"1b49e54039c6f489982d59b0705c46c3637f6509","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPNumberTest.m","hash":"2789416a6d5f38155a018cccde4ffa460c2f40eb","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPInheritanceTestObjects.m","hash":"8a49e44b39b6a2f4752fba1b0573482bcdebd6bf","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPPerformanceTest.m","hash":"f3fcbcf282c71e530ef0e433c68d0d489c4f7066","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPSuperTestObject.h","hash":"f90ceefca5213c7520f026183a60b75d736e6a1f","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPTestObject.h","hash":"7555c72e05276d30e4b72e040ee62fa714e887fd","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/jsCFunctionTest.js","hash":"897e7d76a0677683f40f95fc063be1b0880470f9","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JSPatchTests.m","hash":"ae08f8084f3d37f68ff4382dab197e56d9ffc1ea","modified":1521633239000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPTestObject.m","hash":"5c2f1e7cc8e204afc97e7b71976007784fd20148","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/jsClassTest.js","hash":"5bc080f5e0c6a2bc00426f326cd79dd5d1046563","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/jsNumberTest.js","hash":"212c8eab63cd24f823d922ec8554ecb83f3e2137","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/multithreadTest.js","hash":"5d1ebae998d8bb415570181322132954230cc427","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/newProtocolTest.js","hash":"5f33f0552ff064962fa37d2b84c735a45574fb04","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPSuperTestObject.m","hash":"069234f26df8c1b87284753820f154455059cfa3","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/newProtocolTest.h","hash":"af7cedd7a5f6ad76b76772855ea06b733a9b8422","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/performanceTest.js","hash":"52fd1ee6fd154383994e0a5a3227dd2efdd7b42c","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/newProtocolTest.m","hash":"54a393c15015a14d53534e42c43196c16a15e5a7","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/protocolTest.js","hash":"f5c786ee592bf2454e65525f04f99377ef753f77","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/superTest.js","hash":"54b2e33e71f5819358de36f208df76319e939eb0","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/test.js","hash":"8507634d75ce209352616d1f4d1dbcaa231dbad1","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGBitmapContext.h","hash":"333f424c694d4817915d50e95f5da34f9d90b19a","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGColor.h","hash":"50d1bd17faa6eab7afc4e607a714da1f7c4c9eda","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGColor.m","hash":"858da9a681d892edf3620eb05182cc6007735ccf","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGContext.h","hash":"4e7b711c863f261cb615558a4a7fd6d64cdffe6b","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGGeometry.m","hash":"a9d4d2a95a79d1783d93149ba25f989fa6cf88dd","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGContext.m","hash":"a9d81ce9ca783e1323564e8bf5b57708071d048d","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGImage.h","hash":"ffbc5e85904a88327e20f4fdd7d09058613741a6","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGPath.h","hash":"960947a2b08203d3d051f867166da58eda9be8a2","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGImage.m","hash":"dfb7751cb35a5c265c1b717a6bc455f6f148d5db","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGPath.m","hash":"a628f53881f3a864ab2b9b0615b66fd122c00bfd","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGGeometry.h","hash":"080649e85daf661b1a4133ff825be473374112b9","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGTransform.m","hash":"1039be20452c205eb27eba6d23aeff08917485b4","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGTransform.h","hash":"8a0ca37a1b689c9edf36a06e0ae2543652263e8f","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCoreGraphics.m","hash":"7b0a8d1115b69c8329e77b547a7aeeab19a99da4","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGBitmapContext.m","hash":"f4b16e4b76b6d7d3074134639079b85c64619818","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCoreGraphics.h","hash":"45e8f0ab255025d671c92cd03d7b611cea87b964","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/UIKit/JPUIImage.h","hash":"eacaf7342b4c6c8a41b91cd99c6fa6c1032e1253","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/UIKit/JPUIGeometry.m","hash":"837df10b731a9c156e44e4bcfc18e9f7321eb2cd","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/UIKit/JPUIGraphics.m","hash":"1816a21e320875fa66ff3932c5fa7d8faeb8c82c","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/UIKit/JPUIKit.h","hash":"6ec620bea1fa0010b2fa7b1ecbdb2f962ee82d23","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/UIKit/JPUIImage.m","hash":"ca0a9a7704d83c29366186bc7ffbae96f1203286","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/UIKit/JPUIGraphics.h","hash":"53a80fd361ddf02c2bd59c277b77e98170a512a1","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/UIKit/JPUIGeometry.h","hash":"27cc0ef131e7f4ab2f57630454dacd8e321a846c","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/UIKit/JPUIKit.m","hash":"654b31e828d5b00998905ab68fc5fbe5496d8f4f","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/libffi/ffi_i386.h","hash":"ac060b7cd7b5a5750b8cf67f5b154c3d11e97f9d","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/libffi/ffi_arm.h","hash":"8ae86db0662ddf9670e63a4e95d848b4bbe9bb0c","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/libffi/ffi.h","hash":"90a16ec5a8408012f1ecedebae3bcf7c8f5361ce","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/libffi/ffi_arm64.h","hash":"51cfd4d5c675a1486377aa5279b1c1798153fada","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/libffi/ffitarget.h","hash":"eae2265b384c36ad0c827ec23203ab73750c166a","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/libffi/ffi_x86_64.h","hash":"254954593f91d1a423b839f6b6587ac588f6f6b4","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/libffi/ffitarget_arm64.h","hash":"fff5e22a28ea6769897edb739244fa482be9c1cf","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/libffi/ffitarget_x86_64.h","hash":"f8fb53d79268244747a30b7003566959292cc535","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/libffi/ffitarget_i386.h","hash":"32ea29ca134091e983a0029beec9341e5763cc04","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/libffi/ffitarget_arm.h","hash":"aab64e83fc89c05deb9e8689ce143556ba11eb8d","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/JPPlaygroundModule/JPKeyCommands.h","hash":"71c13c1b3693200c1c0f7235e79a638059bad366","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/JPPlaygroundModule/JPKeyCommands.m","hash":"615471974bb75ffece1c9873ba951a4d5ceea98d","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/JPPlaygroundModule/SGDirWatchdog.m","hash":"a0687f1308f7c3e2ae7a7e019637f69dea225021","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/JPPlaygroundModule/SGDirWatchdog.h","hash":"b915160a2af82728767eb415bc89a9b74fa54a7a","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevMenu.h","hash":"b29265f5d97ce3ce3305a8ff1ad4e43e54702b08","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevErrorView.m","hash":"f39893f8030048b395049322bf91e12ecc7f932b","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevErrorView.h","hash":"b1b30141e2cf65ea57907527a97786b9c1f39422","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevTipView.h","hash":"c75330ebd7693c25b70baab13932ba571177624c","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevTipView.m","hash":"687f6a8478f1d1791bb51b811588cad37c5b8765","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevMenu.m","hash":"74c770fa43c7835d928fbb4f30b9b4ef8cd5069c","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Loader/libs/minizip/ioapi.c","hash":"28482373ac6873edefcc1be5cca22e62a2e3887c","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Loader/libs/minizip/crypt.h","hash":"82b2530bfe925b58eebd0a02cd9f2c5bd21dba50","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Loader/libs/minizip/ioapi.h","hash":"d3c5d79817c6585529f89035945f2234f6a6acb6","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Loader/libs/minizip/mztools.h","hash":"85458c02a1b2b7da6068bf8e98c4f0f66f4834d9","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Loader/libs/minizip/unzip.h","hash":"cbdaca78532d8925a5b2753849e5a097d62a7587","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Loader/libs/minizip/zip.h","hash":"8cef828db4766401b91bec9b47ca56a3118705fc","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JS/demo_JS/Assets.xcassets/AppIcon.appiconset/Contents.json","hash":"4038dfb555b7c4d564502ede33d94ca7b9e26016","modified":1525851004000},{"_id":"source/hotFix热修复/JSPatch-analyze/Loader/libs/minizip/mztools.c","hash":"fe6372ccfb1245034aa1ceed4e16bf488cf96f7c","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo/.DS_Store","hash":"fe1828dc4b9c9094c0f2ba61eb98a6a197203d25","modified":1525765297000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo/AppDelegate.h","hash":"833bf7d272f666bbc667c23b8176400b295bf93a","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo/AppDelegate.m","hash":"6e94a9bdbd02f4e09683b8c232403c9e4391dd8e","modified":1535709907000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo/JPViewController.h","hash":"ae4a6d1e66a185e83145de30564b3b8417b60f32","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo/JPViewController.m","hash":"d5140dcda90f46b9966f958221e36fbfa0a7decf","modified":1526539188000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo/demo.js","hash":"48b81da87f44c96cee79efc77a808060a7436284","modified":1525769055000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/Info.plist","hash":"82b6f7944fd7f44e261bd0d8cfca7e29af5d9d62","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/InheritTest.js","hash":"46424ee11acdf7076947456b64adb149247ba5a3","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPCFunctionTest.h","hash":"9bbee9b778c8f95993541d91d241d7a245c77e7f","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPInheritanceTestObjects.h","hash":"80946838772af428817c59afc389509679dcc9dd","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPCFunctionTest.m","hash":"569801960a3a4ba27a70338e7d49d0fa76dc9218","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPJSClassTest.h","hash":"52fe8b2df7c397be6da790eca3f2e8c56740d6bd","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPInheritanceTestObjects.m","hash":"8a49e44b39b6a2f4752fba1b0573482bcdebd6bf","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPMultithreadTestObject.m","hash":"9e433bdbe34ec25d76d9b841dc3a036d1a813fb9","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPJSClassTest.m","hash":"50919993704db7c654b891579116426739e61d3d","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPMultithreadTestObject.h","hash":"4137b4d71834aeff1c985b7414e45613c3684b70","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPPerformanceTest.h","hash":"1b49e54039c6f489982d59b0705c46c3637f6509","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPSuperTestObject.h","hash":"f90ceefca5213c7520f026183a60b75d736e6a1f","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPNumberTest.m","hash":"2789416a6d5f38155a018cccde4ffa460c2f40eb","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPNumberTest.h","hash":"63c9eeb5f081ef76013b96c59439256f25982661","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPSuperTestObject.m","hash":"069234f26df8c1b87284753820f154455059cfa3","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPPerformanceTest.m","hash":"f3fcbcf282c71e530ef0e433c68d0d489c4f7066","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPTestObject.h","hash":"7555c72e05276d30e4b72e040ee62fa714e887fd","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/jsCFunctionTest.js","hash":"897e7d76a0677683f40f95fc063be1b0880470f9","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/jsClassTest.js","hash":"5bc080f5e0c6a2bc00426f326cd79dd5d1046563","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/multithreadTest.js","hash":"5d1ebae998d8bb415570181322132954230cc427","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPTestObject.m","hash":"5c2f1e7cc8e204afc97e7b71976007784fd20148","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/jsNumberTest.js","hash":"212c8eab63cd24f823d922ec8554ecb83f3e2137","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JSPatchTests.m","hash":"ae08f8084f3d37f68ff4382dab197e56d9ffc1ea","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/newProtocolTest.js","hash":"5f33f0552ff064962fa37d2b84c735a45574fb04","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/performanceTest.js","hash":"52fd1ee6fd154383994e0a5a3227dd2efdd7b42c","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/protocolTest.js","hash":"f5c786ee592bf2454e65525f04f99377ef753f77","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/superTest.js","hash":"54b2e33e71f5819358de36f208df76319e939eb0","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/newProtocolTest.m","hash":"54a393c15015a14d53534e42c43196c16a15e5a7","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/test.js","hash":"8507634d75ce209352616d1f4d1dbcaa231dbad1","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/newProtocolTest.h","hash":"af7cedd7a5f6ad76b76772855ea06b733a9b8422","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGBitmapContext.h","hash":"333f424c694d4817915d50e95f5da34f9d90b19a","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGContext.h","hash":"4e7b711c863f261cb615558a4a7fd6d64cdffe6b","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGColor.m","hash":"858da9a681d892edf3620eb05182cc6007735ccf","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGBitmapContext.m","hash":"f4b16e4b76b6d7d3074134639079b85c64619818","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGColor.h","hash":"50d1bd17faa6eab7afc4e607a714da1f7c4c9eda","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGContext.m","hash":"a9d81ce9ca783e1323564e8bf5b57708071d048d","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGGeometry.h","hash":"080649e85daf661b1a4133ff825be473374112b9","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGImage.h","hash":"ffbc5e85904a88327e20f4fdd7d09058613741a6","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGGeometry.m","hash":"a9d4d2a95a79d1783d93149ba25f989fa6cf88dd","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGImage.m","hash":"dfb7751cb35a5c265c1b717a6bc455f6f148d5db","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGTransform.m","hash":"1039be20452c205eb27eba6d23aeff08917485b4","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGPath.h","hash":"960947a2b08203d3d051f867166da58eda9be8a2","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGPath.m","hash":"a628f53881f3a864ab2b9b0615b66fd122c00bfd","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGTransform.h","hash":"8a0ca37a1b689c9edf36a06e0ae2543652263e8f","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCoreGraphics.m","hash":"7b0a8d1115b69c8329e77b547a7aeeab19a99da4","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCoreGraphics.h","hash":"45e8f0ab255025d671c92cd03d7b611cea87b964","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/UIKit/JPUIGeometry.h","hash":"27cc0ef131e7f4ab2f57630454dacd8e321a846c","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/UIKit/JPUIGeometry.m","hash":"837df10b731a9c156e44e4bcfc18e9f7321eb2cd","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/UIKit/JPUIGraphics.m","hash":"1816a21e320875fa66ff3932c5fa7d8faeb8c82c","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/UIKit/JPUIGraphics.h","hash":"53a80fd361ddf02c2bd59c277b77e98170a512a1","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/UIKit/JPUIImage.m","hash":"ca0a9a7704d83c29366186bc7ffbae96f1203286","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/UIKit/JPUIImage.h","hash":"eacaf7342b4c6c8a41b91cd99c6fa6c1032e1253","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/UIKit/JPUIKit.h","hash":"6ec620bea1fa0010b2fa7b1ecbdb2f962ee82d23","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/UIKit/JPUIKit.m","hash":"654b31e828d5b00998905ab68fc5fbe5496d8f4f","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/libffi/ffi.h","hash":"90a16ec5a8408012f1ecedebae3bcf7c8f5361ce","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/libffi/ffi_i386.h","hash":"ac060b7cd7b5a5750b8cf67f5b154c3d11e97f9d","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/libffi/ffi_arm64.h","hash":"51cfd4d5c675a1486377aa5279b1c1798153fada","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/libffi/ffi_arm.h","hash":"8ae86db0662ddf9670e63a4e95d848b4bbe9bb0c","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/libffi/ffitarget.h","hash":"eae2265b384c36ad0c827ec23203ab73750c166a","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/libffi/ffi_x86_64.h","hash":"254954593f91d1a423b839f6b6587ac588f6f6b4","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/libffi/ffitarget_i386.h","hash":"32ea29ca134091e983a0029beec9341e5763cc04","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/libffi/ffitarget_arm64.h","hash":"fff5e22a28ea6769897edb739244fa482be9c1cf","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/libffi/ffitarget_arm.h","hash":"aab64e83fc89c05deb9e8689ce143556ba11eb8d","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/libffi/ffitarget_x86_64.h","hash":"f8fb53d79268244747a30b7003566959292cc535","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/JPPlaygroundModule/JPKeyCommands.h","hash":"71c13c1b3693200c1c0f7235e79a638059bad366","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/JPPlaygroundModule/JPKeyCommands.m","hash":"615471974bb75ffece1c9873ba951a4d5ceea98d","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/JPPlaygroundModule/SGDirWatchdog.m","hash":"a0687f1308f7c3e2ae7a7e019637f69dea225021","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevErrorView.h","hash":"b1b30141e2cf65ea57907527a97786b9c1f39422","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevErrorView.m","hash":"f39893f8030048b395049322bf91e12ecc7f932b","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/JPPlaygroundModule/SGDirWatchdog.h","hash":"b915160a2af82728767eb415bc89a9b74fa54a7a","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevMenu.h","hash":"b29265f5d97ce3ce3305a8ff1ad4e43e54702b08","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevTipView.h","hash":"c75330ebd7693c25b70baab13932ba571177624c","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevMenu.m","hash":"74c770fa43c7835d928fbb4f30b9b4ef8cd5069c","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevTipView.m","hash":"687f6a8478f1d1791bb51b811588cad37c5b8765","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Loader/libs/minizip/ioapi.h","hash":"d3c5d79817c6585529f89035945f2234f6a6acb6","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Loader/libs/minizip/crypt.h","hash":"82b2530bfe925b58eebd0a02cd9f2c5bd21dba50","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Loader/libs/minizip/ioapi.c","hash":"28482373ac6873edefcc1be5cca22e62a2e3887c","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Loader/libs/minizip/mztools.c","hash":"fe6372ccfb1245034aa1ceed4e16bf488cf96f7c","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Loader/libs/minizip/mztools.h","hash":"85458c02a1b2b7da6068bf8e98c4f0f66f4834d9","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Loader/libs/minizip/unzip.h","hash":"cbdaca78532d8925a5b2753849e5a097d62a7587","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Loader/libs/minizip/zip.h","hash":"8cef828db4766401b91bec9b47ca56a3118705fc","modified":1502209254000},{"_id":"source/hotFix热修复/demo_OC/demo_OC/Assets.xcassets/AppIcon.appiconset/Contents.json","hash":"4038dfb555b7c4d564502ede33d94ca7b9e26016","modified":1525771641000},{"_id":"source/hotFix热修复/demo_OC/demo_OC.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist","hash":"df5fe739b8b3ab69cf1a32a8881c48a1662e0340","modified":1551084238000},{"_id":"source/hotFix热修复/demo_hotfix/demo_hotfix/Assets.xcassets/AppIcon.appiconset/Contents.json","hash":"4038dfb555b7c4d564502ede33d94ca7b9e26016","modified":1525925692000},{"_id":"source/hotFix热修复/demo_hotfix/demo_hotfix.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist","hash":"df5fe739b8b3ab69cf1a32a8881c48a1662e0340","modified":1551084123000},{"_id":"source/hotFix热修复/invocation/invocation.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist","hash":"df5fe739b8b3ab69cf1a32a8881c48a1662e0340","modified":1551084230000},{"_id":"source/hotFix热修复/invocation/invocation/Assets.xcassets/AppIcon.appiconset/Contents.json","hash":"4038dfb555b7c4d564502ede33d94ca7b9e26016","modified":1525254561000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo.xcodeproj/project.pbxproj","hash":"b11a583fc801645dbf01c3aeb26dfc9ef8d5b412","modified":1524539921000},{"_id":"source/hotFix热修复/JSPatch-Demo/Loader/libs/minizip/unzip.c","hash":"5a2e492a0c1ab7e987bd7fb89fdf4d7944d1e4a9","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Loader/libs/minizip/zip.c","hash":"6d7a30544552aac1347f5350f5feff085bc8fcd4","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo.xcodeproj/project.pbxproj","hash":"47c84355acb57673ca0f1a43578bda06809a6094","modified":1526284353000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/require.tiff","hash":"47c778f8dce2b38aa0f587efc882ef8f9c1fd44f","modified":1525945774000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/self.tiff","hash":"361eb9c7741b6b7a524208e4caa1e5a3d0dcda06","modified":1525945775000},{"_id":"source/hotFix热修复/JSPatch-analyze/Loader/libs/minizip/zip.c","hash":"6d7a30544552aac1347f5350f5feff085bc8fcd4","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Loader/libs/minizip/unzip.c","hash":"5a2e492a0c1ab7e987bd7fb89fdf4d7944d1e4a9","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo.xcodeproj/project.pbxproj","hash":"68ff10a3a1872faf7090a897b78b13b7f075b1a1","modified":1525764696000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Loader/libs/minizip/unzip.c","hash":"5a2e492a0c1ab7e987bd7fb89fdf4d7944d1e4a9","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Loader/libs/minizip/zip.c","hash":"6d7a30544552aac1347f5350f5feff085bc8fcd4","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo.xcodeproj/project.xcworkspace/contents.xcworkspacedata","hash":"84243848f54b0c5983e1ed26defb41d262ce1354","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo/Supporting Files/Info.plist","hash":"a4ccfd7ebf50f61a87d2666a6b196c96181f0fd9","modified":1524539902000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo/Supporting Files/main.m","hash":"1d0be2e591c6c52da9751f0ea06a3e9fafb57f00","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/Supporting Files/Info.plist","hash":"a4ccfd7ebf50f61a87d2666a6b196c96181f0fd9","modified":1524539902000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/Supporting Files/main.m","hash":"1d0be2e591c6c52da9751f0ea06a3e9fafb57f00","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo.xcodeproj/project.xcworkspace/contents.xcworkspacedata","hash":"84243848f54b0c5983e1ed26defb41d262ce1354","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JS/demo_JS.xcodeproj/project.xcworkspace/xcuserdata/liu.xcuserdatad/UserInterfaceState.xcuserstate","hash":"68b11a70107c8f72ae131181bac4b7fe01d1a8f1","modified":1526549059000},{"_id":"source/hotFix热修复/demo_JS/demo_JS.xcodeproj/xcuserdata/liu.xcuserdatad/xcschemes/xcschememanagement.plist","hash":"f0db08dcd4eb92ab00a738556a8fedfd83cff825","modified":1525851006000},{"_id":"source/hotFix热修复/demo_JS/demo_JS.xcodeproj/xcuserdata/liu.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist","hash":"bf9877cb8aa9784eb83a6eb58d60a5723a72f40e","modified":1526548908000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo/Supporting Files/Info.plist","hash":"8318b4a15151fd8d463e38c993c635720a451cba","modified":1525765264000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo/Supporting Files/main.m","hash":"1d0be2e591c6c52da9751f0ea06a3e9fafb57f00","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo.xcodeproj/project.xcworkspace/contents.xcworkspacedata","hash":"84243848f54b0c5983e1ed26defb41d262ce1354","modified":1502209254000},{"_id":"source/hotFix热修复/demo_OC/demo_OC.xcodeproj/xcuserdata/liu.xcuserdatad/xcschemes/xcschememanagement.plist","hash":"31ac5af2eee0df9f31c44648338fcd5f06e37a7d","modified":1551084238000},{"_id":"source/hotFix热修复/demo_OC/demo_OC.xcodeproj/xcuserdata/liu.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist","hash":"07bd8a8acde0d19d770fad2a18834a084cb33965","modified":1551084239000},{"_id":"source/hotFix热修复/demo_hotfix/demo_hotfix.xcodeproj/xcuserdata/liu.xcuserdatad/xcschemes/xcschememanagement.plist","hash":"b14c9b18b570d967feb7744d2f6fb29b085438cd","modified":1551084123000},{"_id":"source/hotFix热修复/invocation/invocation.xcodeproj/xcuserdata/liu.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist","hash":"0bb97e7b8a17d7b1854146fab054d808164cffca","modified":1525255869000},{"_id":"source/hotFix热修复/invocation/invocation.xcodeproj/project.xcworkspace/xcuserdata/liu.xcuserdatad/UserInterfaceState.xcuserstate","hash":"07ae7a2321d929bd615e560dd3ef689c4a0a22f1","modified":1526542408000},{"_id":"source/hotFix热修复/invocation/invocation.xcodeproj/xcuserdata/liu.xcuserdatad/xcschemes/xcschememanagement.plist","hash":"4cd26e726e6c8d4988c4245ff3dd46d99e6680da","modified":1551084230000},{"_id":"source/hotFix热修复/demo_hotfix/demo_hotfix.xcodeproj/project.xcworkspace/xcuserdata/liu.xcuserdatad/UserInterfaceState.xcuserstate","hash":"408178a870946732f4d526c39b06de1cb401e8ca","modified":1551084127000},{"_id":"source/hotFix热修复/demo_OC/demo_OC.xcodeproj/project.xcworkspace/xcuserdata/liu.xcuserdatad/UserInterfaceState.xcuserstate","hash":"ff4ffd082496c5836905c9c6d267dd30a8695110","modified":1551084243000},{"_id":"source/images/hotfix_1.png","hash":"a5ba1f70cb4105670d5506d248451e309e57f31d","modified":1592911409495},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist","hash":"df5fe739b8b3ab69cf1a32a8881c48a1662e0340","modified":1551084150000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo.xcodeproj/xcshareddata/xcschemes/JSPatchDemo.xcscheme","hash":"4819f62a84833d4042a3eab48a3b265361d70ba3","modified":1525232009000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist","hash":"df5fe739b8b3ab69cf1a32a8881c48a1662e0340","modified":1551084222000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo.xcodeproj/xcshareddata/xcschemes/JSPatchDemo.xcscheme","hash":"4819f62a84833d4042a3eab48a3b265361d70ba3","modified":1525232009000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo.xcodeproj/xcshareddata/xcschemes/JSPatchDemo.xcscheme","hash":"5b63f5f99c89fdd62e196080515efaf80683c61c","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo/Supporting Files/Images.xcassets/AppIcon.appiconset/Contents.json","hash":"b903009155a78ae0480b42db13ad20de7b2616a1","modified":1525764674000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo.xcodeproj/xcuserdata/liu.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist","hash":"a6b204b7d0c9f8dfd182e98e5842e07d58056a36","modified":1551084212000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/Supporting Files/Images.xcassets/AppIcon.appiconset/Contents.json","hash":"b903009155a78ae0480b42db13ad20de7b2616a1","modified":1525764674000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/originMethod.tiff","hash":"5d1c23cb228de2cabcb2bf28e9b04e07d2e013df","modified":1525506447000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo.xcodeproj/project.xcworkspace/xcuserdata/liushuai.xcuserdatad/UserInterfaceState.xcuserstate","hash":"38a8c2cbd3e92c9bd6001c602c2873d8019ec74f","modified":1592808980000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo/Supporting Files/Images.xcassets/AppIcon.appiconset/Contents.json","hash":"29ec071853428ad7c844a49752735104a3c2c3ef","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo.xcodeproj/project.xcworkspace/xcuserdata/liu.xcuserdatad/UserInterfaceState.xcuserstate","hash":"339193d04ac843a33d51167f4f228124acdb7cd7","modified":1535709907000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo.xcodeproj/xcuserdata/liu.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist","hash":"0bb97e7b8a17d7b1854146fab054d808164cffca","modified":1525768417000},{"_id":"source/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo.xcodeproj/project.xcworkspace/xcuserdata/liu.xcuserdatad/UserInterfaceState.xcuserstate","hash":"3cb384ca48c7f37ccb2641a7279daef928bfa3e7","modified":1551084212000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo.xcodeproj/project.xcworkspace/xcuserdata/liu.xcuserdatad/UserInterfaceState.xcuserstate","hash":"a252042fb3d07960c71515f9b074cbd3d7417cce","modified":1526285527000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo.xcodeproj/xcuserdata/liu.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist","hash":"43e26d6bed50f4c338c3ff1af7f77dedc7e29c97","modified":1551084223000},{"_id":"source/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/global.self.tiff","hash":"132f4148d52dedd96d4a57b4fb9750508ceab72b","modified":1526281135000},{"_id":"source/hotFix热修复/热修复概述.key","hash":"bdc42704dc116d73afe2146e4cf7ad0fe2721e27","modified":1592913140896},{"_id":"source/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/libffi/libffi.a","hash":"a25ce5889d55b3a161065d57eb47211533f0aae0","modified":1502209254000},{"_id":"source/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/libffi/libffi.a","hash":"a25ce5889d55b3a161065d57eb47211533f0aae0","modified":1502209254000},{"_id":"source/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/libffi/libffi.a","hash":"a25ce5889d55b3a161065d57eb47211533f0aae0","modified":1502209254000},{"_id":"public/hotFix热修复/jspatch_text_js/main_test.js","hash":"ae2b214a2b707961a63d6777369eecfd466e9a2f","modified":1592981228904},{"_id":"public/hotFix热修复/jspatch_text_js/main.js","hash":"4f8b5ef38e56885171d4befd8ab72bd9d5360fbc","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JS/demo_JS/main.js","hash":"23f288c98a5e59ace32ddd7de749b1bdcc8f6746","modified":1592981228904},{"_id":"public/hotFix热修复/demo_hotfix/demo_hotfix/main.js","hash":"d29cf070d2018875d19df560ad028d2b071af092","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/JSPatch/JSPatch.js","hash":"cb421aef1c1f3613176aa17f09e35c32650ee343","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/JSPatch/JSPatch.js","hash":"80d66c0fdfc339eac324ce1bf98b0ff14ef2797b","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/JSPatch/JSPatch.js","hash":"ad1efc5d2270dab399d6abe29ad38e897af8ed4d","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo/demo.js","hash":"72f89fa9a376eabb0c327459af7127374e44a31f","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/InheritTest.js","hash":"46424ee11acdf7076947456b64adb149247ba5a3","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/jsClassTest.js","hash":"5bc080f5e0c6a2bc00426f326cd79dd5d1046563","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/jsCFunctionTest.js","hash":"897e7d76a0677683f40f95fc063be1b0880470f9","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/jsNumberTest.js","hash":"212c8eab63cd24f823d922ec8554ecb83f3e2137","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/multithreadTest.js","hash":"5d1ebae998d8bb415570181322132954230cc427","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/newProtocolTest.js","hash":"5f33f0552ff064962fa37d2b84c735a45574fb04","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/performanceTest.js","hash":"52fd1ee6fd154383994e0a5a3227dd2efdd7b42c","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/superTest.js","hash":"54b2e33e71f5819358de36f208df76319e939eb0","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/protocolTest.js","hash":"f5c786ee592bf2454e65525f04f99377ef753f77","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/demo.js","hash":"51c1a9f8e02f2d9fd8230b63ce932559bd323b9f","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/InheritTest.js","hash":"46424ee11acdf7076947456b64adb149247ba5a3","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/jsClassTest.js","hash":"5bc080f5e0c6a2bc00426f326cd79dd5d1046563","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/jsCFunctionTest.js","hash":"897e7d76a0677683f40f95fc063be1b0880470f9","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/multithreadTest.js","hash":"5d1ebae998d8bb415570181322132954230cc427","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/jsNumberTest.js","hash":"212c8eab63cd24f823d922ec8554ecb83f3e2137","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/newProtocolTest.js","hash":"5f33f0552ff064962fa37d2b84c735a45574fb04","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/performanceTest.js","hash":"52fd1ee6fd154383994e0a5a3227dd2efdd7b42c","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/protocolTest.js","hash":"f5c786ee592bf2454e65525f04f99377ef753f77","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/superTest.js","hash":"54b2e33e71f5819358de36f208df76319e939eb0","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JS/demo_JS/Assets.xcassets/AppIcon.appiconset/Contents.json","hash":"4c4709f5a4f51dd20addd33ed6c53e3cfe172680","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo/demo.js","hash":"48b81da87f44c96cee79efc77a808060a7436284","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/InheritTest.js","hash":"46424ee11acdf7076947456b64adb149247ba5a3","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/jsCFunctionTest.js","hash":"897e7d76a0677683f40f95fc063be1b0880470f9","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/jsClassTest.js","hash":"5bc080f5e0c6a2bc00426f326cd79dd5d1046563","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/multithreadTest.js","hash":"5d1ebae998d8bb415570181322132954230cc427","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/newProtocolTest.js","hash":"5f33f0552ff064962fa37d2b84c735a45574fb04","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/jsNumberTest.js","hash":"212c8eab63cd24f823d922ec8554ecb83f3e2137","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/performanceTest.js","hash":"52fd1ee6fd154383994e0a5a3227dd2efdd7b42c","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/protocolTest.js","hash":"f5c786ee592bf2454e65525f04f99377ef753f77","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/superTest.js","hash":"54b2e33e71f5819358de36f208df76319e939eb0","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC/Assets.xcassets/AppIcon.appiconset/Contents.json","hash":"4c4709f5a4f51dd20addd33ed6c53e3cfe172680","modified":1592981228904},{"_id":"public/hotFix热修复/demo_hotfix/demo_hotfix/Assets.xcassets/AppIcon.appiconset/Contents.json","hash":"4c4709f5a4f51dd20addd33ed6c53e3cfe172680","modified":1592981228904},{"_id":"public/hotFix热修复/invocation/invocation/Assets.xcassets/AppIcon.appiconset/Contents.json","hash":"4c4709f5a4f51dd20addd33ed6c53e3cfe172680","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/test.js","hash":"8507634d75ce209352616d1f4d1dbcaa231dbad1","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/test.js","hash":"8507634d75ce209352616d1f4d1dbcaa231dbad1","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/test.js","hash":"8507634d75ce209352616d1f4d1dbcaa231dbad1","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/Supporting Files/Images.xcassets/AppIcon.appiconset/Contents.json","hash":"0bc07f97d653c38cc1f02c1ae0ca897474e0dad6","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo/Supporting Files/Images.xcassets/AppIcon.appiconset/Contents.json","hash":"0bc07f97d653c38cc1f02c1ae0ca897474e0dad6","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo/Supporting Files/Images.xcassets/AppIcon.appiconset/Contents.json","hash":"5daa50a72c87318761d95b835a1de35464d3ef18","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/README-CN.html","hash":"7dd7913982ce549069069b4afe66b88150fb579a","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/README-CN.html","hash":"410169a57f2287522b8aa63130c45e0572aa86c6","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/README-CN.html","hash":"821b93517093483fb136b063f8b4ae724106d366","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/README.html","hash":"8a15cbd44542368ff656f577cf916be8de8ecb36","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/README.html","hash":"33eaec31aa72d09cfecbe9666f332d28f2b16ac7","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/README.html","hash":"c939bcb97078395294b4d0daabca8726505d0a9b","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/README.html","hash":"786eb6d901f15314b8b627c453642dee61fe9e7c","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/README.html","hash":"c0afe8666649bb27938282b0791d16fe7b461bcf","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/README.html","hash":"af6430e9c5919412533c37e7940b0dbb91d95f2e","modified":1592981228904},{"_id":"public/2018/07/22/hot-fix/index.html","hash":"ac5c5f58c33148f78c56e91e3a680618e17402d5","modified":1593336656177},{"_id":"public/2018/05/22/runloop/index.html","hash":"1289fc558f463f75b3db93054f0a40d9868f28e9","modified":1593336656177},{"_id":"public/2018/03/21/deeplinking/index.html","hash":"a0414ff87df8ead714c4bfad694135c8e912d60f","modified":1593336656177},{"_id":"public/archives/page/3/index.html","hash":"c74d037f42084025c05e0bb3cb5a20230bd6e66f","modified":1593340118690},{"_id":"public/archives/2018/03/index.html","hash":"bb0581644a7b6fda3142dd7e4a2143d540c08a0f","modified":1593336656177},{"_id":"public/archives/2018/05/index.html","hash":"3289b9b5461c007d42518e7025d73742565a8282","modified":1593336656177},{"_id":"public/archives/2018/07/index.html","hash":"ba103788cbe5ca39001253251008fe76073c9146","modified":1593336656177},{"_id":"public/page/3/index.html","hash":"e68141d75edd7fb6b1f6e39e231aa8aba5196045","modified":1593340118690},{"_id":"public/categories/deeplinking/index.html","hash":"5e67a0eeb818dc66caebd37d2c3032a395708ce8","modified":1593336656177},{"_id":"public/categories/热修复/index.html","hash":"0f6b53835de9b8d3a38fbc0ffa3e35214211d1ce","modified":1593336656177},{"_id":"public/categories/iOS/index.html","hash":"ef2e9e1a1dec73de6fa27755b6ba79aed0cf2b3b","modified":1593336656177},{"_id":"public/categories/通用链接/index.html","hash":"5bb0225941d42b5d60b8a5941e55c7090c6ba7d7","modified":1593336656177},{"_id":"public/categories/JSPatch/index.html","hash":"d6ed5c52decb827dc190fcab276b0284bf1ec4dd","modified":1593336656177},{"_id":"public/categories/RunLoop/index.html","hash":"d0f8420d135baad263ed04f26e2d47e64dc40790","modified":1593336656177},{"_id":"public/tags/deeplinking/index.html","hash":"3578c56c3aeb8ecd87e5c96133900ca8a463674d","modified":1593336656177},{"_id":"public/tags/通用链接/index.html","hash":"377e51fef50a2324e4210cbf5524bf3757395de2","modified":1593336656177},{"_id":"public/tags/热修复/index.html","hash":"43930015a7f8815f3bcf71ea6f7c7a2e5cfe4d18","modified":1593336656177},{"_id":"public/tags/JSPatch/index.html","hash":"08b9004d3c3345c153e0996a46b6091d1936e671","modified":1593336656177},{"_id":"public/tags/RunLoop/index.html","hash":"e98c42bddc5b3a31d682cde754c662826739d3ae","modified":1593336656177},{"_id":"public/hotFix热修复/hotfix_demo.php","hash":"e5ff4ae2105c13eb2939aa3dc7e19a986218531d","modified":1592981228904},{"_id":"public/hotFix热修复/hotfix_demo_original.php","hash":"567d91de5934518a0db276de9471ada114ae2768","modified":1592981228904},{"_id":"public/hotFix热修复/hotfix_js.php","hash":"ceae6e2c3c6775f62892fe3eb7dd5ff448644840","modified":1592981228904},{"_id":"public/hotFix热修复/hotfix_protocol.php","hash":"fbeae98f1727af9e69f4aa707f13e760d1933de7","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/JSPatch.podspec","hash":"de5a981b87c3b5e86a0df49926bcdd8968e58f56","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/LICENSE","hash":"6ff55dce85391e8634b3a300ef32ed4875528fdf","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/LICENSE","hash":"6ff55dce85391e8634b3a300ef32ed4875528fdf","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/JSPatch.podspec","hash":"de5a981b87c3b5e86a0df49926bcdd8968e58f56","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/JSPatch.podspec","hash":"de5a981b87c3b5e86a0df49926bcdd8968e58f56","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/LICENSE","hash":"6ff55dce85391e8634b3a300ef32ed4875528fdf","modified":1592981228904},{"_id":"public/hotFix热修复/jspatch_text_js/rsa_private_key.pem","hash":"69ceb0ce81f6f373ec63233a24c938da537c577d","modified":1592981228904},{"_id":"public/hotFix热修复/jspatch_text_js/rsa_public_key.pem","hash":"51452933416ce86efbbd99b7e3a31efb64e69523","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCleaner.h","hash":"a07057944c08afb44b25eca54da7d3b8ec7df861","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCleaner.m","hash":"8cfa539a007cd0bd51e1b7e111747087e72fb3a4","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPDispatch.h","hash":"e2784bd4d5bae4d85711aedf1ca7ac6e80faa36e","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPDispatch.m","hash":"0b4632be4974ac575760a881c9c38d2b0d18511e","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPLocker.h","hash":"4badec40ebf939b32e2a9668e7f7d22956bf323c","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPLocker.m","hash":"e09dec33fc72adb98c3785b43ee09b58c2cbe4ec","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPNumber.h","hash":"96a8bb3bc342e59748daec01b38f0274af20a79e","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPProtocol.h","hash":"17acb541f7abe9805ceaf9ecb1d7827009309ad5","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPNumber.m","hash":"69e4bd4e780cafaaee87e48a9bca8c96b0446c62","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPProtocol.m","hash":"1ff0875cc3dcdcc607d65ffe38af902b70fabbe5","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPSpecialInit.m","hash":"6d45b7f11d76caf658294f19c1bf1b8328f2eaf7","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPSpecialInit.h","hash":"743d2bedfc75008adb751e5ecaaf05efc4f13aa3","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Loader/JPLoader.h","hash":"030074bab4a2040e854bad757508e2088bfaef90","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCleaner.m","hash":"8cfa539a007cd0bd51e1b7e111747087e72fb3a4","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/JSPatch/JPEngine.h","hash":"8211f7a4df4160132142dea1cdd844ba9995ff4a","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPDispatch.h","hash":"e2784bd4d5bae4d85711aedf1ca7ac6e80faa36e","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCleaner.h","hash":"a07057944c08afb44b25eca54da7d3b8ec7df861","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Loader/JPLoader.m","hash":"693c968a07fb4f369211f035fd842540871bff69","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPLocker.h","hash":"4badec40ebf939b32e2a9668e7f7d22956bf323c","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPLocker.m","hash":"e09dec33fc72adb98c3785b43ee09b58c2cbe4ec","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPDispatch.m","hash":"0b4632be4974ac575760a881c9c38d2b0d18511e","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPNumber.h","hash":"96a8bb3bc342e59748daec01b38f0274af20a79e","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPNumber.m","hash":"69e4bd4e780cafaaee87e48a9bca8c96b0446c62","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPProtocol.h","hash":"17acb541f7abe9805ceaf9ecb1d7827009309ad5","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPProtocol.m","hash":"1ff0875cc3dcdcc607d65ffe38af902b70fabbe5","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPSpecialInit.h","hash":"743d2bedfc75008adb751e5ecaaf05efc4f13aa3","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Loader/JPLoader.h","hash":"030074bab4a2040e854bad757508e2088bfaef90","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPSpecialInit.m","hash":"6d45b7f11d76caf658294f19c1bf1b8328f2eaf7","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JS/demo_JS/AppDelegate.m","hash":"c6caf0b520d1c75fee67cd7165d0c65d0882f00d","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JS/demo_JS/JSDemoViewController.h","hash":"bea5975dd4de411c17381331b48e1e188d0e3fd7","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JS/demo_JS/Info.plist","hash":"295ce35c96006bb7fe3fa3752b45b128fafd3c8a","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JS/demo_JS/JSOCBridgeDemoViewController.h","hash":"5898ed3107809f757dc17774b6037b17aea6c7cb","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JS/demo_JS/ViewController.h","hash":"322ebd9698862155a339efb1865d1d769254357e","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JS/demo_JS/JSDemoViewController.m","hash":"9871646647c5bffc56b92dfe9660dfef3427764b","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JS/demo_JS/main.m","hash":"f1ea26c50121ed45d69126418d6aa61fe6641e53","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JS/demo_JS/ViewController.m","hash":"ce0a963504fdaac4b2f2667e5c9d795e591c9fab","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Loader/JPLoader.m","hash":"693c968a07fb4f369211f035fd842540871bff69","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JS/demo_JS/AppDelegate.h","hash":"6a36d7768e1bc811fdd79051d53ea563a7a3e76b","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCleaner.h","hash":"a07057944c08afb44b25eca54da7d3b8ec7df861","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JS/demo_JS/JSOCBridgeDemoViewController.m","hash":"3d00837253cb0ee57cb99e340447646c27f4fce8","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCleaner.m","hash":"8cfa539a007cd0bd51e1b7e111747087e72fb3a4","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPDispatch.h","hash":"e2784bd4d5bae4d85711aedf1ca7ac6e80faa36e","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JS/demo_JS.xcodeproj/project.pbxproj","hash":"e5955cae2bd647ba2844e6c1d5f258dffb1d003c","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPLocker.h","hash":"4badec40ebf939b32e2a9668e7f7d22956bf323c","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPLocker.m","hash":"e09dec33fc72adb98c3785b43ee09b58c2cbe4ec","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPDispatch.m","hash":"0b4632be4974ac575760a881c9c38d2b0d18511e","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPNumber.h","hash":"96a8bb3bc342e59748daec01b38f0274af20a79e","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPNumber.m","hash":"69e4bd4e780cafaaee87e48a9bca8c96b0446c62","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPProtocol.m","hash":"1ff0875cc3dcdcc607d65ffe38af902b70fabbe5","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPProtocol.h","hash":"17acb541f7abe9805ceaf9ecb1d7827009309ad5","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPSpecialInit.m","hash":"6d45b7f11d76caf658294f19c1bf1b8328f2eaf7","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/JSPatch/JPEngine.h","hash":"a0824c035de46e06510e2e7c4f683bfbcda2c777","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Loader/JPLoader.h","hash":"030074bab4a2040e854bad757508e2088bfaef90","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPSpecialInit.h","hash":"743d2bedfc75008adb751e5ecaaf05efc4f13aa3","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC/AppDelegate.m","hash":"261cf0fc3a98911d8609bbc2f435cddfaf27207b","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Loader/JPLoader.m","hash":"8e19a88c5fdc026b8d504df9c8815706d88470c4","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC/ClassDemoController.h","hash":"3a8903956fef7b6597284558f70c749001f42109","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC/ClassDemoController.m","hash":"a17bf484c95a3932dd5adb45351b71a0d8db8481","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC/AppDelegate.h","hash":"eed99008b4187ab15c85d4d773e581815af7afef","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC/DemoClass.h","hash":"f8160c96ae272cc2885cdd7e276946cb433d6199","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC/DemoClass.m","hash":"2e53490c85a31c7d6198d96e723b7de8de697eb1","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC/MethodDemoViewController.h","hash":"680ee692c6f41ce408870287ec34d9c0f35d5501","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC/MethodForwardDemoController.m","hash":"72bb5ceb12fa75c23e501c6ccf8f9d84be4ad018","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC/MethodDemoViewController.m","hash":"32c95ebac80f09bc7533290dd1cad607d1ab1ea1","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC/MethodInvokeClass.m","hash":"27af604c1edceb36092086c40158620084ef036c","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC/MethodInvokeClass.h","hash":"f7e2d8cbce2876aa6157358bab2c4eecdbd7c30e","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC/MethodInvokeDemoController.h","hash":"9820d5fef67ce6ff35b6f957ec231039a92e1307","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC/VarDemoViewController.h","hash":"ba839964849f9333d794994b7ccbfd8a916dbc57","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC/MethodInvokeDemoController.m","hash":"7bb478ae09a5ac4d3e30d097cd4782e1c4a31786","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC/Info.plist","hash":"295ce35c96006bb7fe3fa3752b45b128fafd3c8a","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC/ViewController.h","hash":"20c6d33bca6dc210461074a2e66cd7b9950752de","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC/MethodForwardDemoController.h","hash":"76e16c6d20044160761918c54677ccca3f58c015","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC/VarDemoViewController.m","hash":"b84a8bbf21ee9b29921ddd22cfd76a5b6c72fcec","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC/main.m","hash":"157956d6c03c881d47dbbcc16d8955d1b8d53a99","modified":1592981228904},{"_id":"public/hotFix热修复/demo_hotfix/demo_hotfix/AppDelegate.h","hash":"c786a106ee1d546b49610226e47446ddc476ecc5","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC/ViewController.m","hash":"03804a52b6a06c4e498f5f431c2a30539202572d","modified":1592981228904},{"_id":"public/hotFix热修复/demo_hotfix/demo_hotfix/AppDelegate.m","hash":"d69a0cbfa9900039f4cc74fdef5d9a1b1566fb3a","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC.xcodeproj/project.pbxproj","hash":"b1f87aef7c6cb5e7033556f4ffd28928231e234b","modified":1592981228904},{"_id":"public/hotFix热修复/demo_hotfix/demo_hotfix/Info.plist","hash":"295ce35c96006bb7fe3fa3752b45b128fafd3c8a","modified":1592981228904},{"_id":"public/hotFix热修复/demo_hotfix/demo_hotfix/ViewController.h","hash":"8624090f7c4640a8381e5ace1493098da0a44ebb","modified":1592981228904},{"_id":"public/hotFix热修复/demo_hotfix/demo_hotfix/ViewController.m","hash":"3ee7b081e7a8864304cae89417583d463d34f99c","modified":1592981228904},{"_id":"public/hotFix热修复/demo_hotfix/demo_hotfix/main.m","hash":"cf9d81913b9fbae604f587c3a090745ca2bf89de","modified":1592981228904},{"_id":"public/hotFix热修复/invocation/invocation/AppDelegate.h","hash":"e4f56568d23b787fc79d7fae775cf9cf35b06832","modified":1592981228904},{"_id":"public/hotFix热修复/invocation/invocation/AppDelegate.m","hash":"6baa12745dc3c6cbd435ced06be048f49e4ca079","modified":1592981228904},{"_id":"public/hotFix热修复/invocation/invocation/Info.plist","hash":"95c71dbe598de6169e927fbf5c579175da90d355","modified":1592981228904},{"_id":"public/hotFix热修复/invocation/invocation/TestObj.h","hash":"343a979e824a3058c5efdbfc6b99f307661d20a8","modified":1592981228904},{"_id":"public/hotFix热修复/invocation/invocation/ViewController.h","hash":"1bfc40146dd8ce5308c28048803103262c2d3cdc","modified":1592981228904},{"_id":"public/hotFix热修复/invocation/invocation/ViewController.m","hash":"3a1fc65bc7e26210b17314112458dba7da61fe27","modified":1592981228904},{"_id":"public/hotFix热修复/invocation/invocation/main.m","hash":"74f57a905608286e53403fe03404289e1d81b13f","modified":1592981228904},{"_id":"public/hotFix热修复/demo_hotfix/demo_hotfix.xcodeproj/project.pbxproj","hash":"e204fa5223a381141c1c208a6e8e3713f78876a5","modified":1592981228904},{"_id":"public/hotFix热修复/invocation/invocation/TestObj.m","hash":"e0c80a488f37b45c0376db1f9587752da8100268","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/JSPatch/JPEngine.h","hash":"8211f7a4df4160132142dea1cdd844ba9995ff4a","modified":1592981228904},{"_id":"public/hotFix热修复/invocation/invocation.xcodeproj/project.pbxproj","hash":"234be8060633f7190cd35384158bd3aea3a2f916","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPBlock/JPBlock.h","hash":"e8f8cb971dbe23633c0e93b5dda4f0140805f644","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPBlock/JPBlock.m","hash":"e6a7d2ed2e867019d66fbb7433c740d81b37b10b","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPBlock/JPBlockWrapper.h","hash":"231417bd6ef26dce4f8fadf3c2f0347a6698d2cd","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunction/JPCFunction.h","hash":"688902b45d26a689f0bc61fb2fbc97f7eea3014b","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunction/JPMemory.h","hash":"be201361e261eec775d2fe44c08c2414139c4ee9","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunction/JPStructPointer.h","hash":"c802d1c3878b82cfb5b6bd0cd8ead7bdfe3ec1ee","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPBlock/JPBlockWrapper.m","hash":"d2d80440a759aba4f3514ea8115bae8e1b1dd75a","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunction/JPMemory.m","hash":"8eae4e0352e5ae41070c987b7b7517b1512d36ef","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunction/JPCFunction.m","hash":"4b4a18f0dd76a720ff30fd20dd672fe42bb1372c","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunction/JPStructPointer.m","hash":"59508ea3daafc6c66664edb5125b19c757a4a001","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/JPMethodSignature.m","hash":"9b450a8fd8dc07788cae62f788f1576a1b54bc74","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/JPMethodSignature.h","hash":"76b1a0a64555695669e9849ffc46ab1370a3ceb9","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/JPPlayground.h","hash":"8c7a8d6069413ce217d5b168ab93c1ffc9470dc4","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Loader/tools/packer.php","hash":"3e30d272951e5af7f5879df54808e828ad274d4e","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Loader/libs/ZipArchive.h","hash":"f526b70db840f4968ffe4018c87b1c2b991fe3bf","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/JPPlayground.m","hash":"24a8b33bdb0a8c12d19f7f5f9ab377264376b4a0","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Loader/libs/RSA.m","hash":"fc2d08c78b4b185934a3fff3148479ceaee7b870","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Loader/libs/RSA.h","hash":"a656c2a5fda0ba7b507c0bf1dbb72a3b93af4b58","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPBlock/JPBlock.m","hash":"e6a7d2ed2e867019d66fbb7433c740d81b37b10b","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPBlock/JPBlockWrapper.m","hash":"d2d80440a759aba4f3514ea8115bae8e1b1dd75a","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPBlock/JPBlock.h","hash":"e8f8cb971dbe23633c0e93b5dda4f0140805f644","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Loader/libs/ZipArchive.m","hash":"697dd72e5d9fb6e9b67330fbd2967bfa87fb73a0","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPBlock/JPBlockWrapper.h","hash":"231417bd6ef26dce4f8fadf3c2f0347a6698d2cd","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunction/JPCFunction.h","hash":"688902b45d26a689f0bc61fb2fbc97f7eea3014b","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunction/JPMemory.h","hash":"be201361e261eec775d2fe44c08c2414139c4ee9","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunction/JPCFunction.m","hash":"4b4a18f0dd76a720ff30fd20dd672fe42bb1372c","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunction/JPMemory.m","hash":"8eae4e0352e5ae41070c987b7b7517b1512d36ef","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunction/JPStructPointer.m","hash":"59508ea3daafc6c66664edb5125b19c757a4a001","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunction/JPStructPointer.h","hash":"c802d1c3878b82cfb5b6bd0cd8ead7bdfe3ec1ee","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/JPMethodSignature.h","hash":"76b1a0a64555695669e9849ffc46ab1370a3ceb9","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/JPMethodSignature.m","hash":"9b450a8fd8dc07788cae62f788f1576a1b54bc74","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/JPPlayground.h","hash":"8c7a8d6069413ce217d5b168ab93c1ffc9470dc4","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/JPPlayground.m","hash":"24a8b33bdb0a8c12d19f7f5f9ab377264376b4a0","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Loader/libs/ZipArchive.h","hash":"f526b70db840f4968ffe4018c87b1c2b991fe3bf","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Loader/libs/RSA.m","hash":"fc2d08c78b4b185934a3fff3148479ceaee7b870","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Loader/tools/packer.php","hash":"3e30d272951e5af7f5879df54808e828ad274d4e","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Loader/libs/RSA.h","hash":"a656c2a5fda0ba7b507c0bf1dbb72a3b93af4b58","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Loader/libs/ZipArchive.m","hash":"697dd72e5d9fb6e9b67330fbd2967bfa87fb73a0","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JS/demo_JS/Base.lproj/LaunchScreen.storyboard","hash":"5e869db384b070cba384072f2876fa8cba6702d0","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JS/demo_JS/Base.lproj/Main.storyboard","hash":"ed581c6f1121152f979096bd7cf11781312c1408","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JS/demo_JS.xcodeproj/project.xcworkspace/contents.xcworkspacedata","hash":"f8e17a19ecd049822a1dca690432917f6d3894a1","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPBlock/JPBlock.m","hash":"e6a7d2ed2e867019d66fbb7433c740d81b37b10b","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPBlock/JPBlock.h","hash":"e8f8cb971dbe23633c0e93b5dda4f0140805f644","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPBlock/JPBlockWrapper.h","hash":"231417bd6ef26dce4f8fadf3c2f0347a6698d2cd","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPBlock/JPBlockWrapper.m","hash":"d2d80440a759aba4f3514ea8115bae8e1b1dd75a","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunction/JPCFunction.h","hash":"688902b45d26a689f0bc61fb2fbc97f7eea3014b","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunction/JPCFunction.m","hash":"4b4a18f0dd76a720ff30fd20dd672fe42bb1372c","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunction/JPMemory.h","hash":"be201361e261eec775d2fe44c08c2414139c4ee9","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunction/JPStructPointer.m","hash":"59508ea3daafc6c66664edb5125b19c757a4a001","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunction/JPStructPointer.h","hash":"c802d1c3878b82cfb5b6bd0cd8ead7bdfe3ec1ee","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunction/JPMemory.m","hash":"8eae4e0352e5ae41070c987b7b7517b1512d36ef","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/JPMethodSignature.h","hash":"76b1a0a64555695669e9849ffc46ab1370a3ceb9","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/JPPlayground.h","hash":"8c7a8d6069413ce217d5b168ab93c1ffc9470dc4","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/JPMethodSignature.m","hash":"9b450a8fd8dc07788cae62f788f1576a1b54bc74","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/JPPlayground.m","hash":"24a8b33bdb0a8c12d19f7f5f9ab377264376b4a0","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Loader/libs/RSA.m","hash":"fc2d08c78b4b185934a3fff3148479ceaee7b870","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Loader/libs/RSA.h","hash":"a656c2a5fda0ba7b507c0bf1dbb72a3b93af4b58","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Loader/libs/ZipArchive.h","hash":"f526b70db840f4968ffe4018c87b1c2b991fe3bf","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Loader/tools/packer.php","hash":"3e30d272951e5af7f5879df54808e828ad274d4e","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC.xcodeproj/project.xcworkspace/contents.xcworkspacedata","hash":"9d5e33e9860ed2ac37f2065369dc0b4f5d766bbe","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Loader/libs/ZipArchive.m","hash":"697dd72e5d9fb6e9b67330fbd2967bfa87fb73a0","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC/Base.lproj/LaunchScreen.storyboard","hash":"51555cb1915bc6034a55482c4f240ed24498b1a2","modified":1592981228904},{"_id":"public/hotFix热修复/demo_hotfix/demo_hotfix/Base.lproj/LaunchScreen.storyboard","hash":"31bdf54b2e757430f732000ad79c5324b0bd4f55","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC/Base.lproj/Main.storyboard","hash":"f00f7e2d92e0c070c7aa25766795da17015dfdea","modified":1592981228904},{"_id":"public/hotFix热修复/demo_hotfix/demo_hotfix.xcodeproj/project.xcworkspace/contents.xcworkspacedata","hash":"a67632c74ee225437b3301190905cb3b34cc9a14","modified":1592981228904},{"_id":"public/hotFix热修复/invocation/invocation/Base.lproj/LaunchScreen.storyboard","hash":"4ff1a615e617ca5d32673c109b939b1412edb37a","modified":1592981228904},{"_id":"public/hotFix热修复/invocation/invocation/Base.lproj/Main.storyboard","hash":"a6556897c0665608689d54ab936ea018c22ffcad","modified":1592981228904},{"_id":"public/hotFix热修复/invocation/invocation.xcodeproj/project.xcworkspace/contents.xcworkspacedata","hash":"be2060ea534e7fbcd488e8f4c1f05edaa25840de","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo/AppDelegate.m","hash":"21eb555f11822df4d7e2dfaba36ca30e73e956c8","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo/JPViewController.m","hash":"ffae8128714d6eeb697987bd7b80315633d99bc1","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo/AppDelegate.h","hash":"833bf7d272f666bbc667c23b8176400b295bf93a","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo/JPViewController.h","hash":"ae4a6d1e66a185e83145de30564b3b8417b60f32","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPInheritanceTestObjects.h","hash":"80946838772af428817c59afc389509679dcc9dd","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/Info.plist","hash":"82b6f7944fd7f44e261bd0d8cfca7e29af5d9d62","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPCFunctionTest.h","hash":"9bbee9b778c8f95993541d91d241d7a245c77e7f","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPCFunctionTest.m","hash":"569801960a3a4ba27a70338e7d49d0fa76dc9218","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPInheritanceTestObjects.m","hash":"8a49e44b39b6a2f4752fba1b0573482bcdebd6bf","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPJSClassTest.h","hash":"52fe8b2df7c397be6da790eca3f2e8c56740d6bd","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPMultithreadTestObject.m","hash":"9e433bdbe34ec25d76d9b841dc3a036d1a813fb9","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPMultithreadTestObject.h","hash":"4137b4d71834aeff1c985b7414e45613c3684b70","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPNumberTest.m","hash":"2789416a6d5f38155a018cccde4ffa460c2f40eb","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPJSClassTest.m","hash":"50919993704db7c654b891579116426739e61d3d","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPPerformanceTest.h","hash":"1b49e54039c6f489982d59b0705c46c3637f6509","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPSuperTestObject.h","hash":"f90ceefca5213c7520f026183a60b75d736e6a1f","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPNumberTest.h","hash":"63c9eeb5f081ef76013b96c59439256f25982661","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPPerformanceTest.m","hash":"f3fcbcf282c71e530ef0e433c68d0d489c4f7066","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPSuperTestObject.m","hash":"069234f26df8c1b87284753820f154455059cfa3","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPTestObject.m","hash":"5c2f1e7cc8e204afc97e7b71976007784fd20148","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JSPatchTests.m","hash":"ae08f8084f3d37f68ff4382dab197e56d9ffc1ea","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/newProtocolTest.h","hash":"af7cedd7a5f6ad76b76772855ea06b733a9b8422","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/JPTestObject.h","hash":"7555c72e05276d30e4b72e040ee62fa714e887fd","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchTests/newProtocolTest.m","hash":"54a393c15015a14d53534e42c43196c16a15e5a7","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGBitmapContext.h","hash":"333f424c694d4817915d50e95f5da34f9d90b19a","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGColor.m","hash":"858da9a681d892edf3620eb05182cc6007735ccf","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGContext.h","hash":"4e7b711c863f261cb615558a4a7fd6d64cdffe6b","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGGeometry.h","hash":"080649e85daf661b1a4133ff825be473374112b9","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGGeometry.m","hash":"a9d4d2a95a79d1783d93149ba25f989fa6cf88dd","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGBitmapContext.m","hash":"f4b16e4b76b6d7d3074134639079b85c64619818","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGColor.h","hash":"50d1bd17faa6eab7afc4e607a714da1f7c4c9eda","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGImage.h","hash":"ffbc5e85904a88327e20f4fdd7d09058613741a6","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGImage.m","hash":"dfb7751cb35a5c265c1b717a6bc455f6f148d5db","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGPath.h","hash":"960947a2b08203d3d051f867166da58eda9be8a2","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGTransform.h","hash":"8a0ca37a1b689c9edf36a06e0ae2543652263e8f","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGTransform.m","hash":"1039be20452c205eb27eba6d23aeff08917485b4","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGPath.m","hash":"a628f53881f3a864ab2b9b0615b66fd122c00bfd","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCoreGraphics.h","hash":"45e8f0ab255025d671c92cd03d7b611cea87b964","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCGContext.m","hash":"a9d81ce9ca783e1323564e8bf5b57708071d048d","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/CoreGraphics/JPCoreGraphics.m","hash":"7b0a8d1115b69c8329e77b547a7aeeab19a99da4","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/UIKit/JPUIGraphics.m","hash":"1816a21e320875fa66ff3932c5fa7d8faeb8c82c","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/UIKit/JPUIImage.h","hash":"eacaf7342b4c6c8a41b91cd99c6fa6c1032e1253","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/UIKit/JPUIGeometry.m","hash":"837df10b731a9c156e44e4bcfc18e9f7321eb2cd","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/UIKit/JPUIKit.h","hash":"6ec620bea1fa0010b2fa7b1ecbdb2f962ee82d23","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/UIKit/JPUIGeometry.h","hash":"27cc0ef131e7f4ab2f57630454dacd8e321a846c","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/UIKit/JPUIImage.m","hash":"ca0a9a7704d83c29366186bc7ffbae96f1203286","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/UIKit/JPUIGraphics.h","hash":"53a80fd361ddf02c2bd59c277b77e98170a512a1","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPCFunctionBinder/UIKit/JPUIKit.m","hash":"654b31e828d5b00998905ab68fc5fbe5496d8f4f","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/libffi/ffi.h","hash":"90a16ec5a8408012f1ecedebae3bcf7c8f5361ce","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/libffi/ffi_i386.h","hash":"ac060b7cd7b5a5750b8cf67f5b154c3d11e97f9d","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/libffi/ffi_arm.h","hash":"8ae86db0662ddf9670e63a4e95d848b4bbe9bb0c","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/libffi/ffi_arm64.h","hash":"51cfd4d5c675a1486377aa5279b1c1798153fada","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/libffi/ffitarget.h","hash":"eae2265b384c36ad0c827ec23203ab73750c166a","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/libffi/ffi_x86_64.h","hash":"254954593f91d1a423b839f6b6587ac588f6f6b4","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/libffi/ffitarget_arm.h","hash":"aab64e83fc89c05deb9e8689ce143556ba11eb8d","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/libffi/ffitarget_arm64.h","hash":"fff5e22a28ea6769897edb739244fa482be9c1cf","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/libffi/ffitarget_i386.h","hash":"32ea29ca134091e983a0029beec9341e5763cc04","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/libffi/ffitarget_x86_64.h","hash":"f8fb53d79268244747a30b7003566959292cc535","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/JPPlaygroundModule/JPKeyCommands.h","hash":"71c13c1b3693200c1c0f7235e79a638059bad366","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/JPPlaygroundModule/JPKeyCommands.m","hash":"615471974bb75ffece1c9873ba951a4d5ceea98d","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/JPPlaygroundModule/SGDirWatchdog.h","hash":"b915160a2af82728767eb415bc89a9b74fa54a7a","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevErrorView.m","hash":"f39893f8030048b395049322bf91e12ecc7f932b","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevErrorView.h","hash":"b1b30141e2cf65ea57907527a97786b9c1f39422","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevMenu.h","hash":"b29265f5d97ce3ce3305a8ff1ad4e43e54702b08","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevMenu.m","hash":"74c770fa43c7835d928fbb4f30b9b4ef8cd5069c","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevTipView.h","hash":"c75330ebd7693c25b70baab13932ba571177624c","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevTipView.m","hash":"687f6a8478f1d1791bb51b811588cad37c5b8765","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPPlaygroundTool/JPPlaygroundModule/SGDirWatchdog.m","hash":"a0687f1308f7c3e2ae7a7e019637f69dea225021","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Loader/libs/minizip/ioapi.c","hash":"28482373ac6873edefcc1be5cca22e62a2e3887c","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Loader/libs/minizip/crypt.h","hash":"82b2530bfe925b58eebd0a02cd9f2c5bd21dba50","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Loader/libs/minizip/ioapi.h","hash":"d3c5d79817c6585529f89035945f2234f6a6acb6","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Loader/libs/minizip/mztools.c","hash":"fe6372ccfb1245034aa1ceed4e16bf488cf96f7c","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Loader/libs/minizip/mztools.h","hash":"85458c02a1b2b7da6068bf8e98c4f0f66f4834d9","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Loader/libs/minizip/unzip.h","hash":"cbdaca78532d8925a5b2753849e5a097d62a7587","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Loader/libs/minizip/zip.h","hash":"8cef828db4766401b91bec9b47ca56a3118705fc","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/AppDelegate.h","hash":"833bf7d272f666bbc667c23b8176400b295bf93a","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/AppDelegate.m","hash":"21eb555f11822df4d7e2dfaba36ca30e73e956c8","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/JPViewController.m","hash":"71cfc6d5112cd901ca2f957984f0871840a6770e","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/Info.plist","hash":"82b6f7944fd7f44e261bd0d8cfca7e29af5d9d62","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/JPViewController.h","hash":"ae4a6d1e66a185e83145de30564b3b8417b60f32","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPCFunctionTest.h","hash":"9bbee9b778c8f95993541d91d241d7a245c77e7f","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPCFunctionTest.m","hash":"569801960a3a4ba27a70338e7d49d0fa76dc9218","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPInheritanceTestObjects.h","hash":"80946838772af428817c59afc389509679dcc9dd","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPJSClassTest.h","hash":"52fe8b2df7c397be6da790eca3f2e8c56740d6bd","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPJSClassTest.m","hash":"50919993704db7c654b891579116426739e61d3d","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPMultithreadTestObject.h","hash":"4137b4d71834aeff1c985b7414e45613c3684b70","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPMultithreadTestObject.m","hash":"9e433bdbe34ec25d76d9b841dc3a036d1a813fb9","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPNumberTest.h","hash":"63c9eeb5f081ef76013b96c59439256f25982661","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPPerformanceTest.h","hash":"1b49e54039c6f489982d59b0705c46c3637f6509","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPNumberTest.m","hash":"2789416a6d5f38155a018cccde4ffa460c2f40eb","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPInheritanceTestObjects.m","hash":"8a49e44b39b6a2f4752fba1b0573482bcdebd6bf","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPPerformanceTest.m","hash":"f3fcbcf282c71e530ef0e433c68d0d489c4f7066","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPSuperTestObject.h","hash":"f90ceefca5213c7520f026183a60b75d736e6a1f","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPTestObject.h","hash":"7555c72e05276d30e4b72e040ee62fa714e887fd","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JSPatchTests.m","hash":"ae08f8084f3d37f68ff4382dab197e56d9ffc1ea","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPTestObject.m","hash":"5c2f1e7cc8e204afc97e7b71976007784fd20148","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/JPSuperTestObject.m","hash":"069234f26df8c1b87284753820f154455059cfa3","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/newProtocolTest.h","hash":"af7cedd7a5f6ad76b76772855ea06b733a9b8422","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchTests/newProtocolTest.m","hash":"54a393c15015a14d53534e42c43196c16a15e5a7","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGBitmapContext.h","hash":"333f424c694d4817915d50e95f5da34f9d90b19a","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGColor.h","hash":"50d1bd17faa6eab7afc4e607a714da1f7c4c9eda","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGColor.m","hash":"858da9a681d892edf3620eb05182cc6007735ccf","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGContext.h","hash":"4e7b711c863f261cb615558a4a7fd6d64cdffe6b","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGGeometry.m","hash":"a9d4d2a95a79d1783d93149ba25f989fa6cf88dd","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGContext.m","hash":"a9d81ce9ca783e1323564e8bf5b57708071d048d","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGImage.h","hash":"ffbc5e85904a88327e20f4fdd7d09058613741a6","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGPath.h","hash":"960947a2b08203d3d051f867166da58eda9be8a2","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGImage.m","hash":"dfb7751cb35a5c265c1b717a6bc455f6f148d5db","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGPath.m","hash":"a628f53881f3a864ab2b9b0615b66fd122c00bfd","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGGeometry.h","hash":"080649e85daf661b1a4133ff825be473374112b9","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGTransform.m","hash":"1039be20452c205eb27eba6d23aeff08917485b4","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGTransform.h","hash":"8a0ca37a1b689c9edf36a06e0ae2543652263e8f","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCoreGraphics.m","hash":"7b0a8d1115b69c8329e77b547a7aeeab19a99da4","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCGBitmapContext.m","hash":"f4b16e4b76b6d7d3074134639079b85c64619818","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/CoreGraphics/JPCoreGraphics.h","hash":"45e8f0ab255025d671c92cd03d7b611cea87b964","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/UIKit/JPUIImage.h","hash":"eacaf7342b4c6c8a41b91cd99c6fa6c1032e1253","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/UIKit/JPUIGeometry.m","hash":"837df10b731a9c156e44e4bcfc18e9f7321eb2cd","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/UIKit/JPUIGraphics.m","hash":"1816a21e320875fa66ff3932c5fa7d8faeb8c82c","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/UIKit/JPUIKit.h","hash":"6ec620bea1fa0010b2fa7b1ecbdb2f962ee82d23","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/UIKit/JPUIImage.m","hash":"ca0a9a7704d83c29366186bc7ffbae96f1203286","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/UIKit/JPUIGraphics.h","hash":"53a80fd361ddf02c2bd59c277b77e98170a512a1","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/UIKit/JPUIGeometry.h","hash":"27cc0ef131e7f4ab2f57630454dacd8e321a846c","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPCFunctionBinder/UIKit/JPUIKit.m","hash":"654b31e828d5b00998905ab68fc5fbe5496d8f4f","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/libffi/ffi_i386.h","hash":"ac060b7cd7b5a5750b8cf67f5b154c3d11e97f9d","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/libffi/ffi_arm.h","hash":"8ae86db0662ddf9670e63a4e95d848b4bbe9bb0c","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/libffi/ffi.h","hash":"90a16ec5a8408012f1ecedebae3bcf7c8f5361ce","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/libffi/ffi_arm64.h","hash":"51cfd4d5c675a1486377aa5279b1c1798153fada","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/libffi/ffitarget.h","hash":"eae2265b384c36ad0c827ec23203ab73750c166a","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/libffi/ffi_x86_64.h","hash":"254954593f91d1a423b839f6b6587ac588f6f6b4","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/libffi/ffitarget_arm64.h","hash":"fff5e22a28ea6769897edb739244fa482be9c1cf","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/libffi/ffitarget_x86_64.h","hash":"f8fb53d79268244747a30b7003566959292cc535","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/libffi/ffitarget_i386.h","hash":"32ea29ca134091e983a0029beec9341e5763cc04","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/libffi/ffitarget_arm.h","hash":"aab64e83fc89c05deb9e8689ce143556ba11eb8d","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/JPPlaygroundModule/JPKeyCommands.h","hash":"71c13c1b3693200c1c0f7235e79a638059bad366","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/JPPlaygroundModule/JPKeyCommands.m","hash":"615471974bb75ffece1c9873ba951a4d5ceea98d","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/JPPlaygroundModule/SGDirWatchdog.m","hash":"a0687f1308f7c3e2ae7a7e019637f69dea225021","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/JPPlaygroundModule/SGDirWatchdog.h","hash":"b915160a2af82728767eb415bc89a9b74fa54a7a","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevMenu.h","hash":"b29265f5d97ce3ce3305a8ff1ad4e43e54702b08","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevErrorView.m","hash":"f39893f8030048b395049322bf91e12ecc7f932b","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevErrorView.h","hash":"b1b30141e2cf65ea57907527a97786b9c1f39422","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevTipView.h","hash":"c75330ebd7693c25b70baab13932ba571177624c","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevTipView.m","hash":"687f6a8478f1d1791bb51b811588cad37c5b8765","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevMenu.m","hash":"74c770fa43c7835d928fbb4f30b9b4ef8cd5069c","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Loader/libs/minizip/ioapi.c","hash":"28482373ac6873edefcc1be5cca22e62a2e3887c","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Loader/libs/minizip/crypt.h","hash":"82b2530bfe925b58eebd0a02cd9f2c5bd21dba50","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Loader/libs/minizip/ioapi.h","hash":"d3c5d79817c6585529f89035945f2234f6a6acb6","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Loader/libs/minizip/mztools.h","hash":"85458c02a1b2b7da6068bf8e98c4f0f66f4834d9","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Loader/libs/minizip/unzip.h","hash":"cbdaca78532d8925a5b2753849e5a097d62a7587","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Loader/libs/minizip/zip.h","hash":"8cef828db4766401b91bec9b47ca56a3118705fc","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Loader/libs/minizip/mztools.c","hash":"fe6372ccfb1245034aa1ceed4e16bf488cf96f7c","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo/AppDelegate.h","hash":"833bf7d272f666bbc667c23b8176400b295bf93a","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo/AppDelegate.m","hash":"6e94a9bdbd02f4e09683b8c232403c9e4391dd8e","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo/JPViewController.h","hash":"ae4a6d1e66a185e83145de30564b3b8417b60f32","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo/JPViewController.m","hash":"d5140dcda90f46b9966f958221e36fbfa0a7decf","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/Info.plist","hash":"82b6f7944fd7f44e261bd0d8cfca7e29af5d9d62","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPCFunctionTest.h","hash":"9bbee9b778c8f95993541d91d241d7a245c77e7f","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPInheritanceTestObjects.h","hash":"80946838772af428817c59afc389509679dcc9dd","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPCFunctionTest.m","hash":"569801960a3a4ba27a70338e7d49d0fa76dc9218","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPJSClassTest.h","hash":"52fe8b2df7c397be6da790eca3f2e8c56740d6bd","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPInheritanceTestObjects.m","hash":"8a49e44b39b6a2f4752fba1b0573482bcdebd6bf","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPMultithreadTestObject.m","hash":"9e433bdbe34ec25d76d9b841dc3a036d1a813fb9","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPJSClassTest.m","hash":"50919993704db7c654b891579116426739e61d3d","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPMultithreadTestObject.h","hash":"4137b4d71834aeff1c985b7414e45613c3684b70","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPPerformanceTest.h","hash":"1b49e54039c6f489982d59b0705c46c3637f6509","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPSuperTestObject.h","hash":"f90ceefca5213c7520f026183a60b75d736e6a1f","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPNumberTest.m","hash":"2789416a6d5f38155a018cccde4ffa460c2f40eb","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPNumberTest.h","hash":"63c9eeb5f081ef76013b96c59439256f25982661","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPSuperTestObject.m","hash":"069234f26df8c1b87284753820f154455059cfa3","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPPerformanceTest.m","hash":"f3fcbcf282c71e530ef0e433c68d0d489c4f7066","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPTestObject.h","hash":"7555c72e05276d30e4b72e040ee62fa714e887fd","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JPTestObject.m","hash":"5c2f1e7cc8e204afc97e7b71976007784fd20148","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/newProtocolTest.m","hash":"54a393c15015a14d53534e42c43196c16a15e5a7","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/JSPatchTests.m","hash":"ae08f8084f3d37f68ff4382dab197e56d9ffc1ea","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchTests/newProtocolTest.h","hash":"af7cedd7a5f6ad76b76772855ea06b733a9b8422","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGBitmapContext.h","hash":"333f424c694d4817915d50e95f5da34f9d90b19a","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGContext.h","hash":"4e7b711c863f261cb615558a4a7fd6d64cdffe6b","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGColor.m","hash":"858da9a681d892edf3620eb05182cc6007735ccf","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGBitmapContext.m","hash":"f4b16e4b76b6d7d3074134639079b85c64619818","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGColor.h","hash":"50d1bd17faa6eab7afc4e607a714da1f7c4c9eda","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGContext.m","hash":"a9d81ce9ca783e1323564e8bf5b57708071d048d","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGGeometry.h","hash":"080649e85daf661b1a4133ff825be473374112b9","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGImage.h","hash":"ffbc5e85904a88327e20f4fdd7d09058613741a6","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGGeometry.m","hash":"a9d4d2a95a79d1783d93149ba25f989fa6cf88dd","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGImage.m","hash":"dfb7751cb35a5c265c1b717a6bc455f6f148d5db","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGTransform.m","hash":"1039be20452c205eb27eba6d23aeff08917485b4","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGPath.h","hash":"960947a2b08203d3d051f867166da58eda9be8a2","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGPath.m","hash":"a628f53881f3a864ab2b9b0615b66fd122c00bfd","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCGTransform.h","hash":"8a0ca37a1b689c9edf36a06e0ae2543652263e8f","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCoreGraphics.m","hash":"7b0a8d1115b69c8329e77b547a7aeeab19a99da4","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/CoreGraphics/JPCoreGraphics.h","hash":"45e8f0ab255025d671c92cd03d7b611cea87b964","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/UIKit/JPUIGeometry.h","hash":"27cc0ef131e7f4ab2f57630454dacd8e321a846c","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/UIKit/JPUIGeometry.m","hash":"837df10b731a9c156e44e4bcfc18e9f7321eb2cd","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/UIKit/JPUIGraphics.m","hash":"1816a21e320875fa66ff3932c5fa7d8faeb8c82c","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/UIKit/JPUIGraphics.h","hash":"53a80fd361ddf02c2bd59c277b77e98170a512a1","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/UIKit/JPUIImage.m","hash":"ca0a9a7704d83c29366186bc7ffbae96f1203286","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/UIKit/JPUIImage.h","hash":"eacaf7342b4c6c8a41b91cd99c6fa6c1032e1253","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/UIKit/JPUIKit.h","hash":"6ec620bea1fa0010b2fa7b1ecbdb2f962ee82d23","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPCFunctionBinder/UIKit/JPUIKit.m","hash":"654b31e828d5b00998905ab68fc5fbe5496d8f4f","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/libffi/ffi.h","hash":"90a16ec5a8408012f1ecedebae3bcf7c8f5361ce","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/libffi/ffi_i386.h","hash":"ac060b7cd7b5a5750b8cf67f5b154c3d11e97f9d","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/libffi/ffi_arm64.h","hash":"51cfd4d5c675a1486377aa5279b1c1798153fada","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/libffi/ffi_arm.h","hash":"8ae86db0662ddf9670e63a4e95d848b4bbe9bb0c","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/libffi/ffitarget.h","hash":"eae2265b384c36ad0c827ec23203ab73750c166a","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/libffi/ffi_x86_64.h","hash":"254954593f91d1a423b839f6b6587ac588f6f6b4","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/libffi/ffitarget_i386.h","hash":"32ea29ca134091e983a0029beec9341e5763cc04","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/libffi/ffitarget_arm64.h","hash":"fff5e22a28ea6769897edb739244fa482be9c1cf","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/libffi/ffitarget_arm.h","hash":"aab64e83fc89c05deb9e8689ce143556ba11eb8d","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/libffi/ffitarget_x86_64.h","hash":"f8fb53d79268244747a30b7003566959292cc535","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/JPPlaygroundModule/JPKeyCommands.m","hash":"615471974bb75ffece1c9873ba951a4d5ceea98d","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/JPPlaygroundModule/JPKeyCommands.h","hash":"71c13c1b3693200c1c0f7235e79a638059bad366","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/JPPlaygroundModule/SGDirWatchdog.m","hash":"a0687f1308f7c3e2ae7a7e019637f69dea225021","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevErrorView.h","hash":"b1b30141e2cf65ea57907527a97786b9c1f39422","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevErrorView.m","hash":"f39893f8030048b395049322bf91e12ecc7f932b","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/JPPlaygroundModule/SGDirWatchdog.h","hash":"b915160a2af82728767eb415bc89a9b74fa54a7a","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevMenu.h","hash":"b29265f5d97ce3ce3305a8ff1ad4e43e54702b08","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevTipView.h","hash":"c75330ebd7693c25b70baab13932ba571177624c","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevMenu.m","hash":"74c770fa43c7835d928fbb4f30b9b4ef8cd5069c","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPPlaygroundTool/JPPlaygroundView/JPDevTipView.m","hash":"687f6a8478f1d1791bb51b811588cad37c5b8765","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Loader/libs/minizip/ioapi.h","hash":"d3c5d79817c6585529f89035945f2234f6a6acb6","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Loader/libs/minizip/ioapi.c","hash":"28482373ac6873edefcc1be5cca22e62a2e3887c","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Loader/libs/minizip/crypt.h","hash":"82b2530bfe925b58eebd0a02cd9f2c5bd21dba50","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Loader/libs/minizip/mztools.c","hash":"fe6372ccfb1245034aa1ceed4e16bf488cf96f7c","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Loader/libs/minizip/mztools.h","hash":"85458c02a1b2b7da6068bf8e98c4f0f66f4834d9","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Loader/libs/minizip/unzip.h","hash":"cbdaca78532d8925a5b2753849e5a097d62a7587","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Loader/libs/minizip/zip.h","hash":"8cef828db4766401b91bec9b47ca56a3118705fc","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist","hash":"df5fe739b8b3ab69cf1a32a8881c48a1662e0340","modified":1592981228904},{"_id":"public/hotFix热修复/demo_hotfix/demo_hotfix.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist","hash":"df5fe739b8b3ab69cf1a32a8881c48a1662e0340","modified":1592981228904},{"_id":"public/hotFix热修复/invocation/invocation.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist","hash":"df5fe739b8b3ab69cf1a32a8881c48a1662e0340","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo.xcodeproj/project.pbxproj","hash":"b11a583fc801645dbf01c3aeb26dfc9ef8d5b412","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo.xcodeproj/project.pbxproj","hash":"47c84355acb57673ca0f1a43578bda06809a6094","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo.xcodeproj/project.pbxproj","hash":"68ff10a3a1872faf7090a897b78b13b7f075b1a1","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo.xcodeproj/project.xcworkspace/contents.xcworkspacedata","hash":"84243848f54b0c5983e1ed26defb41d262ce1354","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo/Supporting Files/Info.plist","hash":"a4ccfd7ebf50f61a87d2666a6b196c96181f0fd9","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo/Supporting Files/main.m","hash":"1d0be2e591c6c52da9751f0ea06a3e9fafb57f00","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/Supporting Files/Info.plist","hash":"a4ccfd7ebf50f61a87d2666a6b196c96181f0fd9","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/Supporting Files/main.m","hash":"1d0be2e591c6c52da9751f0ea06a3e9fafb57f00","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo.xcodeproj/project.xcworkspace/contents.xcworkspacedata","hash":"84243848f54b0c5983e1ed26defb41d262ce1354","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JS/demo_JS.xcodeproj/xcuserdata/liu.xcuserdatad/xcschemes/xcschememanagement.plist","hash":"f0db08dcd4eb92ab00a738556a8fedfd83cff825","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JS/demo_JS.xcodeproj/project.xcworkspace/xcuserdata/liu.xcuserdatad/UserInterfaceState.xcuserstate","hash":"68b11a70107c8f72ae131181bac4b7fe01d1a8f1","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JS/demo_JS.xcodeproj/xcuserdata/liu.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist","hash":"bf9877cb8aa9784eb83a6eb58d60a5723a72f40e","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo/Supporting Files/Info.plist","hash":"8318b4a15151fd8d463e38c993c635720a451cba","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo/Supporting Files/main.m","hash":"1d0be2e591c6c52da9751f0ea06a3e9fafb57f00","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo.xcodeproj/project.xcworkspace/contents.xcworkspacedata","hash":"84243848f54b0c5983e1ed26defb41d262ce1354","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC.xcodeproj/xcuserdata/liu.xcuserdatad/xcschemes/xcschememanagement.plist","hash":"31ac5af2eee0df9f31c44648338fcd5f06e37a7d","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC.xcodeproj/xcuserdata/liu.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist","hash":"07bd8a8acde0d19d770fad2a18834a084cb33965","modified":1592981228904},{"_id":"public/hotFix热修复/demo_hotfix/demo_hotfix.xcodeproj/xcuserdata/liu.xcuserdatad/xcschemes/xcschememanagement.plist","hash":"b14c9b18b570d967feb7744d2f6fb29b085438cd","modified":1592981228904},{"_id":"public/hotFix热修复/invocation/invocation.xcodeproj/xcuserdata/liu.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist","hash":"0bb97e7b8a17d7b1854146fab054d808164cffca","modified":1592981228904},{"_id":"public/hotFix热修复/invocation/invocation.xcodeproj/project.xcworkspace/xcuserdata/liu.xcuserdatad/UserInterfaceState.xcuserstate","hash":"07ae7a2321d929bd615e560dd3ef689c4a0a22f1","modified":1592981228904},{"_id":"public/hotFix热修复/invocation/invocation.xcodeproj/xcuserdata/liu.xcuserdatad/xcschemes/xcschememanagement.plist","hash":"4cd26e726e6c8d4988c4245ff3dd46d99e6680da","modified":1592981228904},{"_id":"public/hotFix热修复/demo_hotfix/demo_hotfix.xcodeproj/project.xcworkspace/xcuserdata/liu.xcuserdatad/UserInterfaceState.xcuserstate","hash":"408178a870946732f4d526c39b06de1cb401e8ca","modified":1592981228904},{"_id":"public/hotFix热修复/demo_OC/demo_OC.xcodeproj/project.xcworkspace/xcuserdata/liu.xcuserdatad/UserInterfaceState.xcuserstate","hash":"ff4ffd082496c5836905c9c6d267dd30a8695110","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist","hash":"df5fe739b8b3ab69cf1a32a8881c48a1662e0340","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo.xcodeproj/xcshareddata/xcschemes/JSPatchDemo.xcscheme","hash":"4819f62a84833d4042a3eab48a3b265361d70ba3","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist","hash":"df5fe739b8b3ab69cf1a32a8881c48a1662e0340","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo.xcodeproj/xcshareddata/xcschemes/JSPatchDemo.xcscheme","hash":"5b63f5f99c89fdd62e196080515efaf80683c61c","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo.xcodeproj/xcshareddata/xcschemes/JSPatchDemo.xcscheme","hash":"4819f62a84833d4042a3eab48a3b265361d70ba3","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo.xcodeproj/xcuserdata/liu.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist","hash":"a6b204b7d0c9f8dfd182e98e5842e07d58056a36","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo.xcodeproj/project.xcworkspace/xcuserdata/liushuai.xcuserdatad/UserInterfaceState.xcuserstate","hash":"38a8c2cbd3e92c9bd6001c602c2873d8019ec74f","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo.xcodeproj/xcuserdata/liu.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist","hash":"0bb97e7b8a17d7b1854146fab054d808164cffca","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Demo/iOSDemo/JSPatchDemo.xcodeproj/project.xcworkspace/xcuserdata/liu.xcuserdatad/UserInterfaceState.xcuserstate","hash":"339193d04ac843a33d51167f4f228124acdb7cd7","modified":1592981228904},{"_id":"public/images/hotfix-003.png","hash":"c67afaafaefa01d6d8c79cd05619069150e3c3cb","modified":1592981228904},{"_id":"public/images/hotfix-010.png","hash":"10fbc1f047a82c7af33b670bbf6510b26fd64d55","modified":1592981228904},{"_id":"public/images/hotfix-002.png","hash":"27ae05f49628e2b39ae7e1912743d717e770fc59","modified":1592981228904},{"_id":"public/images/hotfix-005.png","hash":"58a31a3583b7047f13d116ee3310f44842b16a73","modified":1592981228904},{"_id":"public/images/hotfix-004.png","hash":"203a57e6c2f92acb3a7a76bb6c3af5656d1cbf0a","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/JSPatch/JPEngine.m","hash":"e23967178131773a042c733272c1358bdfc147cf","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/JSPatch/JPEngine.m","hash":"74af0ccde9bcb640b275232c2035af87984bee47","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/JSPatch/JPEngine.m","hash":"36f04e65df9168330ca9f407d51f91870e88a180","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Loader/libs/minizip/unzip.c","hash":"5a2e492a0c1ab7e987bd7fb89fdf4d7944d1e4a9","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Loader/libs/minizip/zip.c","hash":"6d7a30544552aac1347f5350f5feff085bc8fcd4","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/require.tiff","hash":"47c778f8dce2b38aa0f587efc882ef8f9c1fd44f","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/self.tiff","hash":"361eb9c7741b6b7a524208e4caa1e5a3d0dcda06","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Loader/libs/minizip/unzip.c","hash":"5a2e492a0c1ab7e987bd7fb89fdf4d7944d1e4a9","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Loader/libs/minizip/zip.c","hash":"6d7a30544552aac1347f5350f5feff085bc8fcd4","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Loader/libs/minizip/unzip.c","hash":"5a2e492a0c1ab7e987bd7fb89fdf4d7944d1e4a9","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Loader/libs/minizip/zip.c","hash":"6d7a30544552aac1347f5350f5feff085bc8fcd4","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Demo/iOSDemo/JSPatchDemo.xcodeproj/project.xcworkspace/xcuserdata/liu.xcuserdatad/UserInterfaceState.xcuserstate","hash":"3cb384ca48c7f37ccb2641a7279daef928bfa3e7","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo.xcodeproj/project.xcworkspace/xcuserdata/liu.xcuserdatad/UserInterfaceState.xcuserstate","hash":"a252042fb3d07960c71515f9b074cbd3d7417cce","modified":1592981228904},{"_id":"public/images/hotfix-007.png","hash":"8a31533bb78159b86d788541071be9e432008acb","modified":1592981228904},{"_id":"public/images/hotfix-008.png","hash":"ac4ba51c08f2649382fa343a816ddaa26d7acf9b","modified":1592981228904},{"_id":"public/images/hotfix-006.png","hash":"c9e4aea3e97730d633d3593f8973e9a0d9c5ec5c","modified":1592981228904},{"_id":"public/images/hotfix_5.png","hash":"d04137d635699931244c4b86dd92552219438ed1","modified":1592981228904},{"_id":"public/images/runloop.png","hash":"cd54f54f0140df931d0dfcc93290277202935266","modified":1592981228904},{"_id":"public/images/hotfix-009.png","hash":"2b65abd3c8a07434930357e8b8e305da3654bf46","modified":1592981228904},{"_id":"public/images/hotfix-001.png","hash":"6319ce22dbbe2b68911f29ebcc1fa95629948ae1","modified":1592981228904},{"_id":"public/images/hotfix_4.png","hash":"80a0f444ec02e84a3d74955fc18693ae2758b8e5","modified":1592981228904},{"_id":"public/images/hotfix_3.png","hash":"8a2a3307bba6ff2f8b64ec7ac5949fa1658ffcbd","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/originMethod.tiff","hash":"5d1c23cb228de2cabcb2bf28e9b04e07d2e013df","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo.xcodeproj/xcuserdata/liu.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist","hash":"43e26d6bed50f4c338c3ff1af7f77dedc7e29c97","modified":1592981228904},{"_id":"public/images/hotfix_2.png","hash":"d04a442860cae4cf79716b23c3e18f96a0abd3a0","modified":1592981228904},{"_id":"public/images/hotfix_1.png","hash":"a5ba1f70cb4105670d5506d248451e309e57f31d","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Demo/iOSDemo/JSPatchDemo/global.self.tiff","hash":"132f4148d52dedd96d4a57b4fb9750508ceab72b","modified":1592981228904},{"_id":"public/hotFix热修复/热修复概述.key","hash":"bdc42704dc116d73afe2146e4cf7ad0fe2721e27","modified":1592981228904},{"_id":"public/hotFix热修复/demo_JSPatch_original/Extensions/JPLibffi/libffi/libffi.a","hash":"a25ce5889d55b3a161065d57eb47211533f0aae0","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-analyze/Extensions/JPLibffi/libffi/libffi.a","hash":"a25ce5889d55b3a161065d57eb47211533f0aae0","modified":1592981228904},{"_id":"public/hotFix热修复/JSPatch-Demo/Extensions/JPLibffi/libffi/libffi.a","hash":"a25ce5889d55b3a161065d57eb47211533f0aae0","modified":1592981228904},{"_id":"source/_posts/Jenkins.md","hash":"8ca9c765cc27b3dc5621baf7a6ee2021211d0083","modified":1593337689432},{"_id":"source/_posts/cocoa-image-resource.md","hash":"9e841c38163f126139d5901b8ec0bfffbddb5b9e","modified":1593248036220},{"_id":"source/_posts/app开发模式.md","hash":"0eac3bf7f5be175d0e1e18e32da54317c83d985a","modified":1593340062641},{"_id":"source/_posts/code-mode.md","hash":"2092ed7f6a9a771c911ed78199af1b36b9a52b92","modified":1592984453531},{"_id":"source/_posts/cocoaposd-pod.md","hash":"c6296130d25d2567a9802b73bec7c2ca5d0b6be8","modified":1593247439077},{"_id":"source/_posts/downloader.md","hash":"52291f0fa5971aaeadc47fdb0ba601d5b9e34fab","modified":1593340109523},{"_id":"source/_posts/framework.md","hash":"0cc66e636013201af4f41adf92876f4212f4c794","modified":1593244253611},{"_id":"source/_posts/frp.md","hash":"b71025915a6cc8b57fd318eb0d6e6335372d47e8","modified":1593248235566},{"_id":"source/_posts/ios.md","hash":"47b2cc710afa8a65950f0140accafa88184eca5a","modified":1593249146578},{"_id":"source/_posts/page-auto.md","hash":"5b2402c667141ce2ab0bb1f70398a56adfe680b9","modified":1592987994029},{"_id":"source/_posts/module.md","hash":"f116398f75c8cfb0595d4cddf59c68b91bfd88d8","modified":1593244131745},{"_id":"source/_posts/package.md","hash":"4065d1fec9f45f3cd94fafcf0d97626e9fbd491a","modified":1593337719740},{"_id":"source/_posts/track.md","hash":"76c4083f12f849d3b9fafe7f3efcd164cc458b6e","modified":1593316630065},{"_id":"source/_posts/马甲包.md","hash":"026366b306af0217ea79cd10ee49a84f2be878fe","modified":1593249034386},{"_id":"source/_posts/sonar.md","hash":"57f741e742889c7f9d23a513c6661d6d75927687","modified":1593256901813},{"_id":"source/images/aop-1.png","hash":"f98830302bc6d997ba1d5ded0a4f2e00e3f74ddb","modified":1567054971121},{"_id":"source/images/cocoapods_3.png","hash":"d9104a8ebbf2bb1d8b0a479ea66108c257df0b0a","modified":1567055845562},{"_id":"source/images/frp-01.png","hash":"1f069491ff77dd378c541829499a0a225ef326f3","modified":1567055850449},{"_id":"source/images/frp-001.png","hash":"23fe840dad9a9e458fd9e8ff8b1350a275c58ea6","modified":1592982965688},{"_id":"source/images/frp-003.png","hash":"a56b7ce2664a3200ab873e3f773b8083d15f3c30","modified":1592982965821},{"_id":"source/images/frp-004.png","hash":"45aa97cd5f9dee96d8cda3c258a0f045a096c291","modified":1592982965869},{"_id":"source/images/frp-011.png","hash":"3b2cc4b05aa1348eeee486ece812551f189ce853","modified":1592982966382},{"_id":"source/images/frp-012.png","hash":"b9cfa45f75397444c4dfae44226bbfc0dc701e8c","modified":1592982966434},{"_id":"source/images/frp-016.png","hash":"c308624f727e25e0f8a8406e4609c785e74ad5be","modified":1592982966739},{"_id":"source/images/frp-015.png","hash":"4888fa8be25e92958a657c63665f869edcd80c1b","modified":1592982966678},{"_id":"source/images/frp-018.png","hash":"a16b41f9129c69cbdf2f7916f0a92c29a03fdaf2","modified":1592982966928},{"_id":"source/images/frp-009.png","hash":"b44ac19befcd4fac48fbe4cc7fc5279feb65a219","modified":1592982966253},{"_id":"source/images/frp-007.png","hash":"1cac487f8108f5dbe6dff65bb61bfbe3ca7775a2","modified":1592982966099},{"_id":"source/images/frp-006.png","hash":"3cb0489ef8637cf06ce2d3afb7d87972be85623a","modified":1592982966033},{"_id":"source/images/frp-013.png","hash":"7c2446fc8472041f10781a5c697f3b59515d31bf","modified":1592982966514},{"_id":"source/images/iOS-1.png","hash":"ef4be5c66eebd161a94ff7198353b4a70723f06d","modified":1567054983418},{"_id":"source/images/cocoapods_1.png","hash":"595b7bb78d600e7c11467588252baa1218411e42","modified":1593245837756},{"_id":"source/images/cocoapods_2.png","hash":"9510355571c2b620dac816eb5aaa985cb795e10c","modified":1567055845570},{"_id":"source/images/frp-002.png","hash":"ac5f61bf97a2d994edde8309bfd82be71cfcd295","modified":1592982965778},{"_id":"source/images/frp-008.png","hash":"7524295cfa839aaa07f209947b851fdcc5f51439","modified":1592982966181},{"_id":"source/images/frp-010.png","hash":"a78245e5eafab5b8f3635eaf26c10e41128878da","modified":1592982966326},{"_id":"source/images/frp-005.png","hash":"414fbf8ad03c4cd2a180ace275f824f2f377cc86","modified":1592982965957},{"_id":"source/images/jenkins-1.png","hash":"52d29a70d369612ff2ba7b190a8c4dbb1d905925","modified":1593257475660},{"_id":"source/images/jenkins-2.png","hash":"a203b2149a9d5e6f2e768390fea59ddf4faa23bb","modified":1593257796299},{"_id":"source/images/frp-014.png","hash":"c11a8ca7a317e5d76ebae280baa7e9a9b4fbf44e","modified":1592982966615},{"_id":"source/images/frp-017.png","hash":"7e53a44ae23780a5485e392659fa8cefddb5b9d7","modified":1592982966860},{"_id":"public/2020/01/11/track/index.html","hash":"46ebf21d9a55e3f264451f26baeecc93a268e433","modified":1593336656177},{"_id":"public/2019/02/20/cocoa-image-resource/index.html","hash":"2e00d945fe0c7a1e0fc6e5fc0ac15aff6bb512e4","modified":1593336656177},{"_id":"public/2019/02/19/cocoaposd-pod/index.html","hash":"d39551269106b0d98513fd6a4968769f1d182bb5","modified":1593340118690},{"_id":"public/2018/12/01/package/index.html","hash":"73d56c1520cde0d22bc197590ba22ab19037def3","modified":1593336656177},{"_id":"public/2018/10/20/Jenkins/index.html","hash":"58db9fbe2f669a37de912b731a6d74cc7af3b264","modified":1593336656177},{"_id":"public/2018/07/22/code-mode/index.html","hash":"457bac58c2b90d821a5317f467755abb13fdf4ae","modified":1593336656177},{"_id":"public/2018/07/13/frp/index.html","hash":"28be5c4e2699053b0ada7daadb1c9886e6bd81cd","modified":1593336656177},{"_id":"public/2017/03/04/page-auto/index.html","hash":"6d64cdc76331c204249f6b2aa56741edc9097e96","modified":1593340118690},{"_id":"public/2017/01/15/framework/index.html","hash":"22150c13d8eb5c4b5ab7ea247ea9b6e04df90645","modified":1593336656177},{"_id":"public/2018/01/14/马甲包/index.html","hash":"9aea6f11bce994037c37f741caa19ce5bba1e307","modified":1593336656177},{"_id":"public/2017/01/14/module/index.html","hash":"4150c673f264979a31094f5cdd7fcb8ddf87279b","modified":1593336656177},{"_id":"public/2017/01/14/sonar/index.html","hash":"37e16c4760e768c1a5456c6ca8ccfc303e5a8c99","modified":1593340118690},{"_id":"public/2016/08/20/downloader/index.html","hash":"4c8701083637fdd474bfd4d5c245c0aec867ff7c","modified":1593336656177},{"_id":"public/2016/01/14/app开发模式/index.html","hash":"f561d9df0b21abb5b26420fe4cb2490274252752","modified":1593336656177},{"_id":"public/2016/01/14/ios/index.html","hash":"1342cf4f8a3f5f9447254efe4b4ce252ac085d3f","modified":1593340118690},{"_id":"public/tags/组件化/index.html","hash":"6368fa333122fc12b0f2ac07b6d6e377eb1b01b9","modified":1593336656177},{"_id":"public/tags/资源文件/index.html","hash":"7a5cf19a31f6fbb099edf0a12d9e2f9277012b48","modified":1593336656177},{"_id":"public/tags/app/index.html","hash":"721d34bcef133de70c8ef549969cc2725ed69241","modified":1593340118690},{"_id":"public/tags/开发模式/index.html","hash":"7d23bf646a1c19e5e11f20c465616f11c4c47224","modified":1593340118690},{"_id":"public/tags/Jenkins/index.html","hash":"5bcf7dcba335a0b86d2c04ba77c4583495a476bb","modified":1593340118690},{"_id":"public/tags/编程方式/index.html","hash":"376a51079bb9a9a0eb9ea2f9b46f3eeca1e7cacf","modified":1593336656177},{"_id":"public/tags/私有化仓库/index.html","hash":"b6c46241ade9fa451025d7480b8afa1c5eeda09e","modified":1593336656177},{"_id":"public/tags/cocoapods/index.html","hash":"7f6830658756403a0e516b20af8faf2b94cc7574","modified":1593336656177},{"_id":"public/tags/程序软件下载器/index.html","hash":"68c67ad1744ae6a1b54f09aa280a7d27e5d6fa13","modified":1593340118690},{"_id":"public/tags/工程组织结构/index.html","hash":"379cc1886ec4aa3e54f75852d045038a0f12ff6b","modified":1593336656177},{"_id":"public/tags/static-library/index.html","hash":"388a0c46355bb74db93fc5a520862c8a775c1015","modified":1593336656177},{"_id":"public/tags/framework/index.html","hash":"d1340d427b0cdffe3101f1e13938be477164ecc3","modified":1593336656177},{"_id":"public/tags/函数响应式编程/index.html","hash":"f5b57433d9f6f0607ff550fcec82101091d7ded0","modified":1593336656177},{"_id":"public/tags/页面布局自动化/index.html","hash":"f7af1156d4c37c8e0eb49000635b14ebf2e37141","modified":1593336656177},{"_id":"public/tags/页面跳转自动化/index.html","hash":"7b82dd2e97ccb35aac6465d38c0b54e364322393","modified":1593336656177},{"_id":"public/tags/FRP/index.html","hash":"e314333d7b68c06c211ae89ab4f304aa84c52966","modified":1593336656177},{"_id":"public/tags/去耦合/index.html","hash":"ec45bbf11e20ddabd155d93d9d9da320bd62c87d","modified":1593336656177},{"_id":"public/tags/无痕埋点/index.html","hash":"921445e1f88978a83f2117391f089b463ef48b2b","modified":1593336656177},{"_id":"public/tags/自动化打包部署/index.html","hash":"3fe013dd697e2e68cefb517ecd774d9f6cc7eb30","modified":1593340118690},{"_id":"public/tags/模块化/index.html","hash":"4bb2ef58fb3c69f1ed7dbdfb23f3137a85bb0aaf","modified":1593336656177},{"_id":"public/tags/马甲包/index.html","hash":"00d9da673ae542f8be603e20b56e1f47562b5b5f","modified":1593336656177},{"_id":"public/tags/静态代码扫描/index.html","hash":"c6ff9772603eeb4d2f81b5013c8fc4d25650473c","modified":1593336656177},{"_id":"public/categories/组件化/index.html","hash":"b90c8a9b397dce724068478030ca0d04a2e15534","modified":1593336656177},{"_id":"public/categories/app/index.html","hash":"52890e8076fcabcdc83ee81f99b92e1d480990bf","modified":1593340118690},{"_id":"public/categories/编程方式/index.html","hash":"003fce5598d346581e8522cf88bde669ff3c440c","modified":1593336656177},{"_id":"public/categories/Jenkins/index.html","hash":"0a6534f20531ba8f9931cc5e511a5c5825814963","modified":1593340118690},{"_id":"public/categories/私有化仓库/index.html","hash":"eb8b484ac7fba8fd593071d675467545cc08c9f0","modified":1593336656177},{"_id":"public/categories/资源文件/index.html","hash":"27b27fab078537e424690ba1b7d20b1f8645586b","modified":1593336656177},{"_id":"public/categories/程序软件下载器/index.html","hash":"238e2f28fd9224164c2f90e6f0c9fc3f0a5c959d","modified":1593340118690},{"_id":"public/categories/开发模式/index.html","hash":"3bf0bd714995d95b51242baf2e0b90b09a4da61b","modified":1593340118690},{"_id":"public/categories/函数响应式编程/index.html","hash":"e407399bb076c6e605d20833202ced1ea0463746","modified":1593336656177},{"_id":"public/categories/页面布局自动化/index.html","hash":"99deedac1b93e45d8c9dd931303bfe4730cafe17","modified":1593336656177},{"_id":"public/categories/framework/index.html","hash":"dcdd51553caaa400a04f2aa1f0f61938302b7127","modified":1593336656177},{"_id":"public/categories/模块化/index.html","hash":"f951bfe22234accd2cfb9515fb90ddf73d885d69","modified":1593336656177},{"_id":"public/categories/自动化打包部署/index.html","hash":"4f293572bc1e02712479ebf34a27b779ded17bce","modified":1593340118690},{"_id":"public/categories/cocoapods/index.html","hash":"901df34de7f5ba929bec95182d1a3943ddf575f8","modified":1593336656177},{"_id":"public/categories/无痕埋点/index.html","hash":"a3205fc05b9091237bb2efb6d4ff55a541dae944","modified":1593336656177},{"_id":"public/categories/静态代码扫描/index.html","hash":"1cfe81a499530a9c94bd1160dd869078ba42c331","modified":1593336656177},{"_id":"public/categories/马甲包/index.html","hash":"4b9aba9e0840875868589757c097b37404665fb0","modified":1593336656177},{"_id":"public/categories/FRP/index.html","hash":"3d642dcecd60299df2107e8e5ac9fb929c3b1ae6","modified":1593336656177},{"_id":"public/categories/static-library/index.html","hash":"e38bcfc1d68aefee890e630278bc2dd618ac3d6c","modified":1593336656177},{"_id":"public/categories/页面跳转自动化/index.html","hash":"022ac334398b426353e6360a854e46edf6f12118","modified":1593336656177},{"_id":"public/categories/去耦合/index.html","hash":"c3500341b1006ee9f7578421861702716f0d9f14","modified":1593336656177},{"_id":"public/categories/工程组织结构/index.html","hash":"efa95f0474b41ff8d4bc6d186000feea117f23cc","modified":1593336656177},{"_id":"public/archives/page/4/index.html","hash":"0901d6d726c5b624591002a3f4211182a4ae4d8e","modified":1593340118690},{"_id":"public/archives/2017/index.html","hash":"d33f2e69b9168e39695073b0cc7ed8b71aa01d17","modified":1593340118690},{"_id":"public/archives/2017/03/index.html","hash":"baa7c3f47e463098f723e46579f92ccaa877cc99","modified":1593336656177},{"_id":"public/archives/2016/08/index.html","hash":"221c46d6417cf407a647f67abfe488f8a31b0f1c","modified":1593336656177},{"_id":"public/archives/2017/01/index.html","hash":"14fa4abbddee259f6b0c628cc198fda6fdf9e027","modified":1593340118690},{"_id":"public/archives/2018/page/2/index.html","hash":"5157e1f3f7765ed91ee8286ccee8411c12295617","modified":1593336656177},{"_id":"public/archives/2018/10/index.html","hash":"50be82f9a4313aec92676f203f26a7b7f61929e8","modified":1593336656177},{"_id":"public/archives/2018/12/index.html","hash":"6c372106241c9e0388334a8ee47e1c856c9cb0f6","modified":1593336656177},{"_id":"public/archives/2019/02/index.html","hash":"d5c058aaf27d1f139ade32ccef6287957faaabd2","modified":1593336656177},{"_id":"public/page/4/index.html","hash":"50206d76863fb8c190a6e8d243a507c2bda4202d","modified":1593340118690},{"_id":"public/images/aop-1.png","hash":"f98830302bc6d997ba1d5ded0a4f2e00e3f74ddb","modified":1593261001558},{"_id":"public/images/cocoapods_3.png","hash":"d9104a8ebbf2bb1d8b0a479ea66108c257df0b0a","modified":1593261001558},{"_id":"public/images/frp-01.png","hash":"1f069491ff77dd378c541829499a0a225ef326f3","modified":1593261001558},{"_id":"public/images/frp-004.png","hash":"45aa97cd5f9dee96d8cda3c258a0f045a096c291","modified":1593261001558},{"_id":"public/images/frp-001.png","hash":"23fe840dad9a9e458fd9e8ff8b1350a275c58ea6","modified":1593261001558},{"_id":"public/images/frp-016.png","hash":"c308624f727e25e0f8a8406e4609c785e74ad5be","modified":1593261001558},{"_id":"public/images/frp-012.png","hash":"b9cfa45f75397444c4dfae44226bbfc0dc701e8c","modified":1593261001558},{"_id":"public/images/frp-011.png","hash":"3b2cc4b05aa1348eeee486ece812551f189ce853","modified":1593261001558},{"_id":"public/images/frp-015.png","hash":"4888fa8be25e92958a657c63665f869edcd80c1b","modified":1593261001558},{"_id":"public/images/frp-003.png","hash":"a56b7ce2664a3200ab873e3f773b8083d15f3c30","modified":1593261001558},{"_id":"public/images/frp-018.png","hash":"a16b41f9129c69cbdf2f7916f0a92c29a03fdaf2","modified":1593261001558},{"_id":"public/images/iOS-1.png","hash":"ef4be5c66eebd161a94ff7198353b4a70723f06d","modified":1593261001558},{"_id":"public/images/frp-013.png","hash":"7c2446fc8472041f10781a5c697f3b59515d31bf","modified":1593261001558},{"_id":"public/images/frp-006.png","hash":"3cb0489ef8637cf06ce2d3afb7d87972be85623a","modified":1593261001558},{"_id":"public/images/frp-009.png","hash":"b44ac19befcd4fac48fbe4cc7fc5279feb65a219","modified":1593261001558},{"_id":"public/images/frp-007.png","hash":"1cac487f8108f5dbe6dff65bb61bfbe3ca7775a2","modified":1593261001558},{"_id":"public/images/frp-008.png","hash":"7524295cfa839aaa07f209947b851fdcc5f51439","modified":1593261001558},{"_id":"public/images/cocoapods_2.png","hash":"9510355571c2b620dac816eb5aaa985cb795e10c","modified":1593261001558},{"_id":"public/images/cocoapods_1.png","hash":"595b7bb78d600e7c11467588252baa1218411e42","modified":1593261001558},{"_id":"public/images/frp-010.png","hash":"a78245e5eafab5b8f3635eaf26c10e41128878da","modified":1593261001558},{"_id":"public/images/frp-002.png","hash":"ac5f61bf97a2d994edde8309bfd82be71cfcd295","modified":1593261001558},{"_id":"public/images/jenkins-2.png","hash":"a203b2149a9d5e6f2e768390fea59ddf4faa23bb","modified":1593261001558},{"_id":"public/images/frp-005.png","hash":"414fbf8ad03c4cd2a180ace275f824f2f377cc86","modified":1593261001558},{"_id":"public/images/jenkins-1.png","hash":"52d29a70d369612ff2ba7b190a8c4dbb1d905925","modified":1593261001558},{"_id":"public/images/frp-014.png","hash":"c11a8ca7a317e5d76ebae280baa7e9a9b4fbf44e","modified":1593261001558},{"_id":"public/images/frp-017.png","hash":"7e53a44ae23780a5485e392659fa8cefddb5b9d7","modified":1593261001558},{"_id":"source/images/track-1.png","hash":"cb684540769f9d2ffabc61ee483d22587900ef7c","modified":1567054981437},{"_id":"public/images/track-1.png","hash":"cb684540769f9d2ffabc61ee483d22587900ef7c","modified":1593316635683},{"_id":"source/_posts/breakhull.md","hash":"d62f62eba8fac873f05037bcf76ac4010a9d116a","modified":1593335934063},{"_id":"source/_posts/php.md","hash":"516c4c4280d92348aeaf52fc2e3a1b48a658046b","modified":1593328549094},{"_id":"source/_posts/scrollview.md","hash":"8260a8be6bdb2c9844f6fcb44ad107f2d15b6302","modified":1593328388126},{"_id":"source/_posts/strengthening.md","hash":"c9a50b89e97edf2f20f1208c8f88e99520fd1172","modified":1593336238201},{"_id":"source/images/scroll-1.jpg","hash":"c5cf8248c4d090e05e1f1c5a45eae343c5c085fd","modified":1576140636218},{"_id":"source/images/strong-3.png","hash":"61125adec0fecc9bd5478bed4be1f105ba12fabe","modified":1567054978780},{"_id":"source/images/php.png","hash":"ecc912c7f7526d8f3a748fd720c6269ce45ad591","modified":1585796896214},{"_id":"source/images/breakhull-2.png","hash":"e7012915e1d791abb91727dd774856cafb8815af","modified":1593335575494},{"_id":"source/images/breakhull-1.png","hash":"5d841df835e84e351720054fb0df0db88f1b33e0","modified":1593335439947},{"_id":"source/images/strong-1.png","hash":"5121259fcdbe93bbd348edaf7e64676ebac65e26","modified":1567054978784},{"_id":"source/images/strong-2.png","hash":"08de49aaf7031b729af9565c519d6dadb5b65f8d","modified":1567054978778},{"_id":"public/2020/01/03/strengthening/index.html","hash":"3f979f1f952742c0fd6ca2bab7fef49fd241d4ea","modified":1593336656177},{"_id":"public/2020/01/03/breakhull/index.html","hash":"fe0ab6d54eb18cfd0339e8e0969de3ceed7f242a","modified":1593336656177},{"_id":"public/2019/12/03/scrollview/index.html","hash":"9f8d886fd8c0a0018ce7babd58d665d8904554ac","modified":1593340118690},{"_id":"public/2016/01/14/php/index.html","hash":"88763b75c5b63c781c21e615b52a44b3ff2edc3c","modified":1593340118690},{"_id":"public/categories/加固/index.html","hash":"874fc5c27c55de61875e9b0284ef541b60b5226b","modified":1593336656177},{"_id":"public/categories/安全攻防/index.html","hash":"0c53407afcd3c955bb921acd62c7cd5c77d64345","modified":1593336656177},{"_id":"public/categories/破壳/index.html","hash":"66e04b44c7b03fc3f225b474819fe78ff50b5e85","modified":1593336656177},{"_id":"public/categories/UIScrollView嵌套联动效果/index.html","hash":"52fe94b81cd820b343e9a223fc987f9fc958ffd2","modified":1593336656177},{"_id":"public/tags/加固/index.html","hash":"64f11723d991936fa671ff71b893a33a483e0884","modified":1593336656177},{"_id":"public/tags/安全攻防/index.html","hash":"9b4c73cf92cd7abcc29876835565fb2768e235df","modified":1593336656177},{"_id":"public/tags/UIScrollView嵌套联动效果/index.html","hash":"c680f8dc1b63a040269bfce6d297a967a08f5753","modified":1593336656177},{"_id":"public/tags/破壳/index.html","hash":"60c094799256cb36665a7cc17c969d7e4174b2d0","modified":1593336656177},{"_id":"public/archives/page/5/index.html","hash":"18c435cad78c4b724e945b96f29ad793cee7df3d","modified":1593336656177},{"_id":"public/page/5/index.html","hash":"f53ef6a411836469051fdab1385dea19dfff6020","modified":1593336656177},{"_id":"public/images/scroll-1.jpg","hash":"c5cf8248c4d090e05e1f1c5a45eae343c5c085fd","modified":1593336656177},{"_id":"public/images/strong-3.png","hash":"61125adec0fecc9bd5478bed4be1f105ba12fabe","modified":1593336656177},{"_id":"public/images/php.png","hash":"ecc912c7f7526d8f3a748fd720c6269ce45ad591","modified":1593336656177},{"_id":"public/images/breakhull-1.png","hash":"5d841df835e84e351720054fb0df0db88f1b33e0","modified":1593336656177},{"_id":"public/images/breakhull-2.png","hash":"e7012915e1d791abb91727dd774856cafb8815af","modified":1593336656177},{"_id":"public/images/strong-2.png","hash":"08de49aaf7031b729af9565c519d6dadb5b65f8d","modified":1593336656177},{"_id":"public/images/strong-1.png","hash":"5121259fcdbe93bbd348edaf7e64676ebac65e26","modified":1593336656177},{"_id":"public/2019/12/01/package/index.html","hash":"773b58dfcf8f04884b3a48eaffeb3b4916dbdb4e","modified":1593340118690},{"_id":"public/2019/10/20/Jenkins/index.html","hash":"a4ed987ccd84fe24f7d3e014407313504cb5df94","modified":1593340118690},{"_id":"public/2017/08/20/downloader/index.html","hash":"6824c8011e751dac1bcc1db95ce659cf21afb089","modified":1593340118690},{"_id":"public/2017/01/14/app开发模式/index.html","hash":"04cd7275f45e5aa060310a04d7e98cd9af33bac9","modified":1593340118690},{"_id":"public/archives/2017/08/index.html","hash":"ba48734768f5e088ff7d573263c174690f329e26","modified":1593340118690},{"_id":"public/archives/2019/10/index.html","hash":"641718d5e06e0cf35ebee4056f92699782aaec88","modified":1593340118690}],"Category":[{"name":"OC","_id":"ck4xzj9aa000488s60zx0c2jq"},{"name":"开发","_id":"ck4xzj9af000a88s65ubt4530"},{"name":"软件架构","_id":"ck4xzj9aj000g88s6818fc3w1"},{"name":"多线程","_id":"ck4xzj9an000l88s68kbgf45q"},{"name":"runtime","_id":"ck4xzj9ar000s88s6gkanfall"},{"name":"架构","_id":"ck4xzj9ay001a88s641tg4tx7"},{"name":"图片下载","_id":"ck4xzj9b2001l88s64oup5bzh"},{"name":"日历","_id":"ck4xzj9b3001q88s67rbo5wh4"},{"name":"键盘","_id":"ck4xzj9b4001v88s6ddu939jq"},{"name":"macdown","_id":"ck4xzj9bf002888s69mwaf5sd"},{"name":"iOS账号","_id":"ckbq9wklr0002aj3jdaof6uer"},{"name":"上架","_id":"ckbq9wklt0004aj3j69pr8d9d"},{"name":"crash","_id":"ckbqeimtz0002uj3j5id41khy"},{"name":"sdk","_id":"ckbqeimu00004uj3j2ozhgbx4"},{"name":"sentry","_id":"ckbqf5a6p0000ol3j0gox63lv"},{"name":"加密","_id":"ckbrn0y4500026u3jgreqe0rb"},{"name":"算法","_id":"ckbrn0y4700046u3j5lrfeuze"},{"name":"证书链","_id":"ckbrn0y4h000b6u3j72x74l31"},{"name":"数字证书","_id":"ckbrn0y4h000d6u3j3hiwado0"},{"name":"deeplinking","_id":"ckbszw79o0004l73j9l1j7yvn"},{"name":"热修复","_id":"ckbszw79q0006l73j3m6u0oej"},{"name":"iOS","_id":"ckbszw79r0008l73jb5j54stl"},{"name":"通用链接","_id":"ckbszw79s000cl73j2dsw7yqd"},{"name":"JSPatch","_id":"ckbszw79t000el73ja19f94dp"},{"name":"RunLoop","_id":"ckbszw79t000hl73jb9yo4xav"},{"name":"组件化","_id":"ckbxmgp900004ty3jh6le8tzb"},{"name":"app","_id":"ckbxmgp930008ty3jeq3q0nr2"},{"name":"Jenkins","_id":"ckbxmgp95000cty3j9xx2dx9y"},{"name":"编程方式","_id":"ckbxmgp98000ity3jgabgfugp"},{"name":"私有化仓库","_id":"ckbxmgp9b000nty3j7efo3x03"},{"name":"资源文件","_id":"ckbxmgp9d000uty3j35izh6n5"},{"name":"程序软件下载器","_id":"ckbxmgp9f000zty3jevw375yp"},{"name":"framework","_id":"ckbxmgp9g0012ty3jdgrcag2f"},{"name":"开发模式","_id":"ckbxmgp9h0016ty3jbx1y1l2o"},{"name":"函数响应式编程","_id":"ckbxmgp9i0019ty3j0lyq44el"},{"name":"页面布局自动化","_id":"ckbxmgp9k001dty3ja0d2cfz1"},{"name":"模块化","_id":"ckbxmgp9l001jty3j9ix0eu0h"},{"name":"自动化打包部署","_id":"ckbxmgp9l001lty3jc0uyg93b"},{"name":"无痕埋点","_id":"ckbxmgp9n001pty3jbytt2ze9"},{"name":"马甲包","_id":"ckbxmgp9o001rty3j6peparnf"},{"name":"cocoapods","_id":"ckbxmgp9p001wty3jah5e0e3o"},{"name":"静态代码扫描","_id":"ckbxmgp9q001zty3jc5zehtrj"},{"name":"static library","_id":"ckbxmgp9r0024ty3j43045n7b"},{"name":"FRP","_id":"ckbxmgp9r0026ty3j69l2hijw"},{"name":"页面跳转自动化","_id":"ckbxmgp9s002bty3jg0eudnra"},{"name":"去耦合","_id":"ckbxmgp9t002gty3jat8r028u"},{"name":"工程组织结构","_id":"ckbxmgp9v002lty3j1mm157f7"},{"name":"加固","_id":"ckbyvi8p50004wp3j1tzv0r0o"},{"name":"UIScrollView嵌套联动效果","_id":"ckbyvi8p60006wp3j8k8h4xg8"},{"name":"安全攻防","_id":"ckbyvi8p70008wp3j7iyca9n3"},{"name":"破壳","_id":"ckbyvi8pi000hwp3jbbv45j0x"}],"Data":[],"Page":[],"Post":[{"layout":"post","title":"记录一些好的网站或博客","date":"2016-05-11T10:20:05.000Z","comments":1,"_content":"\n业务模块间解除耦合\n\nhttp://blog.cnbang.net/tech/3080/\n\n<!-- more -->\n\n### 业务模块间解除耦合\n\nhttp://blog.cnbang.net/tech/3080/\n\nhttp://wereadteam.github.io/2016/03/19/iOS-Component/\n\nhttp://www.w2bc.com/article/114030\n\nhttp://www.blackaile.com/2015/11/29/%E9%80%9A%E8%BF%87NSNotificationCenter%E4%BB%A5%E5%8F%8ARuntime%E6%9C%BA%E5%88%B6%E8%BF%9B%E8%A1%8C%E8%A7%A3%E8%80%A6%E5%90%88/\n","source":"_posts/ji-lu-yi-xie-hao-de-wang-zhan-huo-bo-ke.md","raw":"---\nlayout: post\ntitle: \"记录一些好的网站或博客\"\ndate: 2016-05-11 18:20:05 +0800\ncomments: true\ncategories: \n---\n\n业务模块间解除耦合\n\nhttp://blog.cnbang.net/tech/3080/\n\n<!-- more -->\n\n### 业务模块间解除耦合\n\nhttp://blog.cnbang.net/tech/3080/\n\nhttp://wereadteam.github.io/2016/03/19/iOS-Component/\n\nhttp://www.w2bc.com/article/114030\n\nhttp://www.blackaile.com/2015/11/29/%E9%80%9A%E8%BF%87NSNotificationCenter%E4%BB%A5%E5%8F%8ARuntime%E6%9C%BA%E5%88%B6%E8%BF%9B%E8%A1%8C%E8%A7%A3%E8%80%A6%E5%90%88/\n","slug":"ji-lu-yi-xie-hao-de-wang-zhan-huo-bo-ke","published":1,"updated":"2020-01-02T11:54:37.653Z","photos":[],"link":"","_id":"ck4xzj9a5000188s6g70m967k","content":"<p>业务模块间解除耦合</p>\n<p><a href=\"http://blog.cnbang.net/tech/3080/\" target=\"_blank\" rel=\"noopener\">http://blog.cnbang.net/tech/3080/</a></p>\n<a id=\"more\"></a>\n\n<h3 id=\"业务模块间解除耦合\"><a href=\"#业务模块间解除耦合\" class=\"headerlink\" title=\"业务模块间解除耦合\"></a>业务模块间解除耦合</h3><p><a href=\"http://blog.cnbang.net/tech/3080/\" target=\"_blank\" rel=\"noopener\">http://blog.cnbang.net/tech/3080/</a></p>\n<p><a href=\"http://wereadteam.github.io/2016/03/19/iOS-Component/\" target=\"_blank\" rel=\"noopener\">http://wereadteam.github.io/2016/03/19/iOS-Component/</a></p>\n<p><a href=\"http://www.w2bc.com/article/114030\" target=\"_blank\" rel=\"noopener\">http://www.w2bc.com/article/114030</a></p>\n<p><a href=\"http://www.blackaile.com/2015/11/29/%E9%80%9A%E8%BF%87NSNotificationCenter%E4%BB%A5%E5%8F%8ARuntime%E6%9C%BA%E5%88%B6%E8%BF%9B%E8%A1%8C%E8%A7%A3%E8%80%A6%E5%90%88/\" target=\"_blank\" rel=\"noopener\">http://www.blackaile.com/2015/11/29/%E9%80%9A%E8%BF%87NSNotificationCenter%E4%BB%A5%E5%8F%8ARuntime%E6%9C%BA%E5%88%B6%E8%BF%9B%E8%A1%8C%E8%A7%A3%E8%80%A6%E5%90%88/</a></p>\n","site":{"data":{}},"excerpt":"<p>业务模块间解除耦合</p>\n<p><a href=\"http://blog.cnbang.net/tech/3080/\" target=\"_blank\" rel=\"noopener\">http://blog.cnbang.net/tech/3080/</a></p>","more":"<h3 id=\"业务模块间解除耦合\"><a href=\"#业务模块间解除耦合\" class=\"headerlink\" title=\"业务模块间解除耦合\"></a>业务模块间解除耦合</h3><p><a href=\"http://blog.cnbang.net/tech/3080/\" target=\"_blank\" rel=\"noopener\">http://blog.cnbang.net/tech/3080/</a></p>\n<p><a href=\"http://wereadteam.github.io/2016/03/19/iOS-Component/\" target=\"_blank\" rel=\"noopener\">http://wereadteam.github.io/2016/03/19/iOS-Component/</a></p>\n<p><a href=\"http://www.w2bc.com/article/114030\" target=\"_blank\" rel=\"noopener\">http://www.w2bc.com/article/114030</a></p>\n<p><a href=\"http://www.blackaile.com/2015/11/29/%E9%80%9A%E8%BF%87NSNotificationCenter%E4%BB%A5%E5%8F%8ARuntime%E6%9C%BA%E5%88%B6%E8%BF%9B%E8%A1%8C%E8%A7%A3%E8%80%A6%E5%90%88/\" target=\"_blank\" rel=\"noopener\">http://www.blackaile.com/2015/11/29/%E9%80%9A%E8%BF%87NSNotificationCenter%E4%BB%A5%E5%8F%8ARuntime%E6%9C%BA%E5%88%B6%E8%BF%9B%E8%A1%8C%E8%A7%A3%E8%80%A6%E5%90%88/</a></p>"},{"layout":"post","title":"基于octopress的github-pages创建","date":"2016-02-15T13:56:10.000Z","comments":1,"_content":"\n具体搭建博客的步骤参考这些链接\n\nhttp://sherlockyao.com/blog/2014/05/23/hello-blogging/\n\n<!-- more -->\n\n### 具体搭建博客的步骤参考这些链接\n\nhttp://sherlockyao.com/blog/2014/05/23/hello-blogging/\n\nhttp://shengmingzhiqing.com/blog/setup-octopress-with-github-pages.html/\n\nhttp://www.pchou.info/web-build/2014/07/04/build-github-blog-page-08.html\n\nhttp://yinkang.me/archives/194\n\nhttp://sumnous.github.io/blog/2014/05/11/octopress-build-blog-on-github/\n\nhttp://kejiwen.com/blog/2014/12/07/build-octopress-blog-record/\n\nhttp://jekyllthemes.org/\nhttps://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes\n\nhttp://cnbin.github.io/blog/2015/05/18/octopressbo-ke-da-jian/\n\nhttp://stackoverflow.com/questions/19619280/octopress-pushing-error-to-github\n\n### 发博文常用步骤\n\n```bash\ncd octopress\nrake setup_github_pages\n```\n输入要链接的URL ,就是github上面仓库为XXX.github.io里面的URL,我的是https://github.com/liu3399shuai/liu3399shuai.github.io.git\n\n![](/images/github_url.png)\n\n新建博文\n\n```bash\nrake new_post[\"输入博文的title\"]\n```\n完了后去source/_post里面就可以看到了\n\n打开博文，使用markdown软件编辑，[macDown](http://macdown.uranusjr.com/) 或者 [Mou](http://25.io/mou/)都可以,写完后去生成网页，发布\n\n```bash\nrake generate\nrake deploy\n或者两个命令连城一个 rake gen_deploy\n```\n这个是发布的，发布成功后，隔几秒，刷新下github-page主页\n\n`不要忘了`，保留更改的source文件\n\n```bash\ngit commit -m'msg'\ngit push origin source\n```\n\n### 注意问题\n\n在走到bundle install 这一步时候，经常失败，比如原因有如下这个\n\n```bash\nDon't run Bundler as root. Bundler can ask for sudo if it is needed, and\ninstalling your bundle as root will break this application for all non-root\nusers on this machine.\nFetching gem metadata from https://rubygems.org/...........\nFetching version metadata from https://rubygems.org/...\nFetching dependency metadata from https://rubygems.org/..\nResolving dependencies...\nUsing rake 10.4.2\nUsing RedCloth 4.2.9\nUsing blankslate 2.1.2.4\nUsing hitimes 1.2.2\nUsing timers 4.0.1\nUsing celluloid 0.16.0\nUsing chunky_png 1.3.4\nUsing fast-stemmer 1.0.2\nUsing classifier-reborn 2.0.3\nUsing coffee-script-source 1.9.1.1\nUsing execjs 2.5.2\nUsing coffee-script 2.4.1\nUsing colorator 0.1\nUsing multi_json 1.11.2\nUsing sass 3.4.15\nUsing compass-core 1.0.3\nUsing compass-import-once 1.0.5\nUsing rb-fsevent 0.9.5\nUsing ffi 1.9.10\n\nGem::RemoteFetcher::FetchError: Errno::ECONNRESET: Connection reset by peer - SSL_connect (https://rubygems.org/gems/rb-inotify-0.9.5.gem)\nAn error occurred while installing rb-inotify (0.9.5), and Bundler cannot\ncontinue.\nMake sure that `gem install rb-inotify -v '0.9.5'` succeeds before bundling.\n```\n\n因为国内被墙的原因，解决方案 :在执行目录下得到一个Gemfile文件，用文本编辑器打开，修改为\n\n```bash\nsource \"https://ruby.taobao.org\"\n```\n\n如果在使用 rake deploy rake gen_deploy 时候报出这样的错误，需要同步一下\n\n```bash\nPushing generated _deploy website\nTo https://github.com/liu3399shuai/liu3399shuai.github.io.git\n ! [rejected]        master -> master (non-fast-forward)\nerror: failed to push some refs to 'https://github.com/liu3399shuai/liu3399shuai.github.io.git'\nhint: Updates were rejected because the tip of your current branch is behind\nhint: its remote counterpart. Integrate the remote changes (e.g.\nhint: 'git pull ...') before pushing again.\nhint: See the 'Note about fast-forwards' in 'git push --help' for details.\n\nGithub Pages deploy complete\n```\n\n同步命令\n\n```bash\ncd _deploy\ngit reset --hard origin/master\ncd ..\n```\n\n联系我 <liu3399shuai@163.com>\n\n或者我的网站 <https://github.com>\n","source":"_posts/ji-yu-octopressde-github-pageschuang-jian.md","raw":"---\nlayout: post\ntitle: \"基于octopress的github-pages创建\"\ndate: 2016-02-15 21:56:10 +0800\ncomments: true\ncategories: \n---\n\n具体搭建博客的步骤参考这些链接\n\nhttp://sherlockyao.com/blog/2014/05/23/hello-blogging/\n\n<!-- more -->\n\n### 具体搭建博客的步骤参考这些链接\n\nhttp://sherlockyao.com/blog/2014/05/23/hello-blogging/\n\nhttp://shengmingzhiqing.com/blog/setup-octopress-with-github-pages.html/\n\nhttp://www.pchou.info/web-build/2014/07/04/build-github-blog-page-08.html\n\nhttp://yinkang.me/archives/194\n\nhttp://sumnous.github.io/blog/2014/05/11/octopress-build-blog-on-github/\n\nhttp://kejiwen.com/blog/2014/12/07/build-octopress-blog-record/\n\nhttp://jekyllthemes.org/\nhttps://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes\n\nhttp://cnbin.github.io/blog/2015/05/18/octopressbo-ke-da-jian/\n\nhttp://stackoverflow.com/questions/19619280/octopress-pushing-error-to-github\n\n### 发博文常用步骤\n\n```bash\ncd octopress\nrake setup_github_pages\n```\n输入要链接的URL ,就是github上面仓库为XXX.github.io里面的URL,我的是https://github.com/liu3399shuai/liu3399shuai.github.io.git\n\n![](/images/github_url.png)\n\n新建博文\n\n```bash\nrake new_post[\"输入博文的title\"]\n```\n完了后去source/_post里面就可以看到了\n\n打开博文，使用markdown软件编辑，[macDown](http://macdown.uranusjr.com/) 或者 [Mou](http://25.io/mou/)都可以,写完后去生成网页，发布\n\n```bash\nrake generate\nrake deploy\n或者两个命令连城一个 rake gen_deploy\n```\n这个是发布的，发布成功后，隔几秒，刷新下github-page主页\n\n`不要忘了`，保留更改的source文件\n\n```bash\ngit commit -m'msg'\ngit push origin source\n```\n\n### 注意问题\n\n在走到bundle install 这一步时候，经常失败，比如原因有如下这个\n\n```bash\nDon't run Bundler as root. Bundler can ask for sudo if it is needed, and\ninstalling your bundle as root will break this application for all non-root\nusers on this machine.\nFetching gem metadata from https://rubygems.org/...........\nFetching version metadata from https://rubygems.org/...\nFetching dependency metadata from https://rubygems.org/..\nResolving dependencies...\nUsing rake 10.4.2\nUsing RedCloth 4.2.9\nUsing blankslate 2.1.2.4\nUsing hitimes 1.2.2\nUsing timers 4.0.1\nUsing celluloid 0.16.0\nUsing chunky_png 1.3.4\nUsing fast-stemmer 1.0.2\nUsing classifier-reborn 2.0.3\nUsing coffee-script-source 1.9.1.1\nUsing execjs 2.5.2\nUsing coffee-script 2.4.1\nUsing colorator 0.1\nUsing multi_json 1.11.2\nUsing sass 3.4.15\nUsing compass-core 1.0.3\nUsing compass-import-once 1.0.5\nUsing rb-fsevent 0.9.5\nUsing ffi 1.9.10\n\nGem::RemoteFetcher::FetchError: Errno::ECONNRESET: Connection reset by peer - SSL_connect (https://rubygems.org/gems/rb-inotify-0.9.5.gem)\nAn error occurred while installing rb-inotify (0.9.5), and Bundler cannot\ncontinue.\nMake sure that `gem install rb-inotify -v '0.9.5'` succeeds before bundling.\n```\n\n因为国内被墙的原因，解决方案 :在执行目录下得到一个Gemfile文件，用文本编辑器打开，修改为\n\n```bash\nsource \"https://ruby.taobao.org\"\n```\n\n如果在使用 rake deploy rake gen_deploy 时候报出这样的错误，需要同步一下\n\n```bash\nPushing generated _deploy website\nTo https://github.com/liu3399shuai/liu3399shuai.github.io.git\n ! [rejected]        master -> master (non-fast-forward)\nerror: failed to push some refs to 'https://github.com/liu3399shuai/liu3399shuai.github.io.git'\nhint: Updates were rejected because the tip of your current branch is behind\nhint: its remote counterpart. Integrate the remote changes (e.g.\nhint: 'git pull ...') before pushing again.\nhint: See the 'Note about fast-forwards' in 'git push --help' for details.\n\nGithub Pages deploy complete\n```\n\n同步命令\n\n```bash\ncd _deploy\ngit reset --hard origin/master\ncd ..\n```\n\n联系我 <liu3399shuai@163.com>\n\n或者我的网站 <https://github.com>\n","slug":"ji-yu-octopressde-github-pageschuang-jian","published":1,"updated":"2020-06-23T03:50:54.032Z","_id":"ck4xzj9aa000388s6et9o05ge","photos":[],"link":"","content":"<p>具体搭建博客的步骤参考这些链接</p>\n<p><a href=\"http://sherlockyao.com/blog/2014/05/23/hello-blogging/\" target=\"_blank\" rel=\"noopener\">http://sherlockyao.com/blog/2014/05/23/hello-blogging/</a></p>\n<a id=\"more\"></a>\n\n<h3 id=\"具体搭建博客的步骤参考这些链接\"><a href=\"#具体搭建博客的步骤参考这些链接\" class=\"headerlink\" title=\"具体搭建博客的步骤参考这些链接\"></a>具体搭建博客的步骤参考这些链接</h3><p><a href=\"http://sherlockyao.com/blog/2014/05/23/hello-blogging/\" target=\"_blank\" rel=\"noopener\">http://sherlockyao.com/blog/2014/05/23/hello-blogging/</a></p>\n<p><a href=\"http://shengmingzhiqing.com/blog/setup-octopress-with-github-pages.html/\" target=\"_blank\" rel=\"noopener\">http://shengmingzhiqing.com/blog/setup-octopress-with-github-pages.html/</a></p>\n<p><a href=\"http://www.pchou.info/web-build/2014/07/04/build-github-blog-page-08.html\" target=\"_blank\" rel=\"noopener\">http://www.pchou.info/web-build/2014/07/04/build-github-blog-page-08.html</a></p>\n<p><a href=\"http://yinkang.me/archives/194\" target=\"_blank\" rel=\"noopener\">http://yinkang.me/archives/194</a></p>\n<p><a href=\"http://sumnous.github.io/blog/2014/05/11/octopress-build-blog-on-github/\" target=\"_blank\" rel=\"noopener\">http://sumnous.github.io/blog/2014/05/11/octopress-build-blog-on-github/</a></p>\n<p><a href=\"http://kejiwen.com/blog/2014/12/07/build-octopress-blog-record/\" target=\"_blank\" rel=\"noopener\">http://kejiwen.com/blog/2014/12/07/build-octopress-blog-record/</a></p>\n<p><a href=\"http://jekyllthemes.org/\" target=\"_blank\" rel=\"noopener\">http://jekyllthemes.org/</a><br><a href=\"https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes\" target=\"_blank\" rel=\"noopener\">https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes</a></p>\n<p><a href=\"http://cnbin.github.io/blog/2015/05/18/octopressbo-ke-da-jian/\" target=\"_blank\" rel=\"noopener\">http://cnbin.github.io/blog/2015/05/18/octopressbo-ke-da-jian/</a></p>\n<p><a href=\"http://stackoverflow.com/questions/19619280/octopress-pushing-error-to-github\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/19619280/octopress-pushing-error-to-github</a></p>\n<h3 id=\"发博文常用步骤\"><a href=\"#发博文常用步骤\" class=\"headerlink\" title=\"发博文常用步骤\"></a>发博文常用步骤</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> octopress</span><br><span class=\"line\">rake setup_github_pages</span><br></pre></td></tr></table></figure>\n<p>输入要链接的URL ,就是github上面仓库为XXX.github.io里面的URL,我的是<a href=\"https://github.com/liu3399shuai/liu3399shuai.github.io.git\" target=\"_blank\" rel=\"noopener\">https://github.com/liu3399shuai/liu3399shuai.github.io.git</a></p>\n<p><img src=\"/images/github_url.png\" alt=\"\"></p>\n<p>新建博文</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rake new_post[<span class=\"string\">\"输入博文的title\"</span>]</span><br></pre></td></tr></table></figure>\n<p>完了后去source/_post里面就可以看到了</p>\n<p>打开博文，使用markdown软件编辑，<a href=\"http://macdown.uranusjr.com/\" target=\"_blank\" rel=\"noopener\">macDown</a> 或者 <a href=\"http://25.io/mou/\" target=\"_blank\" rel=\"noopener\">Mou</a>都可以,写完后去生成网页，发布</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rake generate</span><br><span class=\"line\">rake deploy</span><br><span class=\"line\">或者两个命令连城一个 rake gen_deploy</span><br></pre></td></tr></table></figure>\n<p>这个是发布的，发布成功后，隔几秒，刷新下github-page主页</p>\n<p><code>不要忘了</code>，保留更改的source文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m<span class=\"string\">'msg'</span></span><br><span class=\"line\">git push origin <span class=\"built_in\">source</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注意问题\"><a href=\"#注意问题\" class=\"headerlink\" title=\"注意问题\"></a>注意问题</h3><p>在走到bundle install 这一步时候，经常失败，比如原因有如下这个</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Don<span class=\"string\">'t run Bundler as root. Bundler can ask for sudo if it is needed, and</span></span><br><span class=\"line\"><span class=\"string\">installing your bundle as root will break this application for all non-root</span></span><br><span class=\"line\"><span class=\"string\">users on this machine.</span></span><br><span class=\"line\"><span class=\"string\">Fetching gem metadata from https://rubygems.org/...........</span></span><br><span class=\"line\"><span class=\"string\">Fetching version metadata from https://rubygems.org/...</span></span><br><span class=\"line\"><span class=\"string\">Fetching dependency metadata from https://rubygems.org/..</span></span><br><span class=\"line\"><span class=\"string\">Resolving dependencies...</span></span><br><span class=\"line\"><span class=\"string\">Using rake 10.4.2</span></span><br><span class=\"line\"><span class=\"string\">Using RedCloth 4.2.9</span></span><br><span class=\"line\"><span class=\"string\">Using blankslate 2.1.2.4</span></span><br><span class=\"line\"><span class=\"string\">Using hitimes 1.2.2</span></span><br><span class=\"line\"><span class=\"string\">Using timers 4.0.1</span></span><br><span class=\"line\"><span class=\"string\">Using celluloid 0.16.0</span></span><br><span class=\"line\"><span class=\"string\">Using chunky_png 1.3.4</span></span><br><span class=\"line\"><span class=\"string\">Using fast-stemmer 1.0.2</span></span><br><span class=\"line\"><span class=\"string\">Using classifier-reborn 2.0.3</span></span><br><span class=\"line\"><span class=\"string\">Using coffee-script-source 1.9.1.1</span></span><br><span class=\"line\"><span class=\"string\">Using execjs 2.5.2</span></span><br><span class=\"line\"><span class=\"string\">Using coffee-script 2.4.1</span></span><br><span class=\"line\"><span class=\"string\">Using colorator 0.1</span></span><br><span class=\"line\"><span class=\"string\">Using multi_json 1.11.2</span></span><br><span class=\"line\"><span class=\"string\">Using sass 3.4.15</span></span><br><span class=\"line\"><span class=\"string\">Using compass-core 1.0.3</span></span><br><span class=\"line\"><span class=\"string\">Using compass-import-once 1.0.5</span></span><br><span class=\"line\"><span class=\"string\">Using rb-fsevent 0.9.5</span></span><br><span class=\"line\"><span class=\"string\">Using ffi 1.9.10</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Gem::RemoteFetcher::FetchError: Errno::ECONNRESET: Connection reset by peer - SSL_connect (https://rubygems.org/gems/rb-inotify-0.9.5.gem)</span></span><br><span class=\"line\"><span class=\"string\">An error occurred while installing rb-inotify (0.9.5), and Bundler cannot</span></span><br><span class=\"line\"><span class=\"string\">continue.</span></span><br><span class=\"line\"><span class=\"string\">Make sure that `gem install rb-inotify -v '</span>0.9.5<span class=\"string\">'` succeeds before bundling.</span></span><br></pre></td></tr></table></figure>\n\n<p>因为国内被墙的原因，解决方案 :在执行目录下得到一个Gemfile文件，用文本编辑器打开，修改为</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> <span class=\"string\">\"https://ruby.taobao.org\"</span></span><br></pre></td></tr></table></figure>\n\n<p>如果在使用 rake deploy rake gen_deploy 时候报出这样的错误，需要同步一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Pushing generated _deploy website</span><br><span class=\"line\">To https://github.com/liu3399shuai/liu3399shuai.github.io.git</span><br><span class=\"line\"> ! [rejected]        master -&gt; master (non-fast-forward)</span><br><span class=\"line\">error: failed to push some refs to <span class=\"string\">'https://github.com/liu3399shuai/liu3399shuai.github.io.git'</span></span><br><span class=\"line\">hint: Updates were rejected because the tip of your current branch is behind</span><br><span class=\"line\">hint: its remote counterpart. Integrate the remote changes (e.g.</span><br><span class=\"line\">hint: <span class=\"string\">'git pull ...'</span>) before pushing again.</span><br><span class=\"line\">hint: See the <span class=\"string\">'Note about fast-forwards'</span> <span class=\"keyword\">in</span> <span class=\"string\">'git push --help'</span> <span class=\"keyword\">for</span> details.</span><br><span class=\"line\"></span><br><span class=\"line\">Github Pages deploy complete</span><br></pre></td></tr></table></figure>\n\n<p>同步命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> _deploy</span><br><span class=\"line\">git reset --hard origin/master</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ..</span><br></pre></td></tr></table></figure>\n\n<p>联系我 <a href=\"mailto:&#x6c;&#x69;&#117;&#51;&#51;&#x39;&#x39;&#x73;&#104;&#117;&#97;&#x69;&#x40;&#49;&#x36;&#51;&#x2e;&#99;&#x6f;&#x6d;\">&#x6c;&#x69;&#117;&#51;&#51;&#x39;&#x39;&#x73;&#104;&#117;&#97;&#x69;&#x40;&#49;&#x36;&#51;&#x2e;&#99;&#x6f;&#x6d;</a></p>\n<p>或者我的网站 <a href=\"https://github.com\" target=\"_blank\" rel=\"noopener\">https://github.com</a></p>\n","site":{"data":{}},"excerpt":"<p>具体搭建博客的步骤参考这些链接</p>\n<p><a href=\"http://sherlockyao.com/blog/2014/05/23/hello-blogging/\" target=\"_blank\" rel=\"noopener\">http://sherlockyao.com/blog/2014/05/23/hello-blogging/</a></p>","more":"<h3 id=\"具体搭建博客的步骤参考这些链接\"><a href=\"#具体搭建博客的步骤参考这些链接\" class=\"headerlink\" title=\"具体搭建博客的步骤参考这些链接\"></a>具体搭建博客的步骤参考这些链接</h3><p><a href=\"http://sherlockyao.com/blog/2014/05/23/hello-blogging/\" target=\"_blank\" rel=\"noopener\">http://sherlockyao.com/blog/2014/05/23/hello-blogging/</a></p>\n<p><a href=\"http://shengmingzhiqing.com/blog/setup-octopress-with-github-pages.html/\" target=\"_blank\" rel=\"noopener\">http://shengmingzhiqing.com/blog/setup-octopress-with-github-pages.html/</a></p>\n<p><a href=\"http://www.pchou.info/web-build/2014/07/04/build-github-blog-page-08.html\" target=\"_blank\" rel=\"noopener\">http://www.pchou.info/web-build/2014/07/04/build-github-blog-page-08.html</a></p>\n<p><a href=\"http://yinkang.me/archives/194\" target=\"_blank\" rel=\"noopener\">http://yinkang.me/archives/194</a></p>\n<p><a href=\"http://sumnous.github.io/blog/2014/05/11/octopress-build-blog-on-github/\" target=\"_blank\" rel=\"noopener\">http://sumnous.github.io/blog/2014/05/11/octopress-build-blog-on-github/</a></p>\n<p><a href=\"http://kejiwen.com/blog/2014/12/07/build-octopress-blog-record/\" target=\"_blank\" rel=\"noopener\">http://kejiwen.com/blog/2014/12/07/build-octopress-blog-record/</a></p>\n<p><a href=\"http://jekyllthemes.org/\" target=\"_blank\" rel=\"noopener\">http://jekyllthemes.org/</a><br><a href=\"https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes\" target=\"_blank\" rel=\"noopener\">https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes</a></p>\n<p><a href=\"http://cnbin.github.io/blog/2015/05/18/octopressbo-ke-da-jian/\" target=\"_blank\" rel=\"noopener\">http://cnbin.github.io/blog/2015/05/18/octopressbo-ke-da-jian/</a></p>\n<p><a href=\"http://stackoverflow.com/questions/19619280/octopress-pushing-error-to-github\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/19619280/octopress-pushing-error-to-github</a></p>\n<h3 id=\"发博文常用步骤\"><a href=\"#发博文常用步骤\" class=\"headerlink\" title=\"发博文常用步骤\"></a>发博文常用步骤</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> octopress</span><br><span class=\"line\">rake setup_github_pages</span><br></pre></td></tr></table></figure>\n<p>输入要链接的URL ,就是github上面仓库为XXX.github.io里面的URL,我的是<a href=\"https://github.com/liu3399shuai/liu3399shuai.github.io.git\" target=\"_blank\" rel=\"noopener\">https://github.com/liu3399shuai/liu3399shuai.github.io.git</a></p>\n<p><img src=\"/images/github_url.png\" alt=\"\"></p>\n<p>新建博文</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rake new_post[<span class=\"string\">\"输入博文的title\"</span>]</span><br></pre></td></tr></table></figure>\n<p>完了后去source/_post里面就可以看到了</p>\n<p>打开博文，使用markdown软件编辑，<a href=\"http://macdown.uranusjr.com/\" target=\"_blank\" rel=\"noopener\">macDown</a> 或者 <a href=\"http://25.io/mou/\" target=\"_blank\" rel=\"noopener\">Mou</a>都可以,写完后去生成网页，发布</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rake generate</span><br><span class=\"line\">rake deploy</span><br><span class=\"line\">或者两个命令连城一个 rake gen_deploy</span><br></pre></td></tr></table></figure>\n<p>这个是发布的，发布成功后，隔几秒，刷新下github-page主页</p>\n<p><code>不要忘了</code>，保留更改的source文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m<span class=\"string\">'msg'</span></span><br><span class=\"line\">git push origin <span class=\"built_in\">source</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注意问题\"><a href=\"#注意问题\" class=\"headerlink\" title=\"注意问题\"></a>注意问题</h3><p>在走到bundle install 这一步时候，经常失败，比如原因有如下这个</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Don<span class=\"string\">'t run Bundler as root. Bundler can ask for sudo if it is needed, and</span></span><br><span class=\"line\"><span class=\"string\">installing your bundle as root will break this application for all non-root</span></span><br><span class=\"line\"><span class=\"string\">users on this machine.</span></span><br><span class=\"line\"><span class=\"string\">Fetching gem metadata from https://rubygems.org/...........</span></span><br><span class=\"line\"><span class=\"string\">Fetching version metadata from https://rubygems.org/...</span></span><br><span class=\"line\"><span class=\"string\">Fetching dependency metadata from https://rubygems.org/..</span></span><br><span class=\"line\"><span class=\"string\">Resolving dependencies...</span></span><br><span class=\"line\"><span class=\"string\">Using rake 10.4.2</span></span><br><span class=\"line\"><span class=\"string\">Using RedCloth 4.2.9</span></span><br><span class=\"line\"><span class=\"string\">Using blankslate 2.1.2.4</span></span><br><span class=\"line\"><span class=\"string\">Using hitimes 1.2.2</span></span><br><span class=\"line\"><span class=\"string\">Using timers 4.0.1</span></span><br><span class=\"line\"><span class=\"string\">Using celluloid 0.16.0</span></span><br><span class=\"line\"><span class=\"string\">Using chunky_png 1.3.4</span></span><br><span class=\"line\"><span class=\"string\">Using fast-stemmer 1.0.2</span></span><br><span class=\"line\"><span class=\"string\">Using classifier-reborn 2.0.3</span></span><br><span class=\"line\"><span class=\"string\">Using coffee-script-source 1.9.1.1</span></span><br><span class=\"line\"><span class=\"string\">Using execjs 2.5.2</span></span><br><span class=\"line\"><span class=\"string\">Using coffee-script 2.4.1</span></span><br><span class=\"line\"><span class=\"string\">Using colorator 0.1</span></span><br><span class=\"line\"><span class=\"string\">Using multi_json 1.11.2</span></span><br><span class=\"line\"><span class=\"string\">Using sass 3.4.15</span></span><br><span class=\"line\"><span class=\"string\">Using compass-core 1.0.3</span></span><br><span class=\"line\"><span class=\"string\">Using compass-import-once 1.0.5</span></span><br><span class=\"line\"><span class=\"string\">Using rb-fsevent 0.9.5</span></span><br><span class=\"line\"><span class=\"string\">Using ffi 1.9.10</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Gem::RemoteFetcher::FetchError: Errno::ECONNRESET: Connection reset by peer - SSL_connect (https://rubygems.org/gems/rb-inotify-0.9.5.gem)</span></span><br><span class=\"line\"><span class=\"string\">An error occurred while installing rb-inotify (0.9.5), and Bundler cannot</span></span><br><span class=\"line\"><span class=\"string\">continue.</span></span><br><span class=\"line\"><span class=\"string\">Make sure that `gem install rb-inotify -v '</span>0.9.5<span class=\"string\">'` succeeds before bundling.</span></span><br></pre></td></tr></table></figure>\n\n<p>因为国内被墙的原因，解决方案 :在执行目录下得到一个Gemfile文件，用文本编辑器打开，修改为</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> <span class=\"string\">\"https://ruby.taobao.org\"</span></span><br></pre></td></tr></table></figure>\n\n<p>如果在使用 rake deploy rake gen_deploy 时候报出这样的错误，需要同步一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Pushing generated _deploy website</span><br><span class=\"line\">To https://github.com/liu3399shuai/liu3399shuai.github.io.git</span><br><span class=\"line\"> ! [rejected]        master -&gt; master (non-fast-forward)</span><br><span class=\"line\">error: failed to push some refs to <span class=\"string\">'https://github.com/liu3399shuai/liu3399shuai.github.io.git'</span></span><br><span class=\"line\">hint: Updates were rejected because the tip of your current branch is behind</span><br><span class=\"line\">hint: its remote counterpart. Integrate the remote changes (e.g.</span><br><span class=\"line\">hint: <span class=\"string\">'git pull ...'</span>) before pushing again.</span><br><span class=\"line\">hint: See the <span class=\"string\">'Note about fast-forwards'</span> <span class=\"keyword\">in</span> <span class=\"string\">'git push --help'</span> <span class=\"keyword\">for</span> details.</span><br><span class=\"line\"></span><br><span class=\"line\">Github Pages deploy complete</span><br></pre></td></tr></table></figure>\n\n<p>同步命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> _deploy</span><br><span class=\"line\">git reset --hard origin/master</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ..</span><br></pre></td></tr></table></figure>\n\n<p>联系我 <a href=\"mailto:&#x6c;&#x69;&#117;&#51;&#51;&#x39;&#x39;&#x73;&#104;&#117;&#97;&#x69;&#x40;&#49;&#x36;&#51;&#x2e;&#99;&#x6f;&#x6d;\">&#x6c;&#x69;&#117;&#51;&#51;&#x39;&#x39;&#x73;&#104;&#117;&#97;&#x69;&#x40;&#49;&#x36;&#51;&#x2e;&#99;&#x6f;&#x6d;</a></p>\n<p>或者我的网站 <a href=\"https://github.com\" target=\"_blank\" rel=\"noopener\">https://github.com</a></p>"},{"layout":"post","title":"技术博客","date":"2016-02-20T04:31:42.000Z","comments":1,"_content":"\n开通了技术博客，希望以后在这里写点东西，可以自己写一些总结之类的，希望每个月能有一篇博文！\n\n<!-- more -->\n\n开通了技术博客，希望以后在这里写点东西，可以自己写一些总结之类的，也可以翻译国外的优秀文章，希望每个月能有一篇博文！\n","source":"_posts/ji-zhu-bo-ke.md","raw":"---\nlayout: post\ntitle: \"技术博客\"\ndate: 2016-02-20 12:31:42 +0800\ncomments: true\ncategories: \n---\n\n开通了技术博客，希望以后在这里写点东西，可以自己写一些总结之类的，希望每个月能有一篇博文！\n\n<!-- more -->\n\n开通了技术博客，希望以后在这里写点东西，可以自己写一些总结之类的，也可以翻译国外的优秀文章，希望每个月能有一篇博文！\n","slug":"ji-zhu-bo-ke","published":1,"updated":"2020-06-23T06:09:39.303Z","_id":"ck4xzj9ac000688s69xlo3wty","photos":[],"link":"","content":"<p>开通了技术博客，希望以后在这里写点东西，可以自己写一些总结之类的，希望每个月能有一篇博文！</p>\n<a id=\"more\"></a>\n\n<p>开通了技术博客，希望以后在这里写点东西，可以自己写一些总结之类的，也可以翻译国外的优秀文章，希望每个月能有一篇博文！</p>\n","site":{"data":{}},"excerpt":"<p>开通了技术博客，希望以后在这里写点东西，可以自己写一些总结之类的，希望每个月能有一篇博文！</p>","more":"<p>开通了技术博客，希望以后在这里写点东西，可以自己写一些总结之类的，也可以翻译国外的优秀文章，希望每个月能有一篇博文！</p>"},{"layout":"post","title":"软件设计层次架构","date":"2016-03-08T10:33:52.000Z","comments":1,"_content":"\n软件层次\n\n`工具层`(utility，通用的工具，和具体的业务无关)\n\n`网络层`(负责和server进行交互)\n\n<!-- more -->\n\n### 软件层次\n\n`工具层`(utility，通用的工具，和具体的业务无关)\n\n`网络层`(负责和server进行交互)\n\n`数据持久层`(本地缓存、数据库)\n\n`model层`(原始数据的类载体，比如来自网络或数据库的时间戳，不进行处数据理)\n\n`逻辑层`(viewmodel层，软件业务功能逻辑相关，可以给每个界面增加个逻辑层，也可以给一个业务功能多个界面增加一个逻辑层)\n\n`UI层`(显示的view)\n\n`控制层`(controller是个大杂炖，上面那些层都在这个controller里面彼此交互)\n\n### 软件框架\n\n##### 大多是`MVC`模式\n\n![](/images/mvc.png)\n\n缺点：经常会导致C很臃肿，不易管理，所以出现了MVVM。\n\n##### MVVM模式\n\n`MVVM`就是将业务逻辑从controller里面抽出来单独生成一个类，降低耦合\n\n如果要想把业务逻辑从controller中抽取出来，以实现逻辑层(viewmodel)是逻辑的载体，那么逻辑层至少需要\n\n```objc\n1 实时的接受view里面各种数据源和事件源的变化(比如输入框、按钮等)\n2 逻辑任务处理完成后将数据、动作输出至view/controller\n```\n\n要实现这两条，就需要`响应式编程`的概念。\n\n```objc\n函数响应式编程(Functional Reactive Programing : FRP)  :  面向数据流的变化传播(管道处理，比如过滤，类型映射，订阅，组合,属性绑定)\n```\n\n比如 excel 3-8数码管 订阅(公众号、日报),详见[wiki](https://zh.wikipedia.org/wiki/%E5%93%8D%E5%BA%94%E5%BC%8F%E7%BC%96%E7%A8%8B)\n\n数据流，逻辑流 这种概念思想很重要,和命令式编程大不一样\n\n由此，`Reactive Cocoa` 应运而生。\n\nReactive Cocoa 可以承担以下任务\n\n1 数据流统一封装分发\n\n![](/images/mvvm3.png)\n\n2 数据(双向)绑定\n\n![](/images/mvvm1.png)\n\n3 动作事件通知\n\n![](/images/mvvm2.png)\n\n代码实例\n\n```objc\n// data binding\nRAC(_viewModel,phone) = _phoneTF.rac_textSignal; // 这样可以(只能)观察到textField 源于键盘输入导致的值变化\nRAC(_phoneTF,text) = [RACObserve(_viewModel, phone) distinctUntilChanged];\n\n// 清空_phoneTF\n_viewModel.phone = @\"\"; // 代码实现\n// _phoneTF.text = nil; // 这种方式不行\n```\n\n关于使用RAC(...)，有时会有这样的错误`error : is already bound to key path \"\" on object  rac`，原因是\n\n```objc\nRAC(self.viewModel,smsCode) = _phoneTF.rac_textSignal;\nRAC(self.viewModel,smsCode) = _codeTF.rac_textSignal;\n给smsCode只能绑定一次,绑给别的信号了，就不能再绑给另外一个信号了,所以绑定慎用，但可以subscribeNext啊\n```\n\n[RACSignal createSignal] 方式创建signal，只创建一次就OK\n\n```objc\n-(RACSignal *)validatePhoneSignal\n{\n    if (!_validatePhoneSignal) {\n        _validatePhoneSignal = [RACSignal createSignal:^RACDisposable *(id<RACSubscriber> subscriber) {\n            \n            if (isValid([[UserBaseInfo share] identityName]) && _idCode.length != 15 && _idCode.length != 18) {\n                [subscriber sendError:Error(errCode_toast, @\"请输入正确的15或18位身份证号\")];\n                return nil;\n            }\n            \n            [_service verifyCode:_smsCode idCard:_idCode finish:^(NSError *error) {\n                \n                if (error) {\n                    [subscriber sendError:error];\n                }else{\n                    \n                    [subscriber sendNext:@(YES)];\n                    [subscriber sendCompleted];\n                }\n            }];\n            \n            return nil;\n        }];\n    }\n    \n    return _validatePhoneSignal;\n}\n```\n\n[RACSubject subject] 创建的signal，每次都得创建\n\n```objc\n-(RACSignal *)rechargeSignal\n{    \n    RACReplaySubject *subject = [RACReplaySubject subject];\n    _rechargeSignal = [subject deliverOnMainThread];\n    \n    [self.submitSignal subscribeNext:^(NSNumber *x) {\n        \n        if (x.boolValue) {\n            [subject sendNext:@(YES)];\n            [subject sendCompleted];\n        }else{\n            [self.querySignal subscribeNext:^(id x) {\n                [subject sendNext:@(YES)];\n                [subject sendCompleted];\n            } error:^(NSError *error) {\n                [subject sendError:error];\n            }];\n        }\n        \n    } error:^(NSError *error) {\n        [subject sendError:error];\n    }];\n            \n    return _rechargeSignal;\n}\n```\n\n\n","source":"_posts/ruan-jian-jia-gou-mvvm.md","raw":"---\nlayout: post\ntitle: \"软件设计层次架构\"\ndate: 2016-03-08 18:33:52 +0800\ncomments: true\ntags:\n- MVVM\ncategories:\n- [软件架构]\n- [架构]\n---\n\n软件层次\n\n`工具层`(utility，通用的工具，和具体的业务无关)\n\n`网络层`(负责和server进行交互)\n\n<!-- more -->\n\n### 软件层次\n\n`工具层`(utility，通用的工具，和具体的业务无关)\n\n`网络层`(负责和server进行交互)\n\n`数据持久层`(本地缓存、数据库)\n\n`model层`(原始数据的类载体，比如来自网络或数据库的时间戳，不进行处数据理)\n\n`逻辑层`(viewmodel层，软件业务功能逻辑相关，可以给每个界面增加个逻辑层，也可以给一个业务功能多个界面增加一个逻辑层)\n\n`UI层`(显示的view)\n\n`控制层`(controller是个大杂炖，上面那些层都在这个controller里面彼此交互)\n\n### 软件框架\n\n##### 大多是`MVC`模式\n\n![](/images/mvc.png)\n\n缺点：经常会导致C很臃肿，不易管理，所以出现了MVVM。\n\n##### MVVM模式\n\n`MVVM`就是将业务逻辑从controller里面抽出来单独生成一个类，降低耦合\n\n如果要想把业务逻辑从controller中抽取出来，以实现逻辑层(viewmodel)是逻辑的载体，那么逻辑层至少需要\n\n```objc\n1 实时的接受view里面各种数据源和事件源的变化(比如输入框、按钮等)\n2 逻辑任务处理完成后将数据、动作输出至view/controller\n```\n\n要实现这两条，就需要`响应式编程`的概念。\n\n```objc\n函数响应式编程(Functional Reactive Programing : FRP)  :  面向数据流的变化传播(管道处理，比如过滤，类型映射，订阅，组合,属性绑定)\n```\n\n比如 excel 3-8数码管 订阅(公众号、日报),详见[wiki](https://zh.wikipedia.org/wiki/%E5%93%8D%E5%BA%94%E5%BC%8F%E7%BC%96%E7%A8%8B)\n\n数据流，逻辑流 这种概念思想很重要,和命令式编程大不一样\n\n由此，`Reactive Cocoa` 应运而生。\n\nReactive Cocoa 可以承担以下任务\n\n1 数据流统一封装分发\n\n![](/images/mvvm3.png)\n\n2 数据(双向)绑定\n\n![](/images/mvvm1.png)\n\n3 动作事件通知\n\n![](/images/mvvm2.png)\n\n代码实例\n\n```objc\n// data binding\nRAC(_viewModel,phone) = _phoneTF.rac_textSignal; // 这样可以(只能)观察到textField 源于键盘输入导致的值变化\nRAC(_phoneTF,text) = [RACObserve(_viewModel, phone) distinctUntilChanged];\n\n// 清空_phoneTF\n_viewModel.phone = @\"\"; // 代码实现\n// _phoneTF.text = nil; // 这种方式不行\n```\n\n关于使用RAC(...)，有时会有这样的错误`error : is already bound to key path \"\" on object  rac`，原因是\n\n```objc\nRAC(self.viewModel,smsCode) = _phoneTF.rac_textSignal;\nRAC(self.viewModel,smsCode) = _codeTF.rac_textSignal;\n给smsCode只能绑定一次,绑给别的信号了，就不能再绑给另外一个信号了,所以绑定慎用，但可以subscribeNext啊\n```\n\n[RACSignal createSignal] 方式创建signal，只创建一次就OK\n\n```objc\n-(RACSignal *)validatePhoneSignal\n{\n    if (!_validatePhoneSignal) {\n        _validatePhoneSignal = [RACSignal createSignal:^RACDisposable *(id<RACSubscriber> subscriber) {\n            \n            if (isValid([[UserBaseInfo share] identityName]) && _idCode.length != 15 && _idCode.length != 18) {\n                [subscriber sendError:Error(errCode_toast, @\"请输入正确的15或18位身份证号\")];\n                return nil;\n            }\n            \n            [_service verifyCode:_smsCode idCard:_idCode finish:^(NSError *error) {\n                \n                if (error) {\n                    [subscriber sendError:error];\n                }else{\n                    \n                    [subscriber sendNext:@(YES)];\n                    [subscriber sendCompleted];\n                }\n            }];\n            \n            return nil;\n        }];\n    }\n    \n    return _validatePhoneSignal;\n}\n```\n\n[RACSubject subject] 创建的signal，每次都得创建\n\n```objc\n-(RACSignal *)rechargeSignal\n{    \n    RACReplaySubject *subject = [RACReplaySubject subject];\n    _rechargeSignal = [subject deliverOnMainThread];\n    \n    [self.submitSignal subscribeNext:^(NSNumber *x) {\n        \n        if (x.boolValue) {\n            [subject sendNext:@(YES)];\n            [subject sendCompleted];\n        }else{\n            [self.querySignal subscribeNext:^(id x) {\n                [subject sendNext:@(YES)];\n                [subject sendCompleted];\n            } error:^(NSError *error) {\n                [subject sendError:error];\n            }];\n        }\n        \n    } error:^(NSError *error) {\n        [subject sendError:error];\n    }];\n            \n    return _rechargeSignal;\n}\n```\n\n\n","slug":"ruan-jian-jia-gou-mvvm","published":1,"updated":"2020-06-23T06:08:27.689Z","_id":"ck4xzj9ae000888s6418ved7h","photos":[],"link":"","content":"<p>软件层次</p>\n<p><code>工具层</code>(utility，通用的工具，和具体的业务无关)</p>\n<p><code>网络层</code>(负责和server进行交互)</p>\n<a id=\"more\"></a>\n\n<h3 id=\"软件层次\"><a href=\"#软件层次\" class=\"headerlink\" title=\"软件层次\"></a>软件层次</h3><p><code>工具层</code>(utility，通用的工具，和具体的业务无关)</p>\n<p><code>网络层</code>(负责和server进行交互)</p>\n<p><code>数据持久层</code>(本地缓存、数据库)</p>\n<p><code>model层</code>(原始数据的类载体，比如来自网络或数据库的时间戳，不进行处数据理)</p>\n<p><code>逻辑层</code>(viewmodel层，软件业务功能逻辑相关，可以给每个界面增加个逻辑层，也可以给一个业务功能多个界面增加一个逻辑层)</p>\n<p><code>UI层</code>(显示的view)</p>\n<p><code>控制层</code>(controller是个大杂炖，上面那些层都在这个controller里面彼此交互)</p>\n<h3 id=\"软件框架\"><a href=\"#软件框架\" class=\"headerlink\" title=\"软件框架\"></a>软件框架</h3><h5 id=\"大多是MVC模式\"><a href=\"#大多是MVC模式\" class=\"headerlink\" title=\"大多是MVC模式\"></a>大多是<code>MVC</code>模式</h5><p><img src=\"/images/mvc.png\" alt=\"\"></p>\n<p>缺点：经常会导致C很臃肿，不易管理，所以出现了MVVM。</p>\n<h5 id=\"MVVM模式\"><a href=\"#MVVM模式\" class=\"headerlink\" title=\"MVVM模式\"></a>MVVM模式</h5><p><code>MVVM</code>就是将业务逻辑从controller里面抽出来单独生成一个类，降低耦合</p>\n<p>如果要想把业务逻辑从controller中抽取出来，以实现逻辑层(viewmodel)是逻辑的载体，那么逻辑层至少需要</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span> 实时的接受view里面各种数据源和事件源的变化(比如输入框、按钮等)</span><br><span class=\"line\"><span class=\"number\">2</span> 逻辑任务处理完成后将数据、动作输出至view/controller</span><br></pre></td></tr></table></figure>\n\n<p>要实现这两条，就需要<code>响应式编程</code>的概念。</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">函数响应式编程(Functional Reactive Programing : FRP)  :  面向数据流的变化传播(管道处理，比如过滤，类型映射，订阅，组合,属性绑定)</span><br></pre></td></tr></table></figure>\n\n<p>比如 excel 3-8数码管 订阅(公众号、日报),详见<a href=\"https://zh.wikipedia.org/wiki/%E5%93%8D%E5%BA%94%E5%BC%8F%E7%BC%96%E7%A8%8B\" target=\"_blank\" rel=\"noopener\">wiki</a></p>\n<p>数据流，逻辑流 这种概念思想很重要,和命令式编程大不一样</p>\n<p>由此，<code>Reactive Cocoa</code> 应运而生。</p>\n<p>Reactive Cocoa 可以承担以下任务</p>\n<p>1 数据流统一封装分发</p>\n<p><img src=\"/images/mvvm3.png\" alt=\"\"></p>\n<p>2 数据(双向)绑定</p>\n<p><img src=\"/images/mvvm1.png\" alt=\"\"></p>\n<p>3 动作事件通知</p>\n<p><img src=\"/images/mvvm2.png\" alt=\"\"></p>\n<p>代码实例</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// data binding</span></span><br><span class=\"line\">RAC(_viewModel,phone) = _phoneTF.rac_textSignal; <span class=\"comment\">// 这样可以(只能)观察到textField 源于键盘输入导致的值变化</span></span><br><span class=\"line\">RAC(_phoneTF,text) = [RACObserve(_viewModel, phone) distinctUntilChanged];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 清空_phoneTF</span></span><br><span class=\"line\">_viewModel.phone = <span class=\"string\">@\"\"</span>; <span class=\"comment\">// 代码实现</span></span><br><span class=\"line\"><span class=\"comment\">// _phoneTF.text = nil; // 这种方式不行</span></span><br></pre></td></tr></table></figure>\n\n<p>关于使用RAC(…)，有时会有这样的错误<code>error : is already bound to key path &quot;&quot; on object  rac</code>，原因是</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RAC(<span class=\"keyword\">self</span>.viewModel,smsCode) = _phoneTF.rac_textSignal;</span><br><span class=\"line\">RAC(<span class=\"keyword\">self</span>.viewModel,smsCode) = _codeTF.rac_textSignal;</span><br><span class=\"line\">给smsCode只能绑定一次,绑给别的信号了，就不能再绑给另外一个信号了,所以绑定慎用，但可以subscribeNext啊</span><br></pre></td></tr></table></figure>\n\n<p>[RACSignal createSignal] 方式创建signal，只创建一次就OK</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-(RACSignal *)validatePhoneSignal</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!_validatePhoneSignal) &#123;</span><br><span class=\"line\">        _validatePhoneSignal = [RACSignal createSignal:^RACDisposable *(<span class=\"keyword\">id</span>&lt;RACSubscriber&gt; subscriber) &#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span> (isValid([[UserBaseInfo share] identityName]) &amp;&amp; _idCode.length != <span class=\"number\">15</span> &amp;&amp; _idCode.length != <span class=\"number\">18</span>) &#123;</span><br><span class=\"line\">                [subscriber sendError:Error(errCode_toast, <span class=\"string\">@\"请输入正确的15或18位身份证号\"</span>)];</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">nil</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            [_service verifyCode:_smsCode idCard:_idCode finish:^(<span class=\"built_in\">NSError</span> *error) &#123;</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"keyword\">if</span> (error) &#123;</span><br><span class=\"line\">                    [subscriber sendError:error];</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    </span><br><span class=\"line\">                    [subscriber sendNext:@(<span class=\"literal\">YES</span>)];</span><br><span class=\"line\">                    [subscriber sendCompleted];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;];</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">nil</span>;</span><br><span class=\"line\">        &#125;];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> _validatePhoneSignal;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>[RACSubject subject] 创建的signal，每次都得创建</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-(RACSignal *)rechargeSignal</span><br><span class=\"line\">&#123;    </span><br><span class=\"line\">    RACReplaySubject *subject = [RACReplaySubject subject];</span><br><span class=\"line\">    _rechargeSignal = [subject deliverOnMainThread];</span><br><span class=\"line\">    </span><br><span class=\"line\">    [<span class=\"keyword\">self</span>.submitSignal subscribeNext:^(<span class=\"built_in\">NSNumber</span> *x) &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x.boolValue) &#123;</span><br><span class=\"line\">            [subject sendNext:@(<span class=\"literal\">YES</span>)];</span><br><span class=\"line\">            [subject sendCompleted];</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            [<span class=\"keyword\">self</span>.querySignal subscribeNext:^(<span class=\"keyword\">id</span> x) &#123;</span><br><span class=\"line\">                [subject sendNext:@(<span class=\"literal\">YES</span>)];</span><br><span class=\"line\">                [subject sendCompleted];</span><br><span class=\"line\">            &#125; error:^(<span class=\"built_in\">NSError</span> *error) &#123;</span><br><span class=\"line\">                [subject sendError:error];</span><br><span class=\"line\">            &#125;];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125; error:^(<span class=\"built_in\">NSError</span> *error) &#123;</span><br><span class=\"line\">        [subject sendError:error];</span><br><span class=\"line\">    &#125;];</span><br><span class=\"line\">            </span><br><span class=\"line\">    <span class=\"keyword\">return</span> _rechargeSignal;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{}},"excerpt":"<p>软件层次</p>\n<p><code>工具层</code>(utility，通用的工具，和具体的业务无关)</p>\n<p><code>网络层</code>(负责和server进行交互)</p>","more":"<h3 id=\"软件层次\"><a href=\"#软件层次\" class=\"headerlink\" title=\"软件层次\"></a>软件层次</h3><p><code>工具层</code>(utility，通用的工具，和具体的业务无关)</p>\n<p><code>网络层</code>(负责和server进行交互)</p>\n<p><code>数据持久层</code>(本地缓存、数据库)</p>\n<p><code>model层</code>(原始数据的类载体，比如来自网络或数据库的时间戳，不进行处数据理)</p>\n<p><code>逻辑层</code>(viewmodel层，软件业务功能逻辑相关，可以给每个界面增加个逻辑层，也可以给一个业务功能多个界面增加一个逻辑层)</p>\n<p><code>UI层</code>(显示的view)</p>\n<p><code>控制层</code>(controller是个大杂炖，上面那些层都在这个controller里面彼此交互)</p>\n<h3 id=\"软件框架\"><a href=\"#软件框架\" class=\"headerlink\" title=\"软件框架\"></a>软件框架</h3><h5 id=\"大多是MVC模式\"><a href=\"#大多是MVC模式\" class=\"headerlink\" title=\"大多是MVC模式\"></a>大多是<code>MVC</code>模式</h5><p><img src=\"/images/mvc.png\" alt=\"\"></p>\n<p>缺点：经常会导致C很臃肿，不易管理，所以出现了MVVM。</p>\n<h5 id=\"MVVM模式\"><a href=\"#MVVM模式\" class=\"headerlink\" title=\"MVVM模式\"></a>MVVM模式</h5><p><code>MVVM</code>就是将业务逻辑从controller里面抽出来单独生成一个类，降低耦合</p>\n<p>如果要想把业务逻辑从controller中抽取出来，以实现逻辑层(viewmodel)是逻辑的载体，那么逻辑层至少需要</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span> 实时的接受view里面各种数据源和事件源的变化(比如输入框、按钮等)</span><br><span class=\"line\"><span class=\"number\">2</span> 逻辑任务处理完成后将数据、动作输出至view/controller</span><br></pre></td></tr></table></figure>\n\n<p>要实现这两条，就需要<code>响应式编程</code>的概念。</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">函数响应式编程(Functional Reactive Programing : FRP)  :  面向数据流的变化传播(管道处理，比如过滤，类型映射，订阅，组合,属性绑定)</span><br></pre></td></tr></table></figure>\n\n<p>比如 excel 3-8数码管 订阅(公众号、日报),详见<a href=\"https://zh.wikipedia.org/wiki/%E5%93%8D%E5%BA%94%E5%BC%8F%E7%BC%96%E7%A8%8B\" target=\"_blank\" rel=\"noopener\">wiki</a></p>\n<p>数据流，逻辑流 这种概念思想很重要,和命令式编程大不一样</p>\n<p>由此，<code>Reactive Cocoa</code> 应运而生。</p>\n<p>Reactive Cocoa 可以承担以下任务</p>\n<p>1 数据流统一封装分发</p>\n<p><img src=\"/images/mvvm3.png\" alt=\"\"></p>\n<p>2 数据(双向)绑定</p>\n<p><img src=\"/images/mvvm1.png\" alt=\"\"></p>\n<p>3 动作事件通知</p>\n<p><img src=\"/images/mvvm2.png\" alt=\"\"></p>\n<p>代码实例</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// data binding</span></span><br><span class=\"line\">RAC(_viewModel,phone) = _phoneTF.rac_textSignal; <span class=\"comment\">// 这样可以(只能)观察到textField 源于键盘输入导致的值变化</span></span><br><span class=\"line\">RAC(_phoneTF,text) = [RACObserve(_viewModel, phone) distinctUntilChanged];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 清空_phoneTF</span></span><br><span class=\"line\">_viewModel.phone = <span class=\"string\">@\"\"</span>; <span class=\"comment\">// 代码实现</span></span><br><span class=\"line\"><span class=\"comment\">// _phoneTF.text = nil; // 这种方式不行</span></span><br></pre></td></tr></table></figure>\n\n<p>关于使用RAC(…)，有时会有这样的错误<code>error : is already bound to key path &quot;&quot; on object  rac</code>，原因是</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RAC(<span class=\"keyword\">self</span>.viewModel,smsCode) = _phoneTF.rac_textSignal;</span><br><span class=\"line\">RAC(<span class=\"keyword\">self</span>.viewModel,smsCode) = _codeTF.rac_textSignal;</span><br><span class=\"line\">给smsCode只能绑定一次,绑给别的信号了，就不能再绑给另外一个信号了,所以绑定慎用，但可以subscribeNext啊</span><br></pre></td></tr></table></figure>\n\n<p>[RACSignal createSignal] 方式创建signal，只创建一次就OK</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-(RACSignal *)validatePhoneSignal</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!_validatePhoneSignal) &#123;</span><br><span class=\"line\">        _validatePhoneSignal = [RACSignal createSignal:^RACDisposable *(<span class=\"keyword\">id</span>&lt;RACSubscriber&gt; subscriber) &#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span> (isValid([[UserBaseInfo share] identityName]) &amp;&amp; _idCode.length != <span class=\"number\">15</span> &amp;&amp; _idCode.length != <span class=\"number\">18</span>) &#123;</span><br><span class=\"line\">                [subscriber sendError:Error(errCode_toast, <span class=\"string\">@\"请输入正确的15或18位身份证号\"</span>)];</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">nil</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            [_service verifyCode:_smsCode idCard:_idCode finish:^(<span class=\"built_in\">NSError</span> *error) &#123;</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"keyword\">if</span> (error) &#123;</span><br><span class=\"line\">                    [subscriber sendError:error];</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    </span><br><span class=\"line\">                    [subscriber sendNext:@(<span class=\"literal\">YES</span>)];</span><br><span class=\"line\">                    [subscriber sendCompleted];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;];</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">nil</span>;</span><br><span class=\"line\">        &#125;];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> _validatePhoneSignal;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>[RACSubject subject] 创建的signal，每次都得创建</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-(RACSignal *)rechargeSignal</span><br><span class=\"line\">&#123;    </span><br><span class=\"line\">    RACReplaySubject *subject = [RACReplaySubject subject];</span><br><span class=\"line\">    _rechargeSignal = [subject deliverOnMainThread];</span><br><span class=\"line\">    </span><br><span class=\"line\">    [<span class=\"keyword\">self</span>.submitSignal subscribeNext:^(<span class=\"built_in\">NSNumber</span> *x) &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x.boolValue) &#123;</span><br><span class=\"line\">            [subject sendNext:@(<span class=\"literal\">YES</span>)];</span><br><span class=\"line\">            [subject sendCompleted];</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            [<span class=\"keyword\">self</span>.querySignal subscribeNext:^(<span class=\"keyword\">id</span> x) &#123;</span><br><span class=\"line\">                [subject sendNext:@(<span class=\"literal\">YES</span>)];</span><br><span class=\"line\">                [subject sendCompleted];</span><br><span class=\"line\">            &#125; error:^(<span class=\"built_in\">NSError</span> *error) &#123;</span><br><span class=\"line\">                [subject sendError:error];</span><br><span class=\"line\">            &#125;];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125; error:^(<span class=\"built_in\">NSError</span> *error) &#123;</span><br><span class=\"line\">        [subject sendError:error];</span><br><span class=\"line\">    &#125;];</span><br><span class=\"line\">            </span><br><span class=\"line\">    <span class=\"keyword\">return</span> _rechargeSignal;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"multi-thread","date":"2016-03-21T04:44:00.000Z","comments":1,"_content":"\n线程是CPU分配和调度的基本单位，操作系统控制CPU以时间片轮流(轮转的方式)切换(执行每一个线程)形成的，由于CPU运行很\n\n<!-- more -->\n\n# Multi-Thread 放大理顺逻辑流、线程流\n\n## 线程的产生方式\n\n线程是CPU分配和调度的基本单位，操作系统控制CPU以时间片轮流(轮转的方式)切换(执行每一个线程)形成的，由于CPU运行很快(工作可以分为5个阶段：取指令、指令译码、执行指令、访存取数和结果写回)，时间间隔小到毫秒，给用户一种同时运行的假象，线程是程序设计的逻辑层概念\n\n![](/images/thread1.png)\n\n## 线程的组成结构(实现方式)\n\n一个标准的线程由线程ID(面向对象上就是线程的名字)、当前指令指针(PC)、寄存器、堆栈组成\n\n## 线程的分类\n\n主线程(对界面UI操作的task应该在主线程)、子线程\n\n## 线程的生命周期(运行状态及触发)\n\nnew -> runable (ready to run) -> running -> dead (finished/cancel)中间可能会有过渡态 : wait / block / sleep\n\n![](/images/thread2.png)\n\n```objc\nif([thread isCanceled]){\n       [thread exit]; //  The cancel method only informs the thread that it is cancelled,It's then the responsibility of the thread itself to check this and exit\n}\n```\n\n## 线程安全(线程并发)\n\n一个时间点内，某个属性、某个方法、某段代码只能有一个线程对其操作（添、删、改、查、访问），这也是单一处理原则,检测方法是否同时被多个线程执行，在方法里面打印`[NSThread currentThread]`即可\n如何保证线程安全,或者说控制线程并发 1 、线程锁(也叫互斥所mutex-lock，厕所例子)  2、优化结构：错开调用时间、两个线程间进行数据传递或归为一个线程调用\n\n线程锁 ： NSLock系列 、 @synchronized 、 pthread 、dispatch_semaphore(信号量)\n\n## 线程的优先级\n\n## 线程间的运行机制\n\nserial or concurrent ( 多个线程并发执行(线程与线程之间) )\nsynchronous and asynchronous\n异步是任务并发执行(执行到某一方法，将方法里面的task submit到子线程，方法立即返回，程序继续执行下一行)\n同步是任务顺序执行(执行完某一方法并返回值后，执行下一行)\n多线程是异步的实现方式\n\n## 线程间的通信(communication)\n\nperformSelector:onThread:withObject:waitUntilDone:  only schedules the selector to run in the default run loop mode, if the run loop is in another mode ,it won`t run until the run loop switches back to the default mode, so you can get this :  performSelector:onThread:withObject:waitUntilDone:modes:\n\ndispatch_async(dispatch_get_main_queue(),^{…}) will run the block as soon as the main run loop returns control flow back to the event loop,it doesn`t care about modes\n\n## iOS 中线程PK ( NSObject vs NSThread vs NSOperation+Queue vs GCD )\n\n`在Xcode里面点击进去，看官方language programing` 呵呵，这是最原始的最全面的\n\n丰富度 NSObject -> NSThread -> NSOperation(NSOperationQueue)\n\nNSObject里面的 performSelectorInBackground 是最原始的开启子线程方法,制造了一堆不受管理的线程，非常不建议使用\n\nNSThread对单个线程的生命周期状态需要手动控制，并可以做到精细化管理和查看，但线程间的问题解决不了，比如线程依赖，线程间数据同步(多线程访问同一个内存地址导致的互斥同步，这种情况需要加锁)\n\nNSOperation 同样具有NSThread的优势，而queue可以做到对多个线程的并发执行进行(线程间)控制，比如线程间同步\n\nGCD对多个线程并发执行的控制很强(利用 once 、semaphore、group、queue、object 、监听source)，但对单个线程的生命周期状态控制的比较粗糙，几乎没有，block提交后几乎做不了什么别的，也没法查看线程的状态，也没法撤销当前线程，适合一些简单的task\n\n![](/images/thread3.png)\n\n## thread(线程) & process(进程) & program(程序)\n\n进程是操作系统进行资源分配和调度的一个独立单位\n进程是由程序正文段（text）、用户数据段（user segment）、系统数据段（system　segment）共同组成的一个完整的执行环境\n\n![](/images/thread4.png)\n\n**（1）正文段（text）：**存放被执行的机器指令。这个段是只读的（所以，在这里不能写自己能修改的代码），它允许系统中正在运行的两个或多个进程之间能够共享这一代码。例如，有几个用户都在使用文本编辑器，在内存中仅需要该程序指令的一个副本，他们全都共享这一副本。\n\n**（2）用户数据段（user segment）：**存放进程在执行时直接进行操作的所有数据，包括进程使用的全部变量在内。显然，这里包含的信息可以被改变。虽然进程之间可以共享正文段，但是每个进程需要有它自己的专用用户数据段。例如同时编辑文本的用户，虽然运行着同样的程序__编辑器，但是每个用户都有不同的数据：正在编辑的文本。\n\n**（3）系统数据段（system segment）：**该段有效地存放程序运行的环境(一些控制信息)。事实上，这正是程序和进程的区别所在。如前所述，程序是由一组指令和数据组成的静态事物，它们是进程最初使用的正文段和用户数据段。作为动态事物，进程是正文段、用户数据段和系统数据段的信息的交叉综合体，其中系统数据段是进程实体最重要的一部分，之所以说它有效地存放程序运行的环境，是因为这一部分存放有进程的控制信息。系统中有许多进程，操作系统要管理它们、调度它们运行，就是通过这些控制信息。Linux为每个进程建立了task_struct数据结构来容纳这些控制信息\n\n   程序经过编译、链接后生成一个可执行文件，一个机器代码指令和数据的集合，一个静态的实体，存储在磁盘上的一个可执行映像中。程序代表期望完成某工作的计划和步骤，它还浮在纸面上等待具体实现，而具体实现是由进程来完成的，进程可以认为是运行中的程序，进行中的程序，程序的一次执行。\n   程序装入内存后，在指令指针寄存器的控制下，不断的将指令取至CPU运行，同时还会产生一些额外数据(包括程序中各种指令和数据，还有一些额外数据，比如说寄存器的值、用来保存临时数据（例如传递给某个函数的参数、函数的返回地址、保存变量等）的堆栈（包括程序堆栈和系统堆栈）、被打开文件的数量及输入输出设备的状态等等。这个执行环境的动态变化表征程序的运行)，这个完整的执行环境称为进程(一个动态的实体，代表程序的执行过程，它随着程序中指令的执行而不断地变化),参考链接http://oss.org.cn/kernel-book/ch04/4.1.htm\n   \n\n\n","source":"_posts/multi-thread.md","raw":"---\nlayout: post\ntitle: \"multi-thread\"\ndate: 2016-03-21 12:44:00 +0800\ncomments: true\ntags:\n- 线程安全\n- 线程的分类\ncategories:\n- [多线程]\n- [OC]\n---\n\n线程是CPU分配和调度的基本单位，操作系统控制CPU以时间片轮流(轮转的方式)切换(执行每一个线程)形成的，由于CPU运行很\n\n<!-- more -->\n\n# Multi-Thread 放大理顺逻辑流、线程流\n\n## 线程的产生方式\n\n线程是CPU分配和调度的基本单位，操作系统控制CPU以时间片轮流(轮转的方式)切换(执行每一个线程)形成的，由于CPU运行很快(工作可以分为5个阶段：取指令、指令译码、执行指令、访存取数和结果写回)，时间间隔小到毫秒，给用户一种同时运行的假象，线程是程序设计的逻辑层概念\n\n![](/images/thread1.png)\n\n## 线程的组成结构(实现方式)\n\n一个标准的线程由线程ID(面向对象上就是线程的名字)、当前指令指针(PC)、寄存器、堆栈组成\n\n## 线程的分类\n\n主线程(对界面UI操作的task应该在主线程)、子线程\n\n## 线程的生命周期(运行状态及触发)\n\nnew -> runable (ready to run) -> running -> dead (finished/cancel)中间可能会有过渡态 : wait / block / sleep\n\n![](/images/thread2.png)\n\n```objc\nif([thread isCanceled]){\n       [thread exit]; //  The cancel method only informs the thread that it is cancelled,It's then the responsibility of the thread itself to check this and exit\n}\n```\n\n## 线程安全(线程并发)\n\n一个时间点内，某个属性、某个方法、某段代码只能有一个线程对其操作（添、删、改、查、访问），这也是单一处理原则,检测方法是否同时被多个线程执行，在方法里面打印`[NSThread currentThread]`即可\n如何保证线程安全,或者说控制线程并发 1 、线程锁(也叫互斥所mutex-lock，厕所例子)  2、优化结构：错开调用时间、两个线程间进行数据传递或归为一个线程调用\n\n线程锁 ： NSLock系列 、 @synchronized 、 pthread 、dispatch_semaphore(信号量)\n\n## 线程的优先级\n\n## 线程间的运行机制\n\nserial or concurrent ( 多个线程并发执行(线程与线程之间) )\nsynchronous and asynchronous\n异步是任务并发执行(执行到某一方法，将方法里面的task submit到子线程，方法立即返回，程序继续执行下一行)\n同步是任务顺序执行(执行完某一方法并返回值后，执行下一行)\n多线程是异步的实现方式\n\n## 线程间的通信(communication)\n\nperformSelector:onThread:withObject:waitUntilDone:  only schedules the selector to run in the default run loop mode, if the run loop is in another mode ,it won`t run until the run loop switches back to the default mode, so you can get this :  performSelector:onThread:withObject:waitUntilDone:modes:\n\ndispatch_async(dispatch_get_main_queue(),^{…}) will run the block as soon as the main run loop returns control flow back to the event loop,it doesn`t care about modes\n\n## iOS 中线程PK ( NSObject vs NSThread vs NSOperation+Queue vs GCD )\n\n`在Xcode里面点击进去，看官方language programing` 呵呵，这是最原始的最全面的\n\n丰富度 NSObject -> NSThread -> NSOperation(NSOperationQueue)\n\nNSObject里面的 performSelectorInBackground 是最原始的开启子线程方法,制造了一堆不受管理的线程，非常不建议使用\n\nNSThread对单个线程的生命周期状态需要手动控制，并可以做到精细化管理和查看，但线程间的问题解决不了，比如线程依赖，线程间数据同步(多线程访问同一个内存地址导致的互斥同步，这种情况需要加锁)\n\nNSOperation 同样具有NSThread的优势，而queue可以做到对多个线程的并发执行进行(线程间)控制，比如线程间同步\n\nGCD对多个线程并发执行的控制很强(利用 once 、semaphore、group、queue、object 、监听source)，但对单个线程的生命周期状态控制的比较粗糙，几乎没有，block提交后几乎做不了什么别的，也没法查看线程的状态，也没法撤销当前线程，适合一些简单的task\n\n![](/images/thread3.png)\n\n## thread(线程) & process(进程) & program(程序)\n\n进程是操作系统进行资源分配和调度的一个独立单位\n进程是由程序正文段（text）、用户数据段（user segment）、系统数据段（system　segment）共同组成的一个完整的执行环境\n\n![](/images/thread4.png)\n\n**（1）正文段（text）：**存放被执行的机器指令。这个段是只读的（所以，在这里不能写自己能修改的代码），它允许系统中正在运行的两个或多个进程之间能够共享这一代码。例如，有几个用户都在使用文本编辑器，在内存中仅需要该程序指令的一个副本，他们全都共享这一副本。\n\n**（2）用户数据段（user segment）：**存放进程在执行时直接进行操作的所有数据，包括进程使用的全部变量在内。显然，这里包含的信息可以被改变。虽然进程之间可以共享正文段，但是每个进程需要有它自己的专用用户数据段。例如同时编辑文本的用户，虽然运行着同样的程序__编辑器，但是每个用户都有不同的数据：正在编辑的文本。\n\n**（3）系统数据段（system segment）：**该段有效地存放程序运行的环境(一些控制信息)。事实上，这正是程序和进程的区别所在。如前所述，程序是由一组指令和数据组成的静态事物，它们是进程最初使用的正文段和用户数据段。作为动态事物，进程是正文段、用户数据段和系统数据段的信息的交叉综合体，其中系统数据段是进程实体最重要的一部分，之所以说它有效地存放程序运行的环境，是因为这一部分存放有进程的控制信息。系统中有许多进程，操作系统要管理它们、调度它们运行，就是通过这些控制信息。Linux为每个进程建立了task_struct数据结构来容纳这些控制信息\n\n   程序经过编译、链接后生成一个可执行文件，一个机器代码指令和数据的集合，一个静态的实体，存储在磁盘上的一个可执行映像中。程序代表期望完成某工作的计划和步骤，它还浮在纸面上等待具体实现，而具体实现是由进程来完成的，进程可以认为是运行中的程序，进行中的程序，程序的一次执行。\n   程序装入内存后，在指令指针寄存器的控制下，不断的将指令取至CPU运行，同时还会产生一些额外数据(包括程序中各种指令和数据，还有一些额外数据，比如说寄存器的值、用来保存临时数据（例如传递给某个函数的参数、函数的返回地址、保存变量等）的堆栈（包括程序堆栈和系统堆栈）、被打开文件的数量及输入输出设备的状态等等。这个执行环境的动态变化表征程序的运行)，这个完整的执行环境称为进程(一个动态的实体，代表程序的执行过程，它随着程序中指令的执行而不断地变化),参考链接http://oss.org.cn/kernel-book/ch04/4.1.htm\n   \n\n\n","slug":"multi-thread","published":1,"updated":"2020-06-23T06:08:53.934Z","_id":"ck4xzj9af000988s65jb41cl0","photos":[],"link":"","content":"<p>线程是CPU分配和调度的基本单位，操作系统控制CPU以时间片轮流(轮转的方式)切换(执行每一个线程)形成的，由于CPU运行很</p>\n<a id=\"more\"></a>\n\n<h1 id=\"Multi-Thread-放大理顺逻辑流、线程流\"><a href=\"#Multi-Thread-放大理顺逻辑流、线程流\" class=\"headerlink\" title=\"Multi-Thread 放大理顺逻辑流、线程流\"></a>Multi-Thread 放大理顺逻辑流、线程流</h1><h2 id=\"线程的产生方式\"><a href=\"#线程的产生方式\" class=\"headerlink\" title=\"线程的产生方式\"></a>线程的产生方式</h2><p>线程是CPU分配和调度的基本单位，操作系统控制CPU以时间片轮流(轮转的方式)切换(执行每一个线程)形成的，由于CPU运行很快(工作可以分为5个阶段：取指令、指令译码、执行指令、访存取数和结果写回)，时间间隔小到毫秒，给用户一种同时运行的假象，线程是程序设计的逻辑层概念</p>\n<p><img src=\"/images/thread1.png\" alt=\"\"></p>\n<h2 id=\"线程的组成结构-实现方式\"><a href=\"#线程的组成结构-实现方式\" class=\"headerlink\" title=\"线程的组成结构(实现方式)\"></a>线程的组成结构(实现方式)</h2><p>一个标准的线程由线程ID(面向对象上就是线程的名字)、当前指令指针(PC)、寄存器、堆栈组成</p>\n<h2 id=\"线程的分类\"><a href=\"#线程的分类\" class=\"headerlink\" title=\"线程的分类\"></a>线程的分类</h2><p>主线程(对界面UI操作的task应该在主线程)、子线程</p>\n<h2 id=\"线程的生命周期-运行状态及触发\"><a href=\"#线程的生命周期-运行状态及触发\" class=\"headerlink\" title=\"线程的生命周期(运行状态及触发)\"></a>线程的生命周期(运行状态及触发)</h2><p>new -&gt; runable (ready to run) -&gt; running -&gt; dead (finished/cancel)中间可能会有过渡态 : wait / block / sleep</p>\n<p><img src=\"/images/thread2.png\" alt=\"\"></p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>([thread isCanceled])&#123;</span><br><span class=\"line\">       [thread exit]; <span class=\"comment\">//  The cancel method only informs the thread that it is cancelled,It's then the responsibility of the thread itself to check this and exit</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"线程安全-线程并发\"><a href=\"#线程安全-线程并发\" class=\"headerlink\" title=\"线程安全(线程并发)\"></a>线程安全(线程并发)</h2><p>一个时间点内，某个属性、某个方法、某段代码只能有一个线程对其操作（添、删、改、查、访问），这也是单一处理原则,检测方法是否同时被多个线程执行，在方法里面打印<code>[NSThread currentThread]</code>即可<br>如何保证线程安全,或者说控制线程并发 1 、线程锁(也叫互斥所mutex-lock，厕所例子)  2、优化结构：错开调用时间、两个线程间进行数据传递或归为一个线程调用</p>\n<p>线程锁 ： NSLock系列 、 @synchronized 、 pthread 、dispatch_semaphore(信号量)</p>\n<h2 id=\"线程的优先级\"><a href=\"#线程的优先级\" class=\"headerlink\" title=\"线程的优先级\"></a>线程的优先级</h2><h2 id=\"线程间的运行机制\"><a href=\"#线程间的运行机制\" class=\"headerlink\" title=\"线程间的运行机制\"></a>线程间的运行机制</h2><p>serial or concurrent ( 多个线程并发执行(线程与线程之间) )<br>synchronous and asynchronous<br>异步是任务并发执行(执行到某一方法，将方法里面的task submit到子线程，方法立即返回，程序继续执行下一行)<br>同步是任务顺序执行(执行完某一方法并返回值后，执行下一行)<br>多线程是异步的实现方式</p>\n<h2 id=\"线程间的通信-communication\"><a href=\"#线程间的通信-communication\" class=\"headerlink\" title=\"线程间的通信(communication)\"></a>线程间的通信(communication)</h2><p>performSelector:onThread:withObject:waitUntilDone:  only schedules the selector to run in the default run loop mode, if the run loop is in another mode ,it won`t run until the run loop switches back to the default mode, so you can get this :  performSelector:onThread:withObject:waitUntilDone:modes:</p>\n<p>dispatch_async(dispatch_get_main_queue(),^{…}) will run the block as soon as the main run loop returns control flow back to the event loop,it doesn`t care about modes</p>\n<h2 id=\"iOS-中线程PK-NSObject-vs-NSThread-vs-NSOperation-Queue-vs-GCD\"><a href=\"#iOS-中线程PK-NSObject-vs-NSThread-vs-NSOperation-Queue-vs-GCD\" class=\"headerlink\" title=\"iOS 中线程PK ( NSObject vs NSThread vs NSOperation+Queue vs GCD )\"></a>iOS 中线程PK ( NSObject vs NSThread vs NSOperation+Queue vs GCD )</h2><p><code>在Xcode里面点击进去，看官方language programing</code> 呵呵，这是最原始的最全面的</p>\n<p>丰富度 NSObject -&gt; NSThread -&gt; NSOperation(NSOperationQueue)</p>\n<p>NSObject里面的 performSelectorInBackground 是最原始的开启子线程方法,制造了一堆不受管理的线程，非常不建议使用</p>\n<p>NSThread对单个线程的生命周期状态需要手动控制，并可以做到精细化管理和查看，但线程间的问题解决不了，比如线程依赖，线程间数据同步(多线程访问同一个内存地址导致的互斥同步，这种情况需要加锁)</p>\n<p>NSOperation 同样具有NSThread的优势，而queue可以做到对多个线程的并发执行进行(线程间)控制，比如线程间同步</p>\n<p>GCD对多个线程并发执行的控制很强(利用 once 、semaphore、group、queue、object 、监听source)，但对单个线程的生命周期状态控制的比较粗糙，几乎没有，block提交后几乎做不了什么别的，也没法查看线程的状态，也没法撤销当前线程，适合一些简单的task</p>\n<p><img src=\"/images/thread3.png\" alt=\"\"></p>\n<h2 id=\"thread-线程-amp-process-进程-amp-program-程序\"><a href=\"#thread-线程-amp-process-进程-amp-program-程序\" class=\"headerlink\" title=\"thread(线程) &amp; process(进程) &amp; program(程序)\"></a>thread(线程) &amp; process(进程) &amp; program(程序)</h2><p>进程是操作系统进行资源分配和调度的一个独立单位<br>进程是由程序正文段（text）、用户数据段（user segment）、系统数据段（system　segment）共同组成的一个完整的执行环境</p>\n<p><img src=\"/images/thread4.png\" alt=\"\"></p>\n<p><strong>（1）正文段（text）：</strong>存放被执行的机器指令。这个段是只读的（所以，在这里不能写自己能修改的代码），它允许系统中正在运行的两个或多个进程之间能够共享这一代码。例如，有几个用户都在使用文本编辑器，在内存中仅需要该程序指令的一个副本，他们全都共享这一副本。</p>\n<p><strong>（2）用户数据段（user segment）：</strong>存放进程在执行时直接进行操作的所有数据，包括进程使用的全部变量在内。显然，这里包含的信息可以被改变。虽然进程之间可以共享正文段，但是每个进程需要有它自己的专用用户数据段。例如同时编辑文本的用户，虽然运行着同样的程序__编辑器，但是每个用户都有不同的数据：正在编辑的文本。</p>\n<p><strong>（3）系统数据段（system segment）：</strong>该段有效地存放程序运行的环境(一些控制信息)。事实上，这正是程序和进程的区别所在。如前所述，程序是由一组指令和数据组成的静态事物，它们是进程最初使用的正文段和用户数据段。作为动态事物，进程是正文段、用户数据段和系统数据段的信息的交叉综合体，其中系统数据段是进程实体最重要的一部分，之所以说它有效地存放程序运行的环境，是因为这一部分存放有进程的控制信息。系统中有许多进程，操作系统要管理它们、调度它们运行，就是通过这些控制信息。Linux为每个进程建立了task_struct数据结构来容纳这些控制信息</p>\n<p>   程序经过编译、链接后生成一个可执行文件，一个机器代码指令和数据的集合，一个静态的实体，存储在磁盘上的一个可执行映像中。程序代表期望完成某工作的计划和步骤，它还浮在纸面上等待具体实现，而具体实现是由进程来完成的，进程可以认为是运行中的程序，进行中的程序，程序的一次执行。<br>   程序装入内存后，在指令指针寄存器的控制下，不断的将指令取至CPU运行，同时还会产生一些额外数据(包括程序中各种指令和数据，还有一些额外数据，比如说寄存器的值、用来保存临时数据（例如传递给某个函数的参数、函数的返回地址、保存变量等）的堆栈（包括程序堆栈和系统堆栈）、被打开文件的数量及输入输出设备的状态等等。这个执行环境的动态变化表征程序的运行)，这个完整的执行环境称为进程(一个动态的实体，代表程序的执行过程，它随着程序中指令的执行而不断地变化),参考链接<a href=\"http://oss.org.cn/kernel-book/ch04/4.1.htm\" target=\"_blank\" rel=\"noopener\">http://oss.org.cn/kernel-book/ch04/4.1.htm</a></p>\n","site":{"data":{}},"excerpt":"<p>线程是CPU分配和调度的基本单位，操作系统控制CPU以时间片轮流(轮转的方式)切换(执行每一个线程)形成的，由于CPU运行很</p>","more":"<h1 id=\"Multi-Thread-放大理顺逻辑流、线程流\"><a href=\"#Multi-Thread-放大理顺逻辑流、线程流\" class=\"headerlink\" title=\"Multi-Thread 放大理顺逻辑流、线程流\"></a>Multi-Thread 放大理顺逻辑流、线程流</h1><h2 id=\"线程的产生方式\"><a href=\"#线程的产生方式\" class=\"headerlink\" title=\"线程的产生方式\"></a>线程的产生方式</h2><p>线程是CPU分配和调度的基本单位，操作系统控制CPU以时间片轮流(轮转的方式)切换(执行每一个线程)形成的，由于CPU运行很快(工作可以分为5个阶段：取指令、指令译码、执行指令、访存取数和结果写回)，时间间隔小到毫秒，给用户一种同时运行的假象，线程是程序设计的逻辑层概念</p>\n<p><img src=\"/images/thread1.png\" alt=\"\"></p>\n<h2 id=\"线程的组成结构-实现方式\"><a href=\"#线程的组成结构-实现方式\" class=\"headerlink\" title=\"线程的组成结构(实现方式)\"></a>线程的组成结构(实现方式)</h2><p>一个标准的线程由线程ID(面向对象上就是线程的名字)、当前指令指针(PC)、寄存器、堆栈组成</p>\n<h2 id=\"线程的分类\"><a href=\"#线程的分类\" class=\"headerlink\" title=\"线程的分类\"></a>线程的分类</h2><p>主线程(对界面UI操作的task应该在主线程)、子线程</p>\n<h2 id=\"线程的生命周期-运行状态及触发\"><a href=\"#线程的生命周期-运行状态及触发\" class=\"headerlink\" title=\"线程的生命周期(运行状态及触发)\"></a>线程的生命周期(运行状态及触发)</h2><p>new -&gt; runable (ready to run) -&gt; running -&gt; dead (finished/cancel)中间可能会有过渡态 : wait / block / sleep</p>\n<p><img src=\"/images/thread2.png\" alt=\"\"></p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>([thread isCanceled])&#123;</span><br><span class=\"line\">       [thread exit]; <span class=\"comment\">//  The cancel method only informs the thread that it is cancelled,It's then the responsibility of the thread itself to check this and exit</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"线程安全-线程并发\"><a href=\"#线程安全-线程并发\" class=\"headerlink\" title=\"线程安全(线程并发)\"></a>线程安全(线程并发)</h2><p>一个时间点内，某个属性、某个方法、某段代码只能有一个线程对其操作（添、删、改、查、访问），这也是单一处理原则,检测方法是否同时被多个线程执行，在方法里面打印<code>[NSThread currentThread]</code>即可<br>如何保证线程安全,或者说控制线程并发 1 、线程锁(也叫互斥所mutex-lock，厕所例子)  2、优化结构：错开调用时间、两个线程间进行数据传递或归为一个线程调用</p>\n<p>线程锁 ： NSLock系列 、 @synchronized 、 pthread 、dispatch_semaphore(信号量)</p>\n<h2 id=\"线程的优先级\"><a href=\"#线程的优先级\" class=\"headerlink\" title=\"线程的优先级\"></a>线程的优先级</h2><h2 id=\"线程间的运行机制\"><a href=\"#线程间的运行机制\" class=\"headerlink\" title=\"线程间的运行机制\"></a>线程间的运行机制</h2><p>serial or concurrent ( 多个线程并发执行(线程与线程之间) )<br>synchronous and asynchronous<br>异步是任务并发执行(执行到某一方法，将方法里面的task submit到子线程，方法立即返回，程序继续执行下一行)<br>同步是任务顺序执行(执行完某一方法并返回值后，执行下一行)<br>多线程是异步的实现方式</p>\n<h2 id=\"线程间的通信-communication\"><a href=\"#线程间的通信-communication\" class=\"headerlink\" title=\"线程间的通信(communication)\"></a>线程间的通信(communication)</h2><p>performSelector:onThread:withObject:waitUntilDone:  only schedules the selector to run in the default run loop mode, if the run loop is in another mode ,it won`t run until the run loop switches back to the default mode, so you can get this :  performSelector:onThread:withObject:waitUntilDone:modes:</p>\n<p>dispatch_async(dispatch_get_main_queue(),^{…}) will run the block as soon as the main run loop returns control flow back to the event loop,it doesn`t care about modes</p>\n<h2 id=\"iOS-中线程PK-NSObject-vs-NSThread-vs-NSOperation-Queue-vs-GCD\"><a href=\"#iOS-中线程PK-NSObject-vs-NSThread-vs-NSOperation-Queue-vs-GCD\" class=\"headerlink\" title=\"iOS 中线程PK ( NSObject vs NSThread vs NSOperation+Queue vs GCD )\"></a>iOS 中线程PK ( NSObject vs NSThread vs NSOperation+Queue vs GCD )</h2><p><code>在Xcode里面点击进去，看官方language programing</code> 呵呵，这是最原始的最全面的</p>\n<p>丰富度 NSObject -&gt; NSThread -&gt; NSOperation(NSOperationQueue)</p>\n<p>NSObject里面的 performSelectorInBackground 是最原始的开启子线程方法,制造了一堆不受管理的线程，非常不建议使用</p>\n<p>NSThread对单个线程的生命周期状态需要手动控制，并可以做到精细化管理和查看，但线程间的问题解决不了，比如线程依赖，线程间数据同步(多线程访问同一个内存地址导致的互斥同步，这种情况需要加锁)</p>\n<p>NSOperation 同样具有NSThread的优势，而queue可以做到对多个线程的并发执行进行(线程间)控制，比如线程间同步</p>\n<p>GCD对多个线程并发执行的控制很强(利用 once 、semaphore、group、queue、object 、监听source)，但对单个线程的生命周期状态控制的比较粗糙，几乎没有，block提交后几乎做不了什么别的，也没法查看线程的状态，也没法撤销当前线程，适合一些简单的task</p>\n<p><img src=\"/images/thread3.png\" alt=\"\"></p>\n<h2 id=\"thread-线程-amp-process-进程-amp-program-程序\"><a href=\"#thread-线程-amp-process-进程-amp-program-程序\" class=\"headerlink\" title=\"thread(线程) &amp; process(进程) &amp; program(程序)\"></a>thread(线程) &amp; process(进程) &amp; program(程序)</h2><p>进程是操作系统进行资源分配和调度的一个独立单位<br>进程是由程序正文段（text）、用户数据段（user segment）、系统数据段（system　segment）共同组成的一个完整的执行环境</p>\n<p><img src=\"/images/thread4.png\" alt=\"\"></p>\n<p><strong>（1）正文段（text）：</strong>存放被执行的机器指令。这个段是只读的（所以，在这里不能写自己能修改的代码），它允许系统中正在运行的两个或多个进程之间能够共享这一代码。例如，有几个用户都在使用文本编辑器，在内存中仅需要该程序指令的一个副本，他们全都共享这一副本。</p>\n<p><strong>（2）用户数据段（user segment）：</strong>存放进程在执行时直接进行操作的所有数据，包括进程使用的全部变量在内。显然，这里包含的信息可以被改变。虽然进程之间可以共享正文段，但是每个进程需要有它自己的专用用户数据段。例如同时编辑文本的用户，虽然运行着同样的程序__编辑器，但是每个用户都有不同的数据：正在编辑的文本。</p>\n<p><strong>（3）系统数据段（system segment）：</strong>该段有效地存放程序运行的环境(一些控制信息)。事实上，这正是程序和进程的区别所在。如前所述，程序是由一组指令和数据组成的静态事物，它们是进程最初使用的正文段和用户数据段。作为动态事物，进程是正文段、用户数据段和系统数据段的信息的交叉综合体，其中系统数据段是进程实体最重要的一部分，之所以说它有效地存放程序运行的环境，是因为这一部分存放有进程的控制信息。系统中有许多进程，操作系统要管理它们、调度它们运行，就是通过这些控制信息。Linux为每个进程建立了task_struct数据结构来容纳这些控制信息</p>\n<p>   程序经过编译、链接后生成一个可执行文件，一个机器代码指令和数据的集合，一个静态的实体，存储在磁盘上的一个可执行映像中。程序代表期望完成某工作的计划和步骤，它还浮在纸面上等待具体实现，而具体实现是由进程来完成的，进程可以认为是运行中的程序，进行中的程序，程序的一次执行。<br>   程序装入内存后，在指令指针寄存器的控制下，不断的将指令取至CPU运行，同时还会产生一些额外数据(包括程序中各种指令和数据，还有一些额外数据，比如说寄存器的值、用来保存临时数据（例如传递给某个函数的参数、函数的返回地址、保存变量等）的堆栈（包括程序堆栈和系统堆栈）、被打开文件的数量及输入输出设备的状态等等。这个执行环境的动态变化表征程序的运行)，这个完整的执行环境称为进程(一个动态的实体，代表程序的执行过程，它随着程序中指令的执行而不断地变化),参考链接<a href=\"http://oss.org.cn/kernel-book/ch04/4.1.htm\" target=\"_blank\" rel=\"noopener\">http://oss.org.cn/kernel-book/ch04/4.1.htm</a></p>"},{"layout":"post","title":"runtime运行时之变量(variable)","date":"2016-02-29T10:55:56.000Z","comments":1,"_content":"\nruntime使用之variable\n![](/images/runtime_variable1.png)\n\n<!-- more -->\n\n### runtime使用之variable\n\n![](/images/runtime_variable1.png)\n\n![](/images/runtime_variable2.png)\n\nproperty\n\n![](/images/runtime_variable3.png)\n\nhttps://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/ObjCRuntimeGuide/Articles/ocrtPropertyIntrospection.html#//apple_ref/doc/uid/TP40008048-CH101\n\n每一个  objc_property_t指向的结构体里面 都包含一个 attributions的成员变量，\n比如  @property (nonatomic,weak) IBOutlet UITextField\n通过 property_getAttributes 获取到，它的attributions是  T@\"UITextField\",W,N,V_tf\n而通过 property_copyAttributeList 获取到以下图片\n\n![](/images/runtime_variable4.png)\n\n![](/images/runtime_variable5.png)\n","source":"_posts/runtimeyun-xing-shi-zhi-bian-liang.md","raw":"---\nlayout: post\ntitle: \"runtime运行时之变量(variable)\"\ndate: 2016-02-29 18:55:56 +0800\ncomments: true\ntags:\n- [variable]\ncategories:\n- [runtime]\n- [OC]\n---\n\nruntime使用之variable\n![](/images/runtime_variable1.png)\n\n<!-- more -->\n\n### runtime使用之variable\n\n![](/images/runtime_variable1.png)\n\n![](/images/runtime_variable2.png)\n\nproperty\n\n![](/images/runtime_variable3.png)\n\nhttps://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/ObjCRuntimeGuide/Articles/ocrtPropertyIntrospection.html#//apple_ref/doc/uid/TP40008048-CH101\n\n每一个  objc_property_t指向的结构体里面 都包含一个 attributions的成员变量，\n比如  @property (nonatomic,weak) IBOutlet UITextField\n通过 property_getAttributes 获取到，它的attributions是  T@\"UITextField\",W,N,V_tf\n而通过 property_copyAttributeList 获取到以下图片\n\n![](/images/runtime_variable4.png)\n\n![](/images/runtime_variable5.png)\n","slug":"runtimeyun-xing-shi-zhi-bian-liang","published":1,"updated":"2020-01-03T06:30:29.257Z","photos":[],"link":"","_id":"ck4xzj9ag000c88s60t88eq65","content":"<p>runtime使用之variable<br><img src=\"/images/runtime_variable1.png\" alt=\"\"></p>\n<a id=\"more\"></a>\n\n<h3 id=\"runtime使用之variable\"><a href=\"#runtime使用之variable\" class=\"headerlink\" title=\"runtime使用之variable\"></a>runtime使用之variable</h3><p><img src=\"/images/runtime_variable1.png\" alt=\"\"></p>\n<p><img src=\"/images/runtime_variable2.png\" alt=\"\"></p>\n<p>property</p>\n<p><img src=\"/images/runtime_variable3.png\" alt=\"\"></p>\n<p><a href=\"https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/ObjCRuntimeGuide/Articles/ocrtPropertyIntrospection.html#//apple_ref/doc/uid/TP40008048-CH101\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/ObjCRuntimeGuide/Articles/ocrtPropertyIntrospection.html#//apple_ref/doc/uid/TP40008048-CH101</a></p>\n<p>每一个  objc_property_t指向的结构体里面 都包含一个 attributions的成员变量，<br>比如  @property (nonatomic,weak) IBOutlet UITextField<br>通过 property_getAttributes 获取到，它的attributions是  T@”UITextField”,W,N,V_tf<br>而通过 property_copyAttributeList 获取到以下图片</p>\n<p><img src=\"/images/runtime_variable4.png\" alt=\"\"></p>\n<p><img src=\"/images/runtime_variable5.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p>runtime使用之variable<br><img src=\"/images/runtime_variable1.png\" alt=\"\"></p>","more":"<h3 id=\"runtime使用之variable\"><a href=\"#runtime使用之variable\" class=\"headerlink\" title=\"runtime使用之variable\"></a>runtime使用之variable</h3><p><img src=\"/images/runtime_variable1.png\" alt=\"\"></p>\n<p><img src=\"/images/runtime_variable2.png\" alt=\"\"></p>\n<p>property</p>\n<p><img src=\"/images/runtime_variable3.png\" alt=\"\"></p>\n<p><a href=\"https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/ObjCRuntimeGuide/Articles/ocrtPropertyIntrospection.html#//apple_ref/doc/uid/TP40008048-CH101\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/ObjCRuntimeGuide/Articles/ocrtPropertyIntrospection.html#//apple_ref/doc/uid/TP40008048-CH101</a></p>\n<p>每一个  objc_property_t指向的结构体里面 都包含一个 attributions的成员变量，<br>比如  @property (nonatomic,weak) IBOutlet UITextField<br>通过 property_getAttributes 获取到，它的attributions是  T@”UITextField”,W,N,V_tf<br>而通过 property_copyAttributeList 获取到以下图片</p>\n<p><img src=\"/images/runtime_variable4.png\" alt=\"\"></p>\n<p><img src=\"/images/runtime_variable5.png\" alt=\"\"></p>"},{"layout":"post","title":"runtime运行时之类(class)","date":"2016-02-29T10:55:14.000Z","comments":1,"_content":"\nstruct 结构体，构成了 数据结构的核心\n面向对象就是造出了个class，class 类\n\n<!-- more -->\n\n### runtime使用之class\n\nstruct 结构体，构成了 数据结构的核心\n面向对象就是造出了个class，class 类 就是一个指向结构体的指针变量，类里面的方法变量等都存放到了结构体里面的成员成员变量中\n链表把数据串起来，形成一个组织\n\n\n![](/images/runtime_class1.png)\n\n\nclass 里面主要由 变量、属性、方法、协议、类别\n\n![](/images/runtime_class2.png)\n\nruntime 可以实现 对class的add set get\n对class里面的ivars 的add set get\n对class里面的method的add set get\n对class里面的protocol的add set get\n\nClass 里面的API\n\n![](/images/runtime_class3.png)\n\n\nNSObject 里面有 - (Class)class  这是对象的方法，一般使用[self class],这样获取到的是self的指向的类，比如类A继承与类B，那么如果类A的viewDidAppear方法触发了，在类B的viewDidAppear的方法中打印[self class]，是类A的名字\n+ (Class)class   这个就是类的方法了。\n\nclass_getInstanceMethod 类的实例化方法  --减方法\nclass_getClassMethod 类的方法 +加方法\n\n![](/images/runtime_class4.png)\n\nadd class\n\n![](/images/runtime_class5.png)\n\nobject 之instance\n\n![](/images/runtime_class6.png)\n","source":"_posts/runtimeyun-xing-shi-zhi-class.md","raw":"---\nlayout: post\ntitle: \"runtime运行时之类(class)\"\ndate: 2016-02-29 18:55:14 +0800\ncomments: true\ntags:\n- [class]\ncategories:\n- [runtime]\n- [OC]\n---\n\nstruct 结构体，构成了 数据结构的核心\n面向对象就是造出了个class，class 类\n\n<!-- more -->\n\n### runtime使用之class\n\nstruct 结构体，构成了 数据结构的核心\n面向对象就是造出了个class，class 类 就是一个指向结构体的指针变量，类里面的方法变量等都存放到了结构体里面的成员成员变量中\n链表把数据串起来，形成一个组织\n\n\n![](/images/runtime_class1.png)\n\n\nclass 里面主要由 变量、属性、方法、协议、类别\n\n![](/images/runtime_class2.png)\n\nruntime 可以实现 对class的add set get\n对class里面的ivars 的add set get\n对class里面的method的add set get\n对class里面的protocol的add set get\n\nClass 里面的API\n\n![](/images/runtime_class3.png)\n\n\nNSObject 里面有 - (Class)class  这是对象的方法，一般使用[self class],这样获取到的是self的指向的类，比如类A继承与类B，那么如果类A的viewDidAppear方法触发了，在类B的viewDidAppear的方法中打印[self class]，是类A的名字\n+ (Class)class   这个就是类的方法了。\n\nclass_getInstanceMethod 类的实例化方法  --减方法\nclass_getClassMethod 类的方法 +加方法\n\n![](/images/runtime_class4.png)\n\nadd class\n\n![](/images/runtime_class5.png)\n\nobject 之instance\n\n![](/images/runtime_class6.png)\n","slug":"runtimeyun-xing-shi-zhi-class","published":1,"updated":"2020-01-03T06:30:44.283Z","photos":[],"link":"","_id":"ck4xzj9ai000e88s693veg5qc","content":"<p>struct 结构体，构成了 数据结构的核心<br>面向对象就是造出了个class，class 类</p>\n<a id=\"more\"></a>\n\n<h3 id=\"runtime使用之class\"><a href=\"#runtime使用之class\" class=\"headerlink\" title=\"runtime使用之class\"></a>runtime使用之class</h3><p>struct 结构体，构成了 数据结构的核心<br>面向对象就是造出了个class，class 类 就是一个指向结构体的指针变量，类里面的方法变量等都存放到了结构体里面的成员成员变量中<br>链表把数据串起来，形成一个组织</p>\n<p><img src=\"/images/runtime_class1.png\" alt=\"\"></p>\n<p>class 里面主要由 变量、属性、方法、协议、类别</p>\n<p><img src=\"/images/runtime_class2.png\" alt=\"\"></p>\n<p>runtime 可以实现 对class的add set get<br>对class里面的ivars 的add set get<br>对class里面的method的add set get<br>对class里面的protocol的add set get</p>\n<p>Class 里面的API</p>\n<p><img src=\"/images/runtime_class3.png\" alt=\"\"></p>\n<p>NSObject 里面有 - (Class)class  这是对象的方法，一般使用[self class],这样获取到的是self的指向的类，比如类A继承与类B，那么如果类A的viewDidAppear方法触发了，在类B的viewDidAppear的方法中打印[self class]，是类A的名字</p>\n<ul>\n<li>(Class)class   这个就是类的方法了。</li>\n</ul>\n<p>class_getInstanceMethod 类的实例化方法  –减方法<br>class_getClassMethod 类的方法 +加方法</p>\n<p><img src=\"/images/runtime_class4.png\" alt=\"\"></p>\n<p>add class</p>\n<p><img src=\"/images/runtime_class5.png\" alt=\"\"></p>\n<p>object 之instance</p>\n<p><img src=\"/images/runtime_class6.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p>struct 结构体，构成了 数据结构的核心<br>面向对象就是造出了个class，class 类</p>","more":"<h3 id=\"runtime使用之class\"><a href=\"#runtime使用之class\" class=\"headerlink\" title=\"runtime使用之class\"></a>runtime使用之class</h3><p>struct 结构体，构成了 数据结构的核心<br>面向对象就是造出了个class，class 类 就是一个指向结构体的指针变量，类里面的方法变量等都存放到了结构体里面的成员成员变量中<br>链表把数据串起来，形成一个组织</p>\n<p><img src=\"/images/runtime_class1.png\" alt=\"\"></p>\n<p>class 里面主要由 变量、属性、方法、协议、类别</p>\n<p><img src=\"/images/runtime_class2.png\" alt=\"\"></p>\n<p>runtime 可以实现 对class的add set get<br>对class里面的ivars 的add set get<br>对class里面的method的add set get<br>对class里面的protocol的add set get</p>\n<p>Class 里面的API</p>\n<p><img src=\"/images/runtime_class3.png\" alt=\"\"></p>\n<p>NSObject 里面有 - (Class)class  这是对象的方法，一般使用[self class],这样获取到的是self的指向的类，比如类A继承与类B，那么如果类A的viewDidAppear方法触发了，在类B的viewDidAppear的方法中打印[self class]，是类A的名字</p>\n<ul>\n<li>(Class)class   这个就是类的方法了。</li>\n</ul>\n<p>class_getInstanceMethod 类的实例化方法  –减方法<br>class_getClassMethod 类的方法 +加方法</p>\n<p><img src=\"/images/runtime_class4.png\" alt=\"\"></p>\n<p>add class</p>\n<p><img src=\"/images/runtime_class5.png\" alt=\"\"></p>\n<p>object 之instance</p>\n<p><img src=\"/images/runtime_class6.png\" alt=\"\"></p>"},{"layout":"post","title":"runtime运行时的理解","date":"2016-02-29T10:39:40.000Z","comments":1,"_content":"\nruntime运行时的理解：实现动态语言的关键\n\nOC是一门动态语言，而实现动态语言的关键就是 runtime(运行时)\n\n<!-- more -->\n\n### runtime运行时的理解：实现动态语言的关键\n\nOC是一门动态语言，而实现动态语言的关键就是 runtime(运行时)\n\n动态语言：在运行时可以`动态操作程序`(动态的对class、method、variable、protocol进行add、set、get等操作)，比如get：运行时才去检查确认其结构(比如数组字典都可以是id类型)，也就是，尽可能把编译和链接时要执行的逻辑延迟到运行时\n有一个运行时系统 (runtime system) 来执行编译后的代码(比如说数据类型的检查，编译时候可以随便给id类型转换赋值，都不会报错，直到运行时needed时候才会报错，再比如 方法的调用，[self performSelector],如果selector没有可执行的指针地址(implement)，编译时候不会error，而是到运行时候，使用的时候，再现去找selector的指针地址，找不多则提供消息转发机制，否则crash，再比如，可以在编译链接完成后，根据实际需要动态的对class、variable、method、protocol进行add、set、get等操作)\n\n静态语言：在编译时就做了所有的检查和命令（数据类型检查、每个方法名对应的方法执行的入口地址检查等等）\n静态语言里面的编译器其中最最基础和原始的目标之一就是把一份代码里的函数名称，转化成一个相对内存地址，把调用这个函数的语句转换成一个jmp跳转指令。在程序开始运行时候，调用语句可以正确跳转到对应的函数地址。 这样很好，也很直白，但是。。。太死板了。everything is per-determined\n\n一句话解释静态语言和动态语言 Static typing when possible, dynamic typing when needed\n\n实际使用runtime动态调用的地方 举例：`respondsToSelector`、`performSelector`、`isKindOfClass`、`conformsToProtocol`\n\n动态语言好处：编写代码灵活方便，缺点：不易调试。。。比如JavaScript，Python，Ruby都是动态语言\n静态语言好处：结构规范、方便调试，缺点：代码编写不灵活。。不如C++、Java都是静态语言\n\nruntime 参考\n<https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ObjCRuntimeRef/>\n<http://www.opensource.apple.com/source/objc4/>\n","source":"_posts/runtimeyun-xing-shi-de-li-jie.md","raw":"---\nlayout: post\ntitle: \"runtime运行时的理解\"\ndate: 2016-02-29 18:39:40 +0800\ncomments: true\ntags:\n- 运行时\ncategories:\n- [runtime]\n- [OC]\n---\n\nruntime运行时的理解：实现动态语言的关键\n\nOC是一门动态语言，而实现动态语言的关键就是 runtime(运行时)\n\n<!-- more -->\n\n### runtime运行时的理解：实现动态语言的关键\n\nOC是一门动态语言，而实现动态语言的关键就是 runtime(运行时)\n\n动态语言：在运行时可以`动态操作程序`(动态的对class、method、variable、protocol进行add、set、get等操作)，比如get：运行时才去检查确认其结构(比如数组字典都可以是id类型)，也就是，尽可能把编译和链接时要执行的逻辑延迟到运行时\n有一个运行时系统 (runtime system) 来执行编译后的代码(比如说数据类型的检查，编译时候可以随便给id类型转换赋值，都不会报错，直到运行时needed时候才会报错，再比如 方法的调用，[self performSelector],如果selector没有可执行的指针地址(implement)，编译时候不会error，而是到运行时候，使用的时候，再现去找selector的指针地址，找不多则提供消息转发机制，否则crash，再比如，可以在编译链接完成后，根据实际需要动态的对class、variable、method、protocol进行add、set、get等操作)\n\n静态语言：在编译时就做了所有的检查和命令（数据类型检查、每个方法名对应的方法执行的入口地址检查等等）\n静态语言里面的编译器其中最最基础和原始的目标之一就是把一份代码里的函数名称，转化成一个相对内存地址，把调用这个函数的语句转换成一个jmp跳转指令。在程序开始运行时候，调用语句可以正确跳转到对应的函数地址。 这样很好，也很直白，但是。。。太死板了。everything is per-determined\n\n一句话解释静态语言和动态语言 Static typing when possible, dynamic typing when needed\n\n实际使用runtime动态调用的地方 举例：`respondsToSelector`、`performSelector`、`isKindOfClass`、`conformsToProtocol`\n\n动态语言好处：编写代码灵活方便，缺点：不易调试。。。比如JavaScript，Python，Ruby都是动态语言\n静态语言好处：结构规范、方便调试，缺点：代码编写不灵活。。不如C++、Java都是静态语言\n\nruntime 参考\n<https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ObjCRuntimeRef/>\n<http://www.opensource.apple.com/source/objc4/>\n","slug":"runtimeyun-xing-shi-de-li-jie","published":1,"updated":"2020-06-23T06:07:53.299Z","_id":"ck4xzj9aj000h88s62iv46y3y","photos":[],"link":"","content":"<p>runtime运行时的理解：实现动态语言的关键</p>\n<p>OC是一门动态语言，而实现动态语言的关键就是 runtime(运行时)</p>\n<a id=\"more\"></a>\n\n<h3 id=\"runtime运行时的理解：实现动态语言的关键\"><a href=\"#runtime运行时的理解：实现动态语言的关键\" class=\"headerlink\" title=\"runtime运行时的理解：实现动态语言的关键\"></a>runtime运行时的理解：实现动态语言的关键</h3><p>OC是一门动态语言，而实现动态语言的关键就是 runtime(运行时)</p>\n<p>动态语言：在运行时可以<code>动态操作程序</code>(动态的对class、method、variable、protocol进行add、set、get等操作)，比如get：运行时才去检查确认其结构(比如数组字典都可以是id类型)，也就是，尽可能把编译和链接时要执行的逻辑延迟到运行时<br>有一个运行时系统 (runtime system) 来执行编译后的代码(比如说数据类型的检查，编译时候可以随便给id类型转换赋值，都不会报错，直到运行时needed时候才会报错，再比如 方法的调用，[self performSelector],如果selector没有可执行的指针地址(implement)，编译时候不会error，而是到运行时候，使用的时候，再现去找selector的指针地址，找不多则提供消息转发机制，否则crash，再比如，可以在编译链接完成后，根据实际需要动态的对class、variable、method、protocol进行add、set、get等操作)</p>\n<p>静态语言：在编译时就做了所有的检查和命令（数据类型检查、每个方法名对应的方法执行的入口地址检查等等）<br>静态语言里面的编译器其中最最基础和原始的目标之一就是把一份代码里的函数名称，转化成一个相对内存地址，把调用这个函数的语句转换成一个jmp跳转指令。在程序开始运行时候，调用语句可以正确跳转到对应的函数地址。 这样很好，也很直白，但是。。。太死板了。everything is per-determined</p>\n<p>一句话解释静态语言和动态语言 Static typing when possible, dynamic typing when needed</p>\n<p>实际使用runtime动态调用的地方 举例：<code>respondsToSelector</code>、<code>performSelector</code>、<code>isKindOfClass</code>、<code>conformsToProtocol</code></p>\n<p>动态语言好处：编写代码灵活方便，缺点：不易调试。。。比如JavaScript，Python，Ruby都是动态语言<br>静态语言好处：结构规范、方便调试，缺点：代码编写不灵活。。不如C++、Java都是静态语言</p>\n<p>runtime 参考<br><a href=\"https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ObjCRuntimeRef/\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ObjCRuntimeRef/</a><br><a href=\"http://www.opensource.apple.com/source/objc4/\" target=\"_blank\" rel=\"noopener\">http://www.opensource.apple.com/source/objc4/</a></p>\n","site":{"data":{}},"excerpt":"<p>runtime运行时的理解：实现动态语言的关键</p>\n<p>OC是一门动态语言，而实现动态语言的关键就是 runtime(运行时)</p>","more":"<h3 id=\"runtime运行时的理解：实现动态语言的关键\"><a href=\"#runtime运行时的理解：实现动态语言的关键\" class=\"headerlink\" title=\"runtime运行时的理解：实现动态语言的关键\"></a>runtime运行时的理解：实现动态语言的关键</h3><p>OC是一门动态语言，而实现动态语言的关键就是 runtime(运行时)</p>\n<p>动态语言：在运行时可以<code>动态操作程序</code>(动态的对class、method、variable、protocol进行add、set、get等操作)，比如get：运行时才去检查确认其结构(比如数组字典都可以是id类型)，也就是，尽可能把编译和链接时要执行的逻辑延迟到运行时<br>有一个运行时系统 (runtime system) 来执行编译后的代码(比如说数据类型的检查，编译时候可以随便给id类型转换赋值，都不会报错，直到运行时needed时候才会报错，再比如 方法的调用，[self performSelector],如果selector没有可执行的指针地址(implement)，编译时候不会error，而是到运行时候，使用的时候，再现去找selector的指针地址，找不多则提供消息转发机制，否则crash，再比如，可以在编译链接完成后，根据实际需要动态的对class、variable、method、protocol进行add、set、get等操作)</p>\n<p>静态语言：在编译时就做了所有的检查和命令（数据类型检查、每个方法名对应的方法执行的入口地址检查等等）<br>静态语言里面的编译器其中最最基础和原始的目标之一就是把一份代码里的函数名称，转化成一个相对内存地址，把调用这个函数的语句转换成一个jmp跳转指令。在程序开始运行时候，调用语句可以正确跳转到对应的函数地址。 这样很好，也很直白，但是。。。太死板了。everything is per-determined</p>\n<p>一句话解释静态语言和动态语言 Static typing when possible, dynamic typing when needed</p>\n<p>实际使用runtime动态调用的地方 举例：<code>respondsToSelector</code>、<code>performSelector</code>、<code>isKindOfClass</code>、<code>conformsToProtocol</code></p>\n<p>动态语言好处：编写代码灵活方便，缺点：不易调试。。。比如JavaScript，Python，Ruby都是动态语言<br>静态语言好处：结构规范、方便调试，缺点：代码编写不灵活。。不如C++、Java都是静态语言</p>\n<p>runtime 参考<br><a href=\"https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ObjCRuntimeRef/\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ObjCRuntimeRef/</a><br><a href=\"http://www.opensource.apple.com/source/objc4/\" target=\"_blank\" rel=\"noopener\">http://www.opensource.apple.com/source/objc4/</a></p>"},{"layout":"post","title":"runtime运行时之方法method","date":"2016-02-29T10:56:07.000Z","comments":1,"_content":"\na Method is a combination of a selector and an implement\n\nmethod 组成结构体\n\n<!-- more -->\n\n### runtime之方法(method)\n\nruntime 参考<https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ObjCRuntimeRef/>\n\na Method is a combination of a selector and an implement\n\nmethod 组成结构体\n\n![](/images/runtime_method1.png)\n\n\n![](/images/runtime_method2.png)\n\nruntime 处理method相关方法\n\n![](/images/runtime_method3.png)\n\n方法的invoke    objc_msgSend(receiver, selector, arg1, arg2, …)\n\ntypedef struct objc_selector *SEL;a Selector is the name of the method used to identity 方法的签名ID\n比如 setObject:forKey:    setName:age:  这些形式的字符串就代表了sel的标识，但根据这些不知道这个方法参数的类型是什么\nSEL aSelector = @selector(doSomething:) or SEL aSelector = NSSelectorFromString(@\"doSomething:\")\n\n![](/images/runtime_method4.png)\n\nmethod_types  方法的参数类型和返回值类型   比如方法setName:age:的参数是这样 v16@0:4@8i12    那些数字可能代表地址的偏移量\n\n![](/images/runtime_method5.png)\n\n\n![](/images/runtime_method6.png)\n\nImplement -> id (*IMP)(id, SEL, …)  函数指针变量，指向方法实现代码块的入口地址\n\nImplementation - the actual executable code block of a method.  it's a function pointer (an IMP).\n\na selector is like a key in in a hash table(NSDictionary) , and the value is the IMP of the method\nclass的方法列表其实是一个字典，key为selectors，IMPs为value。一个IMP是指向方法在内存中的实现\n\n![](/images/runtime_method7.png)\n\n利用runtime提供的method系列方法，可以很明显的知道可以将两个方法的实现exchange，这就是所谓的`swizzle`\n\n```objc\nswizzle : swizzling allows you to replace a method in an existing class with one of your own making . This approach can lead to a lot of unexpected behavior ,so it should be used very sparingly.\n```\n\n![](/images/runtime_method8.png)\n\n\n\n","source":"_posts/runtimeyun-xing-shi-zhi-fang-fa-method.md","raw":"---\nlayout: post\ntitle: \"runtime运行时之方法method\"\ndate: 2016-02-29 18:56:07 +0800\ncomments: true\ntags:\n- [method]\ncategories:\n- [runtime]\n- [OC]\n---\n\na Method is a combination of a selector and an implement\n\nmethod 组成结构体\n\n<!-- more -->\n\n### runtime之方法(method)\n\nruntime 参考<https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ObjCRuntimeRef/>\n\na Method is a combination of a selector and an implement\n\nmethod 组成结构体\n\n![](/images/runtime_method1.png)\n\n\n![](/images/runtime_method2.png)\n\nruntime 处理method相关方法\n\n![](/images/runtime_method3.png)\n\n方法的invoke    objc_msgSend(receiver, selector, arg1, arg2, …)\n\ntypedef struct objc_selector *SEL;a Selector is the name of the method used to identity 方法的签名ID\n比如 setObject:forKey:    setName:age:  这些形式的字符串就代表了sel的标识，但根据这些不知道这个方法参数的类型是什么\nSEL aSelector = @selector(doSomething:) or SEL aSelector = NSSelectorFromString(@\"doSomething:\")\n\n![](/images/runtime_method4.png)\n\nmethod_types  方法的参数类型和返回值类型   比如方法setName:age:的参数是这样 v16@0:4@8i12    那些数字可能代表地址的偏移量\n\n![](/images/runtime_method5.png)\n\n\n![](/images/runtime_method6.png)\n\nImplement -> id (*IMP)(id, SEL, …)  函数指针变量，指向方法实现代码块的入口地址\n\nImplementation - the actual executable code block of a method.  it's a function pointer (an IMP).\n\na selector is like a key in in a hash table(NSDictionary) , and the value is the IMP of the method\nclass的方法列表其实是一个字典，key为selectors，IMPs为value。一个IMP是指向方法在内存中的实现\n\n![](/images/runtime_method7.png)\n\n利用runtime提供的method系列方法，可以很明显的知道可以将两个方法的实现exchange，这就是所谓的`swizzle`\n\n```objc\nswizzle : swizzling allows you to replace a method in an existing class with one of your own making . This approach can lead to a lot of unexpected behavior ,so it should be used very sparingly.\n```\n\n![](/images/runtime_method8.png)\n\n\n\n","slug":"runtimeyun-xing-shi-zhi-fang-fa-method","published":1,"updated":"2020-06-23T06:06:51.463Z","_id":"ck4xzj9al000k88s65d2p26ae","photos":[],"link":"","content":"<p>a Method is a combination of a selector and an implement</p>\n<p>method 组成结构体</p>\n<a id=\"more\"></a>\n\n<h3 id=\"runtime之方法-method\"><a href=\"#runtime之方法-method\" class=\"headerlink\" title=\"runtime之方法(method)\"></a>runtime之方法(method)</h3><p>runtime 参考<a href=\"https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ObjCRuntimeRef/\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ObjCRuntimeRef/</a></p>\n<p>a Method is a combination of a selector and an implement</p>\n<p>method 组成结构体</p>\n<p><img src=\"/images/runtime_method1.png\" alt=\"\"></p>\n<p><img src=\"/images/runtime_method2.png\" alt=\"\"></p>\n<p>runtime 处理method相关方法</p>\n<p><img src=\"/images/runtime_method3.png\" alt=\"\"></p>\n<p>方法的invoke    objc_msgSend(receiver, selector, arg1, arg2, …)</p>\n<p>typedef struct objc_selector *SEL;a Selector is the name of the method used to identity 方法的签名ID<br>比如 setObject:forKey:    setName:age:  这些形式的字符串就代表了sel的标识，但根据这些不知道这个方法参数的类型是什么<br>SEL aSelector = @selector(doSomething:) or SEL aSelector = NSSelectorFromString(@”doSomething:”)</p>\n<p><img src=\"/images/runtime_method4.png\" alt=\"\"></p>\n<p>method_types  方法的参数类型和返回值类型   比如方法setName:age:的参数是这样 v16@0:4@8i12    那些数字可能代表地址的偏移量</p>\n<p><img src=\"/images/runtime_method5.png\" alt=\"\"></p>\n<p><img src=\"/images/runtime_method6.png\" alt=\"\"></p>\n<p>Implement -&gt; id (*IMP)(id, SEL, …)  函数指针变量，指向方法实现代码块的入口地址</p>\n<p>Implementation - the actual executable code block of a method.  it’s a function pointer (an IMP).</p>\n<p>a selector is like a key in in a hash table(NSDictionary) , and the value is the IMP of the method<br>class的方法列表其实是一个字典，key为selectors，IMPs为value。一个IMP是指向方法在内存中的实现</p>\n<p><img src=\"/images/runtime_method7.png\" alt=\"\"></p>\n<p>利用runtime提供的method系列方法，可以很明显的知道可以将两个方法的实现exchange，这就是所谓的<code>swizzle</code></p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">swizzle : swizzling allows you to replace a method <span class=\"keyword\">in</span> an existing <span class=\"keyword\">class</span> with one of your own making . This approach can lead to a lot of unexpected behavior ,so it should be used very sparingly.</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/runtime_method8.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p>a Method is a combination of a selector and an implement</p>\n<p>method 组成结构体</p>","more":"<h3 id=\"runtime之方法-method\"><a href=\"#runtime之方法-method\" class=\"headerlink\" title=\"runtime之方法(method)\"></a>runtime之方法(method)</h3><p>runtime 参考<a href=\"https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ObjCRuntimeRef/\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ObjCRuntimeRef/</a></p>\n<p>a Method is a combination of a selector and an implement</p>\n<p>method 组成结构体</p>\n<p><img src=\"/images/runtime_method1.png\" alt=\"\"></p>\n<p><img src=\"/images/runtime_method2.png\" alt=\"\"></p>\n<p>runtime 处理method相关方法</p>\n<p><img src=\"/images/runtime_method3.png\" alt=\"\"></p>\n<p>方法的invoke    objc_msgSend(receiver, selector, arg1, arg2, …)</p>\n<p>typedef struct objc_selector *SEL;a Selector is the name of the method used to identity 方法的签名ID<br>比如 setObject:forKey:    setName:age:  这些形式的字符串就代表了sel的标识，但根据这些不知道这个方法参数的类型是什么<br>SEL aSelector = @selector(doSomething:) or SEL aSelector = NSSelectorFromString(@”doSomething:”)</p>\n<p><img src=\"/images/runtime_method4.png\" alt=\"\"></p>\n<p>method_types  方法的参数类型和返回值类型   比如方法setName:age:的参数是这样 v16@0:4@8i12    那些数字可能代表地址的偏移量</p>\n<p><img src=\"/images/runtime_method5.png\" alt=\"\"></p>\n<p><img src=\"/images/runtime_method6.png\" alt=\"\"></p>\n<p>Implement -&gt; id (*IMP)(id, SEL, …)  函数指针变量，指向方法实现代码块的入口地址</p>\n<p>Implementation - the actual executable code block of a method.  it’s a function pointer (an IMP).</p>\n<p>a selector is like a key in in a hash table(NSDictionary) , and the value is the IMP of the method<br>class的方法列表其实是一个字典，key为selectors，IMPs为value。一个IMP是指向方法在内存中的实现</p>\n<p><img src=\"/images/runtime_method7.png\" alt=\"\"></p>\n<p>利用runtime提供的method系列方法，可以很明显的知道可以将两个方法的实现exchange，这就是所谓的<code>swizzle</code></p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">swizzle : swizzling allows you to replace a method <span class=\"keyword\">in</span> an existing <span class=\"keyword\">class</span> with one of your own making . This approach can lead to a lot of unexpected behavior ,so it should be used very sparingly.</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/runtime_method8.png\" alt=\"\"></p>"},{"layout":"post","title":"runtime运行时之消息转发(message forwarding)","date":"2016-02-29T10:56:57.000Z","comments":1,"_content":"\nOC是一门动态语言，在调用`[self performSelector:@selector(dynamic1)]`;  编译时候，可以通过，只有在执行时候，系统才会去找dynamic1方法对应的implement，若找不到这个执行，则就进行消息转发机制流程\n\n<!-- more -->\n\n### runtime之消息转发(message forwarding)\n\nOC是一门动态语言，在调用`[self performSelector:@selector(dynamic1)]`;  编译时候，可以通过，只有在执行时候，系统才会去找dynamic1方法对应的implement，若找不到这个执行，则就进行消息转发机制流程\n\n```objc\n[self performSelector:@selector(dynamic1)];  // 这个invoke编译时候将转换为objc_msgSend()\n```\n\n![](/images/runtime_forwarding1.png)\n\n\n![](/images/runtime_forwarding2.png)\n\n* 在一个函数找不到时，Objective-C提供了三种方式去补救：\n\t1. 调用resolveInstanceMethod给个机会让类添加这个实现这个函数\n\t2. 调用forwardingTargetForSelector让别的对象去执行这个函数\n\t3. 调用methodSignatureForSelector（函数符号制造器，）和forwardInvocation（函数执行器）灵活的将目标函数以其他形式执行。\n\n最后，如果都不中，调用`doesNotRecognizeSelector`抛出异常。\n\n参考  <http://www.cnblogs.com/biosli/p/NSObject_inherit_2.html>\n\n![](/images/runtime_forwarding3.png)\n\n在第三步调用 `-(void)forwardInvocation:(NSInvocation *)anInvocation`   之前为什么要调用\n这个方法呢 `-(NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector`  ，因为method 由 sel 、type、implement  组成的，只知道一个sel肯定是不行的，所以通过MethodSignature方法给sel一个标签，就是定义下它的参数返回值类型。\n","source":"_posts/runtimeyun-xing-shi-zhi-xiao-xi-zhuan-fa-message-forwarding.md","raw":"---\nlayout: post\ntitle: \"runtime运行时之消息转发(message forwarding)\"\ndate: 2016-02-29 18:56:57 +0800\ncomments: true\ntags:\n- [消息转发]\ncategories:\n- [runtime]\n- [OC]\n---\n\nOC是一门动态语言，在调用`[self performSelector:@selector(dynamic1)]`;  编译时候，可以通过，只有在执行时候，系统才会去找dynamic1方法对应的implement，若找不到这个执行，则就进行消息转发机制流程\n\n<!-- more -->\n\n### runtime之消息转发(message forwarding)\n\nOC是一门动态语言，在调用`[self performSelector:@selector(dynamic1)]`;  编译时候，可以通过，只有在执行时候，系统才会去找dynamic1方法对应的implement，若找不到这个执行，则就进行消息转发机制流程\n\n```objc\n[self performSelector:@selector(dynamic1)];  // 这个invoke编译时候将转换为objc_msgSend()\n```\n\n![](/images/runtime_forwarding1.png)\n\n\n![](/images/runtime_forwarding2.png)\n\n* 在一个函数找不到时，Objective-C提供了三种方式去补救：\n\t1. 调用resolveInstanceMethod给个机会让类添加这个实现这个函数\n\t2. 调用forwardingTargetForSelector让别的对象去执行这个函数\n\t3. 调用methodSignatureForSelector（函数符号制造器，）和forwardInvocation（函数执行器）灵活的将目标函数以其他形式执行。\n\n最后，如果都不中，调用`doesNotRecognizeSelector`抛出异常。\n\n参考  <http://www.cnblogs.com/biosli/p/NSObject_inherit_2.html>\n\n![](/images/runtime_forwarding3.png)\n\n在第三步调用 `-(void)forwardInvocation:(NSInvocation *)anInvocation`   之前为什么要调用\n这个方法呢 `-(NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector`  ，因为method 由 sel 、type、implement  组成的，只知道一个sel肯定是不行的，所以通过MethodSignature方法给sel一个标签，就是定义下它的参数返回值类型。\n","slug":"runtimeyun-xing-shi-zhi-xiao-xi-zhuan-fa-message-forwarding","published":1,"updated":"2020-06-23T06:06:24.920Z","_id":"ck4xzj9an000m88s6966j9vkt","photos":[],"link":"","content":"<p>OC是一门动态语言，在调用<code>[self performSelector:@selector(dynamic1)]</code>;  编译时候，可以通过，只有在执行时候，系统才会去找dynamic1方法对应的implement，若找不到这个执行，则就进行消息转发机制流程</p>\n<a id=\"more\"></a>\n\n<h3 id=\"runtime之消息转发-message-forwarding\"><a href=\"#runtime之消息转发-message-forwarding\" class=\"headerlink\" title=\"runtime之消息转发(message forwarding)\"></a>runtime之消息转发(message forwarding)</h3><p>OC是一门动态语言，在调用<code>[self performSelector:@selector(dynamic1)]</code>;  编译时候，可以通过，只有在执行时候，系统才会去找dynamic1方法对应的implement，若找不到这个执行，则就进行消息转发机制流程</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"keyword\">self</span> performSelector:<span class=\"keyword\">@selector</span>(dynamic1)];  <span class=\"comment\">// 这个invoke编译时候将转换为objc_msgSend()</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/runtime_forwarding1.png\" alt=\"\"></p>\n<p><img src=\"/images/runtime_forwarding2.png\" alt=\"\"></p>\n<ul>\n<li>在一个函数找不到时，Objective-C提供了三种方式去补救：<ol>\n<li>调用resolveInstanceMethod给个机会让类添加这个实现这个函数</li>\n<li>调用forwardingTargetForSelector让别的对象去执行这个函数</li>\n<li>调用methodSignatureForSelector（函数符号制造器，）和forwardInvocation（函数执行器）灵活的将目标函数以其他形式执行。</li>\n</ol>\n</li>\n</ul>\n<p>最后，如果都不中，调用<code>doesNotRecognizeSelector</code>抛出异常。</p>\n<p>参考  <a href=\"http://www.cnblogs.com/biosli/p/NSObject_inherit_2.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/biosli/p/NSObject_inherit_2.html</a></p>\n<p><img src=\"/images/runtime_forwarding3.png\" alt=\"\"></p>\n<p>在第三步调用 <code>-(void)forwardInvocation:(NSInvocation *)anInvocation</code>   之前为什么要调用<br>这个方法呢 <code>-(NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector</code>  ，因为method 由 sel 、type、implement  组成的，只知道一个sel肯定是不行的，所以通过MethodSignature方法给sel一个标签，就是定义下它的参数返回值类型。</p>\n","site":{"data":{}},"excerpt":"<p>OC是一门动态语言，在调用<code>[self performSelector:@selector(dynamic1)]</code>;  编译时候，可以通过，只有在执行时候，系统才会去找dynamic1方法对应的implement，若找不到这个执行，则就进行消息转发机制流程</p>","more":"<h3 id=\"runtime之消息转发-message-forwarding\"><a href=\"#runtime之消息转发-message-forwarding\" class=\"headerlink\" title=\"runtime之消息转发(message forwarding)\"></a>runtime之消息转发(message forwarding)</h3><p>OC是一门动态语言，在调用<code>[self performSelector:@selector(dynamic1)]</code>;  编译时候，可以通过，只有在执行时候，系统才会去找dynamic1方法对应的implement，若找不到这个执行，则就进行消息转发机制流程</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"keyword\">self</span> performSelector:<span class=\"keyword\">@selector</span>(dynamic1)];  <span class=\"comment\">// 这个invoke编译时候将转换为objc_msgSend()</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/runtime_forwarding1.png\" alt=\"\"></p>\n<p><img src=\"/images/runtime_forwarding2.png\" alt=\"\"></p>\n<ul>\n<li>在一个函数找不到时，Objective-C提供了三种方式去补救：<ol>\n<li>调用resolveInstanceMethod给个机会让类添加这个实现这个函数</li>\n<li>调用forwardingTargetForSelector让别的对象去执行这个函数</li>\n<li>调用methodSignatureForSelector（函数符号制造器，）和forwardInvocation（函数执行器）灵活的将目标函数以其他形式执行。</li>\n</ol>\n</li>\n</ul>\n<p>最后，如果都不中，调用<code>doesNotRecognizeSelector</code>抛出异常。</p>\n<p>参考  <a href=\"http://www.cnblogs.com/biosli/p/NSObject_inherit_2.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/biosli/p/NSObject_inherit_2.html</a></p>\n<p><img src=\"/images/runtime_forwarding3.png\" alt=\"\"></p>\n<p>在第三步调用 <code>-(void)forwardInvocation:(NSInvocation *)anInvocation</code>   之前为什么要调用<br>这个方法呢 <code>-(NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector</code>  ，因为method 由 sel 、type、implement  组成的，只知道一个sel肯定是不行的，所以通过MethodSignature方法给sel一个标签，就是定义下它的参数返回值类型。</p>"},{"layout":"post","title":"SDWebImage源码分析","date":"2016-02-21T14:49:32.000Z","comments":1,"_content":"\n带有缓存的异步图片下载器，这个库提供了一个UIImageView的类别，这个类别支持远程图片资源加载并显示，源码链接[SDWebImage](https://github.com/rs/SDWebImage)\n\n<!-- more -->\n\n### what is it ?\n\n带有缓存的异步图片下载器，这个库提供了一个UIImageView的类别，这个类别支持远程图片资源加载并显示，源码链接[SDWebImage](https://github.com/rs/SDWebImage)\n \n### 框架结构\n\n如图\n\n![](/images/sdwebimage.jpg)\n\n![](/images/sdwebimage_ifelse.png)\n\n从它的文件夹分类看，有这么几层\n\n* 资源下载及管理资源下载\n* 资源缓存\n* UI层使用资源，以类别形式体现，引入头文件，直接使用\n\n#### 资源下载\n\n```objc\nSDWebImageDownloaderOperation.h\n```\n这个类封装一个完整的下载任务 : 继承于NSOperation，在里面创建一个用于下载的NSURLConnection，绑定下载需要的request，打开当前线程runloop，实现NSURLConnection的代理方法\n\n```objc\nSDWebImageDownloader.h\n\n```\n这个类负责下载管理器downloaderManager : 对外部下载的入口封装 ，利用自己的operationQueue 将每个用于下载创建的operation进行管理\n\n可以把它看做下图的功能\n\n![](/images/downloadmanager.jpg)\n\n\n### 资源缓存\n\n```objc\nSDImageCache.h\n```\n这个类负责缓存文件管理 : 增加新的文件、删除存储的文件、查找存储的文件、计算、清除 存储的容量等、设定存储容量，文件数量等\n\n例如\n\n```objc\n[[SDImageCache sharedImageCache] storeImage:myImage forKey:myCacheKey];\n\n```\n\n```objc\nSDImageCache *imageCache = [[SDImageCache alloc] initWithNamespace:@\"myNamespace\"];\n[imageCache queryDiskCacheForKey:myCacheKey done:^(UIImage *image) {\n    // image is not nil if image was found\n}];\n\n```\n\n### 管理\n\n```objc\nSDWebImageManager.h\n```\n这个类是 webimage 任务的总入口，集成 下载部分 + 缓存部分\n\n```objc\nSDWebImageManager *manager = [SDWebImageManager sharedManager];\n[manager downloadImageWithURL:imageURL\n                      options:0\n                     progress:^(NSInteger receivedSize, NSInteger expectedSize) {\n                         // progression tracking code\n                     }\n                     completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, BOOL finished, NSURL *imageURL) {\n                         if (image) {\n                             // do something with image\n                         }\n                     }];\n```\n\n### 用户使用层\n\n都是以category形式对类进行方法扩展，直接调用即可\n\n```objc\n#import <SDWebImage/UIImageView+WebCache.h>\n\n...\n\n- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {\n    static NSString *MyIdentifier = @\"MyIdentifier\";\n\n    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:MyIdentifier];\n    if (cell == nil) {\n        cell = [[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault\n                                       reuseIdentifier:MyIdentifier] autorelease];\n    }\n\n    // Here we use the new provided sd_setImageWithURL: method to load the web image\n    [cell.imageView sd_setImageWithURL:[NSURL URLWithString:@\"http://www.domain.com/path/to/image.jpg\"]\n                      placeholderImage:[UIImage imageNamed:@\"placeholder.png\"]];\n\n    cell.textLabel.text = @\"My Text\";\n    return cell;\n}\n```\n\n或者这样\n\n```objc\n// Here we use the new provided sd_setImageWithURL: method to load the web image\n[cell.imageView sd_setImageWithURL:[NSURL URLWithString:@\"http://www.domain.com/path/to/image.jpg\"]\n                      placeholderImage:[UIImage imageNamed:@\"placeholder.png\"]\n                             completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, NSURL *imageURL) {\n                                ... completion code here ...\n                             }];\n```\n\n### 图示流\n\n![](/images/webimage_flow.png)\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/sdwebimageyuan-ma-fen-xi.md","raw":"---\nlayout: post\ntitle: \"SDWebImage源码分析\"\ndate: 2016-02-21 22:49:32 +0800\ncomments: true\ntags:\n- [sdwebimage]\ncategories:\n- [图片下载]\n- [OC]\n---\n\n带有缓存的异步图片下载器，这个库提供了一个UIImageView的类别，这个类别支持远程图片资源加载并显示，源码链接[SDWebImage](https://github.com/rs/SDWebImage)\n\n<!-- more -->\n\n### what is it ?\n\n带有缓存的异步图片下载器，这个库提供了一个UIImageView的类别，这个类别支持远程图片资源加载并显示，源码链接[SDWebImage](https://github.com/rs/SDWebImage)\n \n### 框架结构\n\n如图\n\n![](/images/sdwebimage.jpg)\n\n![](/images/sdwebimage_ifelse.png)\n\n从它的文件夹分类看，有这么几层\n\n* 资源下载及管理资源下载\n* 资源缓存\n* UI层使用资源，以类别形式体现，引入头文件，直接使用\n\n#### 资源下载\n\n```objc\nSDWebImageDownloaderOperation.h\n```\n这个类封装一个完整的下载任务 : 继承于NSOperation，在里面创建一个用于下载的NSURLConnection，绑定下载需要的request，打开当前线程runloop，实现NSURLConnection的代理方法\n\n```objc\nSDWebImageDownloader.h\n\n```\n这个类负责下载管理器downloaderManager : 对外部下载的入口封装 ，利用自己的operationQueue 将每个用于下载创建的operation进行管理\n\n可以把它看做下图的功能\n\n![](/images/downloadmanager.jpg)\n\n\n### 资源缓存\n\n```objc\nSDImageCache.h\n```\n这个类负责缓存文件管理 : 增加新的文件、删除存储的文件、查找存储的文件、计算、清除 存储的容量等、设定存储容量，文件数量等\n\n例如\n\n```objc\n[[SDImageCache sharedImageCache] storeImage:myImage forKey:myCacheKey];\n\n```\n\n```objc\nSDImageCache *imageCache = [[SDImageCache alloc] initWithNamespace:@\"myNamespace\"];\n[imageCache queryDiskCacheForKey:myCacheKey done:^(UIImage *image) {\n    // image is not nil if image was found\n}];\n\n```\n\n### 管理\n\n```objc\nSDWebImageManager.h\n```\n这个类是 webimage 任务的总入口，集成 下载部分 + 缓存部分\n\n```objc\nSDWebImageManager *manager = [SDWebImageManager sharedManager];\n[manager downloadImageWithURL:imageURL\n                      options:0\n                     progress:^(NSInteger receivedSize, NSInteger expectedSize) {\n                         // progression tracking code\n                     }\n                     completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, BOOL finished, NSURL *imageURL) {\n                         if (image) {\n                             // do something with image\n                         }\n                     }];\n```\n\n### 用户使用层\n\n都是以category形式对类进行方法扩展，直接调用即可\n\n```objc\n#import <SDWebImage/UIImageView+WebCache.h>\n\n...\n\n- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {\n    static NSString *MyIdentifier = @\"MyIdentifier\";\n\n    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:MyIdentifier];\n    if (cell == nil) {\n        cell = [[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault\n                                       reuseIdentifier:MyIdentifier] autorelease];\n    }\n\n    // Here we use the new provided sd_setImageWithURL: method to load the web image\n    [cell.imageView sd_setImageWithURL:[NSURL URLWithString:@\"http://www.domain.com/path/to/image.jpg\"]\n                      placeholderImage:[UIImage imageNamed:@\"placeholder.png\"]];\n\n    cell.textLabel.text = @\"My Text\";\n    return cell;\n}\n```\n\n或者这样\n\n```objc\n// Here we use the new provided sd_setImageWithURL: method to load the web image\n[cell.imageView sd_setImageWithURL:[NSURL URLWithString:@\"http://www.domain.com/path/to/image.jpg\"]\n                      placeholderImage:[UIImage imageNamed:@\"placeholder.png\"]\n                             completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, NSURL *imageURL) {\n                                ... completion code here ...\n                             }];\n```\n\n### 图示流\n\n![](/images/webimage_flow.png)\n\n\n\n\n\n\n\n\n\n\n","slug":"sdwebimageyuan-ma-fen-xi","published":1,"updated":"2020-06-23T06:02:30.437Z","_id":"ck4xzj9ap000p88s68p45fbjy","photos":[],"link":"","content":"<p>带有缓存的异步图片下载器，这个库提供了一个UIImageView的类别，这个类别支持远程图片资源加载并显示，源码链接<a href=\"https://github.com/rs/SDWebImage\" target=\"_blank\" rel=\"noopener\">SDWebImage</a></p>\n<a id=\"more\"></a>\n\n<h3 id=\"what-is-it\"><a href=\"#what-is-it\" class=\"headerlink\" title=\"what is it ?\"></a>what is it ?</h3><p>带有缓存的异步图片下载器，这个库提供了一个UIImageView的类别，这个类别支持远程图片资源加载并显示，源码链接<a href=\"https://github.com/rs/SDWebImage\" target=\"_blank\" rel=\"noopener\">SDWebImage</a></p>\n<h3 id=\"框架结构\"><a href=\"#框架结构\" class=\"headerlink\" title=\"框架结构\"></a>框架结构</h3><p>如图</p>\n<p><img src=\"/images/sdwebimage.jpg\" alt=\"\"></p>\n<p><img src=\"/images/sdwebimage_ifelse.png\" alt=\"\"></p>\n<p>从它的文件夹分类看，有这么几层</p>\n<ul>\n<li>资源下载及管理资源下载</li>\n<li>资源缓存</li>\n<li>UI层使用资源，以类别形式体现，引入头文件，直接使用</li>\n</ul>\n<h4 id=\"资源下载\"><a href=\"#资源下载\" class=\"headerlink\" title=\"资源下载\"></a>资源下载</h4><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SDWebImageDownloaderOperation.h</span><br></pre></td></tr></table></figure>\n<p>这个类封装一个完整的下载任务 : 继承于NSOperation，在里面创建一个用于下载的NSURLConnection，绑定下载需要的request，打开当前线程runloop，实现NSURLConnection的代理方法</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SDWebImageDownloader.h</span><br></pre></td></tr></table></figure>\n<p>这个类负责下载管理器downloaderManager : 对外部下载的入口封装 ，利用自己的operationQueue 将每个用于下载创建的operation进行管理</p>\n<p>可以把它看做下图的功能</p>\n<p><img src=\"/images/downloadmanager.jpg\" alt=\"\"></p>\n<h3 id=\"资源缓存\"><a href=\"#资源缓存\" class=\"headerlink\" title=\"资源缓存\"></a>资源缓存</h3><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SDImageCache.h</span><br></pre></td></tr></table></figure>\n<p>这个类负责缓存文件管理 : 增加新的文件、删除存储的文件、查找存储的文件、计算、清除 存储的容量等、设定存储容量，文件数量等</p>\n<p>例如</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[[SDImageCache sharedImageCache] storeImage:myImage forKey:myCacheKey];</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SDImageCache *imageCache = [[SDImageCache alloc] initWithNamespace:<span class=\"string\">@\"myNamespace\"</span>];</span><br><span class=\"line\">[imageCache queryDiskCacheForKey:myCacheKey done:^(<span class=\"built_in\">UIImage</span> *image) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// image is not nil if image was found</span></span><br><span class=\"line\">&#125;];</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"管理\"><a href=\"#管理\" class=\"headerlink\" title=\"管理\"></a>管理</h3><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SDWebImageManager.h</span><br></pre></td></tr></table></figure>\n<p>这个类是 webimage 任务的总入口，集成 下载部分 + 缓存部分</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SDWebImageManager *manager = [SDWebImageManager sharedManager];</span><br><span class=\"line\">[manager downloadImageWithURL:imageURL</span><br><span class=\"line\">                      options:<span class=\"number\">0</span></span><br><span class=\"line\">                     progress:^(<span class=\"built_in\">NSInteger</span> receivedSize, <span class=\"built_in\">NSInteger</span> expectedSize) &#123;</span><br><span class=\"line\">                         <span class=\"comment\">// progression tracking code</span></span><br><span class=\"line\">                     &#125;</span><br><span class=\"line\">                     completed:^(<span class=\"built_in\">UIImage</span> *image, <span class=\"built_in\">NSError</span> *error, SDImageCacheType cacheType, <span class=\"built_in\">BOOL</span> finished, <span class=\"built_in\">NSURL</span> *imageURL) &#123;</span><br><span class=\"line\">                         <span class=\"keyword\">if</span> (image) &#123;</span><br><span class=\"line\">                             <span class=\"comment\">// do something with image</span></span><br><span class=\"line\">                         &#125;</span><br><span class=\"line\">                     &#125;];</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"用户使用层\"><a href=\"#用户使用层\" class=\"headerlink\" title=\"用户使用层\"></a>用户使用层</h3><p>都是以category形式对类进行方法扩展，直接调用即可</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#import <span class=\"meta-string\">&lt;SDWebImage/UIImageView+WebCache.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">UITableViewCell</span> *)tableView:(<span class=\"built_in\">UITableView</span> *)tableView cellForRowAtIndexPath:(<span class=\"built_in\">NSIndexPath</span> *)indexPath &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"built_in\">NSString</span> *MyIdentifier = <span class=\"string\">@\"MyIdentifier\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">UITableViewCell</span> *cell = [tableView dequeueReusableCellWithIdentifier:MyIdentifier];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (cell == <span class=\"literal\">nil</span>) &#123;</span><br><span class=\"line\">        cell = [[[<span class=\"built_in\">UITableViewCell</span> alloc] initWithStyle:<span class=\"built_in\">UITableViewCellStyleDefault</span></span><br><span class=\"line\">                                       reuseIdentifier:MyIdentifier] autorelease];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Here we use the new provided sd_setImageWithURL: method to load the web image</span></span><br><span class=\"line\">    [cell.imageView sd_setImageWithURL:[<span class=\"built_in\">NSURL</span> URLWithString:<span class=\"string\">@\"http://www.domain.com/path/to/image.jpg\"</span>]</span><br><span class=\"line\">                      placeholderImage:[<span class=\"built_in\">UIImage</span> imageNamed:<span class=\"string\">@\"placeholder.png\"</span>]];</span><br><span class=\"line\"></span><br><span class=\"line\">    cell.textLabel.text = <span class=\"string\">@\"My Text\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> cell;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>或者这样</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Here we use the new provided sd_setImageWithURL: method to load the web image</span></span><br><span class=\"line\">[cell.imageView sd_setImageWithURL:[<span class=\"built_in\">NSURL</span> URLWithString:<span class=\"string\">@\"http://www.domain.com/path/to/image.jpg\"</span>]</span><br><span class=\"line\">                      placeholderImage:[<span class=\"built_in\">UIImage</span> imageNamed:<span class=\"string\">@\"placeholder.png\"</span>]</span><br><span class=\"line\">                             completed:^(<span class=\"built_in\">UIImage</span> *image, <span class=\"built_in\">NSError</span> *error, SDImageCacheType cacheType, <span class=\"built_in\">NSURL</span> *imageURL) &#123;</span><br><span class=\"line\">                                ... completion code here ...</span><br><span class=\"line\">                             &#125;];</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"图示流\"><a href=\"#图示流\" class=\"headerlink\" title=\"图示流\"></a>图示流</h3><p><img src=\"/images/webimage_flow.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p>带有缓存的异步图片下载器，这个库提供了一个UIImageView的类别，这个类别支持远程图片资源加载并显示，源码链接<a href=\"https://github.com/rs/SDWebImage\" target=\"_blank\" rel=\"noopener\">SDWebImage</a></p>","more":"<h3 id=\"what-is-it\"><a href=\"#what-is-it\" class=\"headerlink\" title=\"what is it ?\"></a>what is it ?</h3><p>带有缓存的异步图片下载器，这个库提供了一个UIImageView的类别，这个类别支持远程图片资源加载并显示，源码链接<a href=\"https://github.com/rs/SDWebImage\" target=\"_blank\" rel=\"noopener\">SDWebImage</a></p>\n<h3 id=\"框架结构\"><a href=\"#框架结构\" class=\"headerlink\" title=\"框架结构\"></a>框架结构</h3><p>如图</p>\n<p><img src=\"/images/sdwebimage.jpg\" alt=\"\"></p>\n<p><img src=\"/images/sdwebimage_ifelse.png\" alt=\"\"></p>\n<p>从它的文件夹分类看，有这么几层</p>\n<ul>\n<li>资源下载及管理资源下载</li>\n<li>资源缓存</li>\n<li>UI层使用资源，以类别形式体现，引入头文件，直接使用</li>\n</ul>\n<h4 id=\"资源下载\"><a href=\"#资源下载\" class=\"headerlink\" title=\"资源下载\"></a>资源下载</h4><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SDWebImageDownloaderOperation.h</span><br></pre></td></tr></table></figure>\n<p>这个类封装一个完整的下载任务 : 继承于NSOperation，在里面创建一个用于下载的NSURLConnection，绑定下载需要的request，打开当前线程runloop，实现NSURLConnection的代理方法</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SDWebImageDownloader.h</span><br></pre></td></tr></table></figure>\n<p>这个类负责下载管理器downloaderManager : 对外部下载的入口封装 ，利用自己的operationQueue 将每个用于下载创建的operation进行管理</p>\n<p>可以把它看做下图的功能</p>\n<p><img src=\"/images/downloadmanager.jpg\" alt=\"\"></p>\n<h3 id=\"资源缓存\"><a href=\"#资源缓存\" class=\"headerlink\" title=\"资源缓存\"></a>资源缓存</h3><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SDImageCache.h</span><br></pre></td></tr></table></figure>\n<p>这个类负责缓存文件管理 : 增加新的文件、删除存储的文件、查找存储的文件、计算、清除 存储的容量等、设定存储容量，文件数量等</p>\n<p>例如</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[[SDImageCache sharedImageCache] storeImage:myImage forKey:myCacheKey];</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SDImageCache *imageCache = [[SDImageCache alloc] initWithNamespace:<span class=\"string\">@\"myNamespace\"</span>];</span><br><span class=\"line\">[imageCache queryDiskCacheForKey:myCacheKey done:^(<span class=\"built_in\">UIImage</span> *image) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// image is not nil if image was found</span></span><br><span class=\"line\">&#125;];</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"管理\"><a href=\"#管理\" class=\"headerlink\" title=\"管理\"></a>管理</h3><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SDWebImageManager.h</span><br></pre></td></tr></table></figure>\n<p>这个类是 webimage 任务的总入口，集成 下载部分 + 缓存部分</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SDWebImageManager *manager = [SDWebImageManager sharedManager];</span><br><span class=\"line\">[manager downloadImageWithURL:imageURL</span><br><span class=\"line\">                      options:<span class=\"number\">0</span></span><br><span class=\"line\">                     progress:^(<span class=\"built_in\">NSInteger</span> receivedSize, <span class=\"built_in\">NSInteger</span> expectedSize) &#123;</span><br><span class=\"line\">                         <span class=\"comment\">// progression tracking code</span></span><br><span class=\"line\">                     &#125;</span><br><span class=\"line\">                     completed:^(<span class=\"built_in\">UIImage</span> *image, <span class=\"built_in\">NSError</span> *error, SDImageCacheType cacheType, <span class=\"built_in\">BOOL</span> finished, <span class=\"built_in\">NSURL</span> *imageURL) &#123;</span><br><span class=\"line\">                         <span class=\"keyword\">if</span> (image) &#123;</span><br><span class=\"line\">                             <span class=\"comment\">// do something with image</span></span><br><span class=\"line\">                         &#125;</span><br><span class=\"line\">                     &#125;];</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"用户使用层\"><a href=\"#用户使用层\" class=\"headerlink\" title=\"用户使用层\"></a>用户使用层</h3><p>都是以category形式对类进行方法扩展，直接调用即可</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#import <span class=\"meta-string\">&lt;SDWebImage/UIImageView+WebCache.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">UITableViewCell</span> *)tableView:(<span class=\"built_in\">UITableView</span> *)tableView cellForRowAtIndexPath:(<span class=\"built_in\">NSIndexPath</span> *)indexPath &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"built_in\">NSString</span> *MyIdentifier = <span class=\"string\">@\"MyIdentifier\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">UITableViewCell</span> *cell = [tableView dequeueReusableCellWithIdentifier:MyIdentifier];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (cell == <span class=\"literal\">nil</span>) &#123;</span><br><span class=\"line\">        cell = [[[<span class=\"built_in\">UITableViewCell</span> alloc] initWithStyle:<span class=\"built_in\">UITableViewCellStyleDefault</span></span><br><span class=\"line\">                                       reuseIdentifier:MyIdentifier] autorelease];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Here we use the new provided sd_setImageWithURL: method to load the web image</span></span><br><span class=\"line\">    [cell.imageView sd_setImageWithURL:[<span class=\"built_in\">NSURL</span> URLWithString:<span class=\"string\">@\"http://www.domain.com/path/to/image.jpg\"</span>]</span><br><span class=\"line\">                      placeholderImage:[<span class=\"built_in\">UIImage</span> imageNamed:<span class=\"string\">@\"placeholder.png\"</span>]];</span><br><span class=\"line\"></span><br><span class=\"line\">    cell.textLabel.text = <span class=\"string\">@\"My Text\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> cell;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>或者这样</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Here we use the new provided sd_setImageWithURL: method to load the web image</span></span><br><span class=\"line\">[cell.imageView sd_setImageWithURL:[<span class=\"built_in\">NSURL</span> URLWithString:<span class=\"string\">@\"http://www.domain.com/path/to/image.jpg\"</span>]</span><br><span class=\"line\">                      placeholderImage:[<span class=\"built_in\">UIImage</span> imageNamed:<span class=\"string\">@\"placeholder.png\"</span>]</span><br><span class=\"line\">                             completed:^(<span class=\"built_in\">UIImage</span> *image, <span class=\"built_in\">NSError</span> *error, SDImageCacheType cacheType, <span class=\"built_in\">NSURL</span> *imageURL) &#123;</span><br><span class=\"line\">                                ... completion code here ...</span><br><span class=\"line\">                             &#125;];</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"图示流\"><a href=\"#图示流\" class=\"headerlink\" title=\"图示流\"></a>图示流</h3><p><img src=\"/images/webimage_flow.png\" alt=\"\"></p>"},{"layout":"post","title":"时间日历控件","date":"2016-05-31T05:00:03.000Z","comments":1,"_content":"\n关于日历就看这一个类`NSCalendar`就可以，结合日期拆解析类`NSDateComponents`就可以搞定日历相关各种奇葩问题了\n\n<!-- more -->\n\n## 日历时间生成\n\n关于日历就看这一个类`NSCalendar`就可以，结合日期拆解析类`NSDateComponents`就可以搞定日历相关各种奇葩问题了\n\n```objc\n/**\n *  获取当前日期是周几\n *\n *  @return 输出结果是星期几的字符串。\n */\n-(NSString *)weekday\n{\n    NSDateComponents *comps = [calendar components:NSCalendarUnitWeekday fromDate:self];\n    \n    NSArray *weekdays = [NSArray arrayWithObjects: [NSNull null], @\"0\", @\"1\", @\"2\", @\"3\", @\"4\", @\"5\", @\"6\", nil];\n    \n    return [weekdays objectAtIndex:comps.weekday];\n}\n\n-(NSString *)weekdayString\n{\n    NSString *week = [self weekday];\n    \n    NSDictionary *map = @{@\"0\" : @\"周日\",\n                          @\"1\" : @\"周一\",\n                          @\"2\" : @\"周二\",\n                          @\"3\" : @\"周三\",\n                          @\"4\" : @\"周四\",\n                          @\"5\" : @\"周五\",\n                          @\"6\" : @\"周六\",\n                          };\n    \n    return map[week];\n}\n```\n\n```objc\n/**\n *  获取当前日期所在月的第一天是周几\n *\n *  @return 输出结果是星期几的字符串。\n */\n-(NSString *)firstWeekdayInCurrentMonth\n{\n    double interval = 0;\n    NSDate *beginDate = nil;\n    NSDate *endDate = nil;\n    NSCalendar *calendar = [[NSCalendar alloc] initWithCalendarIdentifier:NSCalendarIdentifierGregorian];\n    calendar.timeZone = [NSTimeZone timeZoneWithName:@\"Asia/Shanghai\"];;\n    \n    [calendar setFirstWeekday:2];//设定周一为周首日\n    BOOL ok = [calendar rangeOfUnit:NSCalendarUnitMonth startDate:&beginDate interval:&interval forDate:self];\n    //分别修改为 NSDayCalendarUnit NSWeekCalendarUnit NSYearCalendarUnit\n    if (ok) {\n        endDate = [beginDate dateByAddingTimeInterval:interval-1];\n    }else {\n        return @\"\";\n    }\n    \n    return [beginDate weekday];\n}\n```\n\n```objc\n/**\n *  获取当前日期所在月有多少天\n *\n *  @return 天数\n */\n-(NSInteger)daysInCurrentMonth\n{\n    NSRange range =[calendar rangeOfUnit:NSCalendarUnitDay inUnit:NSCalendarUnitMonth forDate:self];\n    \n    return range.length;\n}\n```\n\n```objc\n/**\n *  获取当前日期所在月的下offset个月\n *\n *  @return 获得时间\n */\n-(NSDate *)dateOffsetMonth:(NSInteger)offset\n{\n    NSDateComponents *comps = [[NSDateComponents alloc] init];\n    comps.month = offset;\n    \n    return [calendar dateByAddingComponents:comps toDate:self options:0];\n}\n```\n\n```objc\n/**\n *  获取当前日期的下offset个日期\n *\n *  @return 获得时间\n */\n-(NSDate *)dateOffsetDay:(NSInteger)offset\n{\n    NSDateComponents *comps = [[NSDateComponents alloc] init];\n    comps.day = offset;\n    \n    return [calendar dateByAddingComponents:comps toDate:self options:0];\n}\n```\n\n```objc\n+(NSDate *)dateFromSelectIndex:(NSIndexPath *)indexPath\n{\n    NSDate *date = [[NSDate date] dateOffsetMonth:indexPath.section];\n    \n    NSInteger day = indexPath.row - [date firstWeekdayInCurrentMonth].integerValue + 1;\n    \n    NSDateComponents *comp = [[NSDateComponents alloc] init];\n    comp.year = date.components.year;\n    comp.month = date.components.month;\n    comp.day = day;\n    \n    return [calendar dateFromComponents:comp];\n}\n\n-(NSIndexPath *)indexPath\n{\n    // 上面的反推 monthOffset 要注意，年末最后一天 和 下一年的一月的处理，所以通过判断若两者月相等section就等于0，不等的话，有可能是大于，有可能是小于(比如当前月2016-12，下个月2017-01)\n    NSInteger row = self.components.day-1+[self firstWeekdayInCurrentMonth].integerValue;\n    NSInteger monthOffset = (self.components.month == [NSDate date].components.month) ? 0 : 1;\n    \n    return [NSIndexPath indexPathForRow:row inSection:monthOffset];\n}\n```\n\n## 日历时间UI相关\n\n显示日历大都是UICollectionView 这个很简单，想怎么显示直接写cell就行。\n\n```objc\n#pragma mark collectionview delegate\n\n- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView\n{\n    return 2;\n}\n\n- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section {\n    \n    NSDate *date = [[NSDate date] dateOffsetMonth:section];\n    \n    return [date daysInCurrentMonth] + [date firstWeekdayInCurrentMonth].integerValue;\n}\n\n- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath {\n    \n    DatePickerCell *cell =[collectionView dequeueReusableCellWithReuseIdentifier:datePickerCellReuse forIndexPath:indexPath];\n    \n    [cell updateCellIndex:indexPath select:(_selectIndex == indexPath)];\n    \n    return cell;\n}\n\n- (UICollectionReusableView *)collectionView:(UICollectionView *)collectionView viewForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath\n{\n    if ([kind isEqualToString:UICollectionElementKindSectionHeader]) {\n        \n        DatePickerHeaderView * headerCell = [collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:datePickerHeaderReuse forIndexPath:indexPath];\n        \n        NSDate *date = [[NSDate date] dateOffsetMonth:indexPath.section];\n        \n        headerCell.tipLab.text = [date ymString];\n        \n        return headerCell;\n    }else if ([kind isEqualToString:UICollectionElementKindSectionFooter]){\n        DatePickerFooterView * footerCell = [collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionFooter withReuseIdentifier:datePickerFooterReuse forIndexPath:indexPath];\n        footerCell.hidden = !(indexPath.section == 0);\n        \n        return footerCell;\n    }\n    \n    return nil;\n}\n\n- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath{\n    \n    [collectionView deselectItemAtIndexPath:indexPath animated:YES];\n    \n    _selectIndex = indexPath;\n    \n    [collectionView reloadData];\n    \n    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, 0.4*NSEC_PER_SEC), dispatch_get_main_queue(), ^{\n        \n        if (selectBlock) {\n            selectBlock();\n        }\n        \n        [self.navigationController popViewControllerAnimated:YES];\n    });\n}\n```\n\n详细完整工程，请查看 [github](https://github.com/liu3399shuai/DatePicker)\n","source":"_posts/shi-jian-ri-li-kong-jian.md","raw":"---\nlayout: post\ntitle: \"时间日历控件\"\ndate: 2016-05-31 13:00:03 +0800\ncomments: true\ntags:\n- [NSCalendar]\ncategories:\n- [日历]\n- [OC]\n---\n\n关于日历就看这一个类`NSCalendar`就可以，结合日期拆解析类`NSDateComponents`就可以搞定日历相关各种奇葩问题了\n\n<!-- more -->\n\n## 日历时间生成\n\n关于日历就看这一个类`NSCalendar`就可以，结合日期拆解析类`NSDateComponents`就可以搞定日历相关各种奇葩问题了\n\n```objc\n/**\n *  获取当前日期是周几\n *\n *  @return 输出结果是星期几的字符串。\n */\n-(NSString *)weekday\n{\n    NSDateComponents *comps = [calendar components:NSCalendarUnitWeekday fromDate:self];\n    \n    NSArray *weekdays = [NSArray arrayWithObjects: [NSNull null], @\"0\", @\"1\", @\"2\", @\"3\", @\"4\", @\"5\", @\"6\", nil];\n    \n    return [weekdays objectAtIndex:comps.weekday];\n}\n\n-(NSString *)weekdayString\n{\n    NSString *week = [self weekday];\n    \n    NSDictionary *map = @{@\"0\" : @\"周日\",\n                          @\"1\" : @\"周一\",\n                          @\"2\" : @\"周二\",\n                          @\"3\" : @\"周三\",\n                          @\"4\" : @\"周四\",\n                          @\"5\" : @\"周五\",\n                          @\"6\" : @\"周六\",\n                          };\n    \n    return map[week];\n}\n```\n\n```objc\n/**\n *  获取当前日期所在月的第一天是周几\n *\n *  @return 输出结果是星期几的字符串。\n */\n-(NSString *)firstWeekdayInCurrentMonth\n{\n    double interval = 0;\n    NSDate *beginDate = nil;\n    NSDate *endDate = nil;\n    NSCalendar *calendar = [[NSCalendar alloc] initWithCalendarIdentifier:NSCalendarIdentifierGregorian];\n    calendar.timeZone = [NSTimeZone timeZoneWithName:@\"Asia/Shanghai\"];;\n    \n    [calendar setFirstWeekday:2];//设定周一为周首日\n    BOOL ok = [calendar rangeOfUnit:NSCalendarUnitMonth startDate:&beginDate interval:&interval forDate:self];\n    //分别修改为 NSDayCalendarUnit NSWeekCalendarUnit NSYearCalendarUnit\n    if (ok) {\n        endDate = [beginDate dateByAddingTimeInterval:interval-1];\n    }else {\n        return @\"\";\n    }\n    \n    return [beginDate weekday];\n}\n```\n\n```objc\n/**\n *  获取当前日期所在月有多少天\n *\n *  @return 天数\n */\n-(NSInteger)daysInCurrentMonth\n{\n    NSRange range =[calendar rangeOfUnit:NSCalendarUnitDay inUnit:NSCalendarUnitMonth forDate:self];\n    \n    return range.length;\n}\n```\n\n```objc\n/**\n *  获取当前日期所在月的下offset个月\n *\n *  @return 获得时间\n */\n-(NSDate *)dateOffsetMonth:(NSInteger)offset\n{\n    NSDateComponents *comps = [[NSDateComponents alloc] init];\n    comps.month = offset;\n    \n    return [calendar dateByAddingComponents:comps toDate:self options:0];\n}\n```\n\n```objc\n/**\n *  获取当前日期的下offset个日期\n *\n *  @return 获得时间\n */\n-(NSDate *)dateOffsetDay:(NSInteger)offset\n{\n    NSDateComponents *comps = [[NSDateComponents alloc] init];\n    comps.day = offset;\n    \n    return [calendar dateByAddingComponents:comps toDate:self options:0];\n}\n```\n\n```objc\n+(NSDate *)dateFromSelectIndex:(NSIndexPath *)indexPath\n{\n    NSDate *date = [[NSDate date] dateOffsetMonth:indexPath.section];\n    \n    NSInteger day = indexPath.row - [date firstWeekdayInCurrentMonth].integerValue + 1;\n    \n    NSDateComponents *comp = [[NSDateComponents alloc] init];\n    comp.year = date.components.year;\n    comp.month = date.components.month;\n    comp.day = day;\n    \n    return [calendar dateFromComponents:comp];\n}\n\n-(NSIndexPath *)indexPath\n{\n    // 上面的反推 monthOffset 要注意，年末最后一天 和 下一年的一月的处理，所以通过判断若两者月相等section就等于0，不等的话，有可能是大于，有可能是小于(比如当前月2016-12，下个月2017-01)\n    NSInteger row = self.components.day-1+[self firstWeekdayInCurrentMonth].integerValue;\n    NSInteger monthOffset = (self.components.month == [NSDate date].components.month) ? 0 : 1;\n    \n    return [NSIndexPath indexPathForRow:row inSection:monthOffset];\n}\n```\n\n## 日历时间UI相关\n\n显示日历大都是UICollectionView 这个很简单，想怎么显示直接写cell就行。\n\n```objc\n#pragma mark collectionview delegate\n\n- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView\n{\n    return 2;\n}\n\n- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section {\n    \n    NSDate *date = [[NSDate date] dateOffsetMonth:section];\n    \n    return [date daysInCurrentMonth] + [date firstWeekdayInCurrentMonth].integerValue;\n}\n\n- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath {\n    \n    DatePickerCell *cell =[collectionView dequeueReusableCellWithReuseIdentifier:datePickerCellReuse forIndexPath:indexPath];\n    \n    [cell updateCellIndex:indexPath select:(_selectIndex == indexPath)];\n    \n    return cell;\n}\n\n- (UICollectionReusableView *)collectionView:(UICollectionView *)collectionView viewForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath\n{\n    if ([kind isEqualToString:UICollectionElementKindSectionHeader]) {\n        \n        DatePickerHeaderView * headerCell = [collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:datePickerHeaderReuse forIndexPath:indexPath];\n        \n        NSDate *date = [[NSDate date] dateOffsetMonth:indexPath.section];\n        \n        headerCell.tipLab.text = [date ymString];\n        \n        return headerCell;\n    }else if ([kind isEqualToString:UICollectionElementKindSectionFooter]){\n        DatePickerFooterView * footerCell = [collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionFooter withReuseIdentifier:datePickerFooterReuse forIndexPath:indexPath];\n        footerCell.hidden = !(indexPath.section == 0);\n        \n        return footerCell;\n    }\n    \n    return nil;\n}\n\n- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath{\n    \n    [collectionView deselectItemAtIndexPath:indexPath animated:YES];\n    \n    _selectIndex = indexPath;\n    \n    [collectionView reloadData];\n    \n    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, 0.4*NSEC_PER_SEC), dispatch_get_main_queue(), ^{\n        \n        if (selectBlock) {\n            selectBlock();\n        }\n        \n        [self.navigationController popViewControllerAnimated:YES];\n    });\n}\n```\n\n详细完整工程，请查看 [github](https://github.com/liu3399shuai/DatePicker)\n","slug":"shi-jian-ri-li-kong-jian","published":1,"updated":"2020-06-23T06:01:25.194Z","_id":"ck4xzj9aq000r88s68lln6hj0","photos":[],"link":"","content":"<p>关于日历就看这一个类<code>NSCalendar</code>就可以，结合日期拆解析类<code>NSDateComponents</code>就可以搞定日历相关各种奇葩问题了</p>\n<a id=\"more\"></a>\n\n<h2 id=\"日历时间生成\"><a href=\"#日历时间生成\" class=\"headerlink\" title=\"日历时间生成\"></a>日历时间生成</h2><p>关于日历就看这一个类<code>NSCalendar</code>就可以，结合日期拆解析类<code>NSDateComponents</code>就可以搞定日历相关各种奇葩问题了</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> *  获取当前日期是周几</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> *  @return 输出结果是星期几的字符串。</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">-(<span class=\"built_in\">NSString</span> *)weekday</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">NSDateComponents</span> *comps = [calendar components:<span class=\"built_in\">NSCalendarUnitWeekday</span> fromDate:<span class=\"keyword\">self</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSArray</span> *weekdays = [<span class=\"built_in\">NSArray</span> arrayWithObjects: [<span class=\"built_in\">NSNull</span> null], <span class=\"string\">@\"0\"</span>, <span class=\"string\">@\"1\"</span>, <span class=\"string\">@\"2\"</span>, <span class=\"string\">@\"3\"</span>, <span class=\"string\">@\"4\"</span>, <span class=\"string\">@\"5\"</span>, <span class=\"string\">@\"6\"</span>, <span class=\"literal\">nil</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> [weekdays objectAtIndex:comps.weekday];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"built_in\">NSString</span> *)weekdayString</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">NSString</span> *week = [<span class=\"keyword\">self</span> weekday];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSDictionary</span> *map = @&#123;<span class=\"string\">@\"0\"</span> : <span class=\"string\">@\"周日\"</span>,</span><br><span class=\"line\">                          <span class=\"string\">@\"1\"</span> : <span class=\"string\">@\"周一\"</span>,</span><br><span class=\"line\">                          <span class=\"string\">@\"2\"</span> : <span class=\"string\">@\"周二\"</span>,</span><br><span class=\"line\">                          <span class=\"string\">@\"3\"</span> : <span class=\"string\">@\"周三\"</span>,</span><br><span class=\"line\">                          <span class=\"string\">@\"4\"</span> : <span class=\"string\">@\"周四\"</span>,</span><br><span class=\"line\">                          <span class=\"string\">@\"5\"</span> : <span class=\"string\">@\"周五\"</span>,</span><br><span class=\"line\">                          <span class=\"string\">@\"6\"</span> : <span class=\"string\">@\"周六\"</span>,</span><br><span class=\"line\">                          &#125;;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> map[week];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> *  获取当前日期所在月的第一天是周几</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> *  @return 输出结果是星期几的字符串。</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">-(<span class=\"built_in\">NSString</span> *)firstWeekdayInCurrentMonth</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> interval = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">NSDate</span> *beginDate = <span class=\"literal\">nil</span>;</span><br><span class=\"line\">    <span class=\"built_in\">NSDate</span> *endDate = <span class=\"literal\">nil</span>;</span><br><span class=\"line\">    <span class=\"built_in\">NSCalendar</span> *calendar = [[<span class=\"built_in\">NSCalendar</span> alloc] initWithCalendarIdentifier:<span class=\"built_in\">NSCalendarIdentifierGregorian</span>];</span><br><span class=\"line\">    calendar.timeZone = [<span class=\"built_in\">NSTimeZone</span> timeZoneWithName:<span class=\"string\">@\"Asia/Shanghai\"</span>];;</span><br><span class=\"line\">    </span><br><span class=\"line\">    [calendar setFirstWeekday:<span class=\"number\">2</span>];<span class=\"comment\">//设定周一为周首日</span></span><br><span class=\"line\">    <span class=\"built_in\">BOOL</span> ok = [calendar rangeOfUnit:<span class=\"built_in\">NSCalendarUnitMonth</span> startDate:&amp;beginDate interval:&amp;interval forDate:<span class=\"keyword\">self</span>];</span><br><span class=\"line\">    <span class=\"comment\">//分别修改为 NSDayCalendarUnit NSWeekCalendarUnit NSYearCalendarUnit</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ok) &#123;</span><br><span class=\"line\">        endDate = [beginDate dateByAddingTimeInterval:interval<span class=\"number\">-1</span>];</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">@\"\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> [beginDate weekday];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> *  获取当前日期所在月有多少天</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> *  @return 天数</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">-(<span class=\"built_in\">NSInteger</span>)daysInCurrentMonth</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">NSRange</span> range =[calendar rangeOfUnit:<span class=\"built_in\">NSCalendarUnitDay</span> inUnit:<span class=\"built_in\">NSCalendarUnitMonth</span> forDate:<span class=\"keyword\">self</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> range.length;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> *  获取当前日期所在月的下offset个月</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> *  @return 获得时间</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">-(<span class=\"built_in\">NSDate</span> *)dateOffsetMonth:(<span class=\"built_in\">NSInteger</span>)offset</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">NSDateComponents</span> *comps = [[<span class=\"built_in\">NSDateComponents</span> alloc] init];</span><br><span class=\"line\">    comps.month = offset;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> [calendar dateByAddingComponents:comps toDate:<span class=\"keyword\">self</span> options:<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> *  获取当前日期的下offset个日期</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> *  @return 获得时间</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">-(<span class=\"built_in\">NSDate</span> *)dateOffsetDay:(<span class=\"built_in\">NSInteger</span>)offset</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">NSDateComponents</span> *comps = [[<span class=\"built_in\">NSDateComponents</span> alloc] init];</span><br><span class=\"line\">    comps.day = offset;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> [calendar dateByAddingComponents:comps toDate:<span class=\"keyword\">self</span> options:<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+(<span class=\"built_in\">NSDate</span> *)dateFromSelectIndex:(<span class=\"built_in\">NSIndexPath</span> *)indexPath</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">NSDate</span> *date = [[<span class=\"built_in\">NSDate</span> date] dateOffsetMonth:indexPath.section];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSInteger</span> day = indexPath.row - [date firstWeekdayInCurrentMonth].integerValue + <span class=\"number\">1</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSDateComponents</span> *comp = [[<span class=\"built_in\">NSDateComponents</span> alloc] init];</span><br><span class=\"line\">    comp.year = date.components.year;</span><br><span class=\"line\">    comp.month = date.components.month;</span><br><span class=\"line\">    comp.day = day;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> [calendar dateFromComponents:comp];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"built_in\">NSIndexPath</span> *)indexPath</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 上面的反推 monthOffset 要注意，年末最后一天 和 下一年的一月的处理，所以通过判断若两者月相等section就等于0，不等的话，有可能是大于，有可能是小于(比如当前月2016-12，下个月2017-01)</span></span><br><span class=\"line\">    <span class=\"built_in\">NSInteger</span> row = <span class=\"keyword\">self</span>.components.day<span class=\"number\">-1</span>+[<span class=\"keyword\">self</span> firstWeekdayInCurrentMonth].integerValue;</span><br><span class=\"line\">    <span class=\"built_in\">NSInteger</span> monthOffset = (<span class=\"keyword\">self</span>.components.month == [<span class=\"built_in\">NSDate</span> date].components.month) ? <span class=\"number\">0</span> : <span class=\"number\">1</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> [<span class=\"built_in\">NSIndexPath</span> indexPathForRow:row inSection:monthOffset];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"日历时间UI相关\"><a href=\"#日历时间UI相关\" class=\"headerlink\" title=\"日历时间UI相关\"></a>日历时间UI相关</h2><p>显示日历大都是UICollectionView 这个很简单，想怎么显示直接写cell就行。</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> mark collectionview delegate</span></span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">NSInteger</span>)numberOfSectionsInCollectionView:(<span class=\"built_in\">UICollectionView</span> *)collectionView</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">NSInteger</span>)collectionView:(<span class=\"built_in\">UICollectionView</span> *)collectionView numberOfItemsInSection:(<span class=\"built_in\">NSInteger</span>)section &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSDate</span> *date = [[<span class=\"built_in\">NSDate</span> date] dateOffsetMonth:section];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> [date daysInCurrentMonth] + [date firstWeekdayInCurrentMonth].integerValue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">UICollectionViewCell</span> *)collectionView:(<span class=\"built_in\">UICollectionView</span> *)collectionView cellForItemAtIndexPath:(<span class=\"built_in\">NSIndexPath</span> *)indexPath &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    DatePickerCell *cell =[collectionView dequeueReusableCellWithReuseIdentifier:datePickerCellReuse forIndexPath:indexPath];</span><br><span class=\"line\">    </span><br><span class=\"line\">    [cell updateCellIndex:indexPath select:(_selectIndex == indexPath)];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> cell;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">UICollectionReusableView</span> *)collectionView:(<span class=\"built_in\">UICollectionView</span> *)collectionView viewForSupplementaryElementOfKind:(<span class=\"built_in\">NSString</span> *)kind atIndexPath:(<span class=\"built_in\">NSIndexPath</span> *)indexPath</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ([kind isEqualToString:<span class=\"built_in\">UICollectionElementKindSectionHeader</span>]) &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        DatePickerHeaderView * headerCell = [collectionView dequeueReusableSupplementaryViewOfKind:<span class=\"built_in\">UICollectionElementKindSectionHeader</span> withReuseIdentifier:datePickerHeaderReuse forIndexPath:indexPath];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"built_in\">NSDate</span> *date = [[<span class=\"built_in\">NSDate</span> date] dateOffsetMonth:indexPath.section];</span><br><span class=\"line\">        </span><br><span class=\"line\">        headerCell.tipLab.text = [date ymString];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> headerCell;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ([kind isEqualToString:<span class=\"built_in\">UICollectionElementKindSectionFooter</span>])&#123;</span><br><span class=\"line\">        DatePickerFooterView * footerCell = [collectionView dequeueReusableSupplementaryViewOfKind:<span class=\"built_in\">UICollectionElementKindSectionFooter</span> withReuseIdentifier:datePickerFooterReuse forIndexPath:indexPath];</span><br><span class=\"line\">        footerCell.hidden = !(indexPath.section == <span class=\"number\">0</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> footerCell;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">nil</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)collectionView:(<span class=\"built_in\">UICollectionView</span> *)collectionView didSelectItemAtIndexPath:(<span class=\"built_in\">NSIndexPath</span> *)indexPath&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    [collectionView deselectItemAtIndexPath:indexPath animated:<span class=\"literal\">YES</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    _selectIndex = indexPath;</span><br><span class=\"line\">    </span><br><span class=\"line\">    [collectionView reloadData];</span><br><span class=\"line\">    </span><br><span class=\"line\">    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, <span class=\"number\">0.4</span>*<span class=\"built_in\">NSEC_PER_SEC</span>), dispatch_get_main_queue(), ^&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (selectBlock) &#123;</span><br><span class=\"line\">            selectBlock();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        [<span class=\"keyword\">self</span>.navigationController popViewControllerAnimated:<span class=\"literal\">YES</span>];</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>详细完整工程，请查看 <a href=\"https://github.com/liu3399shuai/DatePicker\" target=\"_blank\" rel=\"noopener\">github</a></p>\n","site":{"data":{}},"excerpt":"<p>关于日历就看这一个类<code>NSCalendar</code>就可以，结合日期拆解析类<code>NSDateComponents</code>就可以搞定日历相关各种奇葩问题了</p>","more":"<h2 id=\"日历时间生成\"><a href=\"#日历时间生成\" class=\"headerlink\" title=\"日历时间生成\"></a>日历时间生成</h2><p>关于日历就看这一个类<code>NSCalendar</code>就可以，结合日期拆解析类<code>NSDateComponents</code>就可以搞定日历相关各种奇葩问题了</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> *  获取当前日期是周几</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> *  @return 输出结果是星期几的字符串。</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">-(<span class=\"built_in\">NSString</span> *)weekday</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">NSDateComponents</span> *comps = [calendar components:<span class=\"built_in\">NSCalendarUnitWeekday</span> fromDate:<span class=\"keyword\">self</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSArray</span> *weekdays = [<span class=\"built_in\">NSArray</span> arrayWithObjects: [<span class=\"built_in\">NSNull</span> null], <span class=\"string\">@\"0\"</span>, <span class=\"string\">@\"1\"</span>, <span class=\"string\">@\"2\"</span>, <span class=\"string\">@\"3\"</span>, <span class=\"string\">@\"4\"</span>, <span class=\"string\">@\"5\"</span>, <span class=\"string\">@\"6\"</span>, <span class=\"literal\">nil</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> [weekdays objectAtIndex:comps.weekday];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"built_in\">NSString</span> *)weekdayString</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">NSString</span> *week = [<span class=\"keyword\">self</span> weekday];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSDictionary</span> *map = @&#123;<span class=\"string\">@\"0\"</span> : <span class=\"string\">@\"周日\"</span>,</span><br><span class=\"line\">                          <span class=\"string\">@\"1\"</span> : <span class=\"string\">@\"周一\"</span>,</span><br><span class=\"line\">                          <span class=\"string\">@\"2\"</span> : <span class=\"string\">@\"周二\"</span>,</span><br><span class=\"line\">                          <span class=\"string\">@\"3\"</span> : <span class=\"string\">@\"周三\"</span>,</span><br><span class=\"line\">                          <span class=\"string\">@\"4\"</span> : <span class=\"string\">@\"周四\"</span>,</span><br><span class=\"line\">                          <span class=\"string\">@\"5\"</span> : <span class=\"string\">@\"周五\"</span>,</span><br><span class=\"line\">                          <span class=\"string\">@\"6\"</span> : <span class=\"string\">@\"周六\"</span>,</span><br><span class=\"line\">                          &#125;;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> map[week];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> *  获取当前日期所在月的第一天是周几</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> *  @return 输出结果是星期几的字符串。</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">-(<span class=\"built_in\">NSString</span> *)firstWeekdayInCurrentMonth</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> interval = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">NSDate</span> *beginDate = <span class=\"literal\">nil</span>;</span><br><span class=\"line\">    <span class=\"built_in\">NSDate</span> *endDate = <span class=\"literal\">nil</span>;</span><br><span class=\"line\">    <span class=\"built_in\">NSCalendar</span> *calendar = [[<span class=\"built_in\">NSCalendar</span> alloc] initWithCalendarIdentifier:<span class=\"built_in\">NSCalendarIdentifierGregorian</span>];</span><br><span class=\"line\">    calendar.timeZone = [<span class=\"built_in\">NSTimeZone</span> timeZoneWithName:<span class=\"string\">@\"Asia/Shanghai\"</span>];;</span><br><span class=\"line\">    </span><br><span class=\"line\">    [calendar setFirstWeekday:<span class=\"number\">2</span>];<span class=\"comment\">//设定周一为周首日</span></span><br><span class=\"line\">    <span class=\"built_in\">BOOL</span> ok = [calendar rangeOfUnit:<span class=\"built_in\">NSCalendarUnitMonth</span> startDate:&amp;beginDate interval:&amp;interval forDate:<span class=\"keyword\">self</span>];</span><br><span class=\"line\">    <span class=\"comment\">//分别修改为 NSDayCalendarUnit NSWeekCalendarUnit NSYearCalendarUnit</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ok) &#123;</span><br><span class=\"line\">        endDate = [beginDate dateByAddingTimeInterval:interval<span class=\"number\">-1</span>];</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">@\"\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> [beginDate weekday];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> *  获取当前日期所在月有多少天</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> *  @return 天数</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">-(<span class=\"built_in\">NSInteger</span>)daysInCurrentMonth</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">NSRange</span> range =[calendar rangeOfUnit:<span class=\"built_in\">NSCalendarUnitDay</span> inUnit:<span class=\"built_in\">NSCalendarUnitMonth</span> forDate:<span class=\"keyword\">self</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> range.length;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> *  获取当前日期所在月的下offset个月</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> *  @return 获得时间</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">-(<span class=\"built_in\">NSDate</span> *)dateOffsetMonth:(<span class=\"built_in\">NSInteger</span>)offset</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">NSDateComponents</span> *comps = [[<span class=\"built_in\">NSDateComponents</span> alloc] init];</span><br><span class=\"line\">    comps.month = offset;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> [calendar dateByAddingComponents:comps toDate:<span class=\"keyword\">self</span> options:<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> *  获取当前日期的下offset个日期</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> *  @return 获得时间</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">-(<span class=\"built_in\">NSDate</span> *)dateOffsetDay:(<span class=\"built_in\">NSInteger</span>)offset</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">NSDateComponents</span> *comps = [[<span class=\"built_in\">NSDateComponents</span> alloc] init];</span><br><span class=\"line\">    comps.day = offset;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> [calendar dateByAddingComponents:comps toDate:<span class=\"keyword\">self</span> options:<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+(<span class=\"built_in\">NSDate</span> *)dateFromSelectIndex:(<span class=\"built_in\">NSIndexPath</span> *)indexPath</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">NSDate</span> *date = [[<span class=\"built_in\">NSDate</span> date] dateOffsetMonth:indexPath.section];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSInteger</span> day = indexPath.row - [date firstWeekdayInCurrentMonth].integerValue + <span class=\"number\">1</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSDateComponents</span> *comp = [[<span class=\"built_in\">NSDateComponents</span> alloc] init];</span><br><span class=\"line\">    comp.year = date.components.year;</span><br><span class=\"line\">    comp.month = date.components.month;</span><br><span class=\"line\">    comp.day = day;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> [calendar dateFromComponents:comp];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"built_in\">NSIndexPath</span> *)indexPath</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 上面的反推 monthOffset 要注意，年末最后一天 和 下一年的一月的处理，所以通过判断若两者月相等section就等于0，不等的话，有可能是大于，有可能是小于(比如当前月2016-12，下个月2017-01)</span></span><br><span class=\"line\">    <span class=\"built_in\">NSInteger</span> row = <span class=\"keyword\">self</span>.components.day<span class=\"number\">-1</span>+[<span class=\"keyword\">self</span> firstWeekdayInCurrentMonth].integerValue;</span><br><span class=\"line\">    <span class=\"built_in\">NSInteger</span> monthOffset = (<span class=\"keyword\">self</span>.components.month == [<span class=\"built_in\">NSDate</span> date].components.month) ? <span class=\"number\">0</span> : <span class=\"number\">1</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> [<span class=\"built_in\">NSIndexPath</span> indexPathForRow:row inSection:monthOffset];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"日历时间UI相关\"><a href=\"#日历时间UI相关\" class=\"headerlink\" title=\"日历时间UI相关\"></a>日历时间UI相关</h2><p>显示日历大都是UICollectionView 这个很简单，想怎么显示直接写cell就行。</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> mark collectionview delegate</span></span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">NSInteger</span>)numberOfSectionsInCollectionView:(<span class=\"built_in\">UICollectionView</span> *)collectionView</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">NSInteger</span>)collectionView:(<span class=\"built_in\">UICollectionView</span> *)collectionView numberOfItemsInSection:(<span class=\"built_in\">NSInteger</span>)section &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSDate</span> *date = [[<span class=\"built_in\">NSDate</span> date] dateOffsetMonth:section];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> [date daysInCurrentMonth] + [date firstWeekdayInCurrentMonth].integerValue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">UICollectionViewCell</span> *)collectionView:(<span class=\"built_in\">UICollectionView</span> *)collectionView cellForItemAtIndexPath:(<span class=\"built_in\">NSIndexPath</span> *)indexPath &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    DatePickerCell *cell =[collectionView dequeueReusableCellWithReuseIdentifier:datePickerCellReuse forIndexPath:indexPath];</span><br><span class=\"line\">    </span><br><span class=\"line\">    [cell updateCellIndex:indexPath select:(_selectIndex == indexPath)];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> cell;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">UICollectionReusableView</span> *)collectionView:(<span class=\"built_in\">UICollectionView</span> *)collectionView viewForSupplementaryElementOfKind:(<span class=\"built_in\">NSString</span> *)kind atIndexPath:(<span class=\"built_in\">NSIndexPath</span> *)indexPath</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ([kind isEqualToString:<span class=\"built_in\">UICollectionElementKindSectionHeader</span>]) &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        DatePickerHeaderView * headerCell = [collectionView dequeueReusableSupplementaryViewOfKind:<span class=\"built_in\">UICollectionElementKindSectionHeader</span> withReuseIdentifier:datePickerHeaderReuse forIndexPath:indexPath];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"built_in\">NSDate</span> *date = [[<span class=\"built_in\">NSDate</span> date] dateOffsetMonth:indexPath.section];</span><br><span class=\"line\">        </span><br><span class=\"line\">        headerCell.tipLab.text = [date ymString];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> headerCell;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ([kind isEqualToString:<span class=\"built_in\">UICollectionElementKindSectionFooter</span>])&#123;</span><br><span class=\"line\">        DatePickerFooterView * footerCell = [collectionView dequeueReusableSupplementaryViewOfKind:<span class=\"built_in\">UICollectionElementKindSectionFooter</span> withReuseIdentifier:datePickerFooterReuse forIndexPath:indexPath];</span><br><span class=\"line\">        footerCell.hidden = !(indexPath.section == <span class=\"number\">0</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> footerCell;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">nil</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)collectionView:(<span class=\"built_in\">UICollectionView</span> *)collectionView didSelectItemAtIndexPath:(<span class=\"built_in\">NSIndexPath</span> *)indexPath&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    [collectionView deselectItemAtIndexPath:indexPath animated:<span class=\"literal\">YES</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    _selectIndex = indexPath;</span><br><span class=\"line\">    </span><br><span class=\"line\">    [collectionView reloadData];</span><br><span class=\"line\">    </span><br><span class=\"line\">    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, <span class=\"number\">0.4</span>*<span class=\"built_in\">NSEC_PER_SEC</span>), dispatch_get_main_queue(), ^&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (selectBlock) &#123;</span><br><span class=\"line\">            selectBlock();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        [<span class=\"keyword\">self</span>.navigationController popViewControllerAnimated:<span class=\"literal\">YES</span>];</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>详细完整工程，请查看 <a href=\"https://github.com/liu3399shuai/DatePicker\" target=\"_blank\" rel=\"noopener\">github</a></p>"},{"layout":"post","title":"自定义键盘和输入框","date":"2016-06-07T10:02:04.000Z","comments":1,"_content":"\n\n为什么点击UITextField键盘就抬起来了呢？为什么点击键盘里的字符，会显示在UITextField输入框里面呢？如何自定义点击UITextField后抬起来的键盘,并将自定义键盘里面的被点击字符传入UITextField\n\n<!-- more -->\n\n##### 为什么点击UITextField键盘就抬起来了呢？\n\n##### 为什么点击键盘里的字符，会显示在UITextField输入框里面呢？\n\n##### 如何自定义点击UITextField后抬起来的键盘,并将自定义键盘里面的被点击字符传入UITextField\n\n##### 如何自定义一个view，来模拟UITextField的功能？就是说点击这个view，键盘抬起，点击键盘里面的字符，会显示到这个view上面\n\n\n\n### 1 UITextField 继承自 UIResponder，UIResponder可以响应用户的交互\n\n```objc\n@interface UIResponder\n\n- (BOOL)becomeFirstResponder;\n\n- (BOOL)resignFirstResponder;\n\n- (BOOL)isFirstResponder;\n```\n\n### 2 可以响应用户事件了，这还不够，UIButton也可以，点击它怎么不抬起键盘。UITextField有个属性 inputView，看解释\n\n```objc\n// Presented when object becomes first responder.  If set to nil, reverts to following responder chain.  If\n// set while first responder, will not take effect until reloadInputViews is called.\n@property (nullable, readwrite, strong) UIView *inputView;\n\n```\n\n也就是说，如果UITextField的这个属性是个nil，那点击它后，键盘也抬不起来了，也就是说如果重新给inputView赋值一个自定义的view，那点击UITextField后，这个自定义的view就会被抬起来了，这就是所谓的自定义的键盘，其实就是个view\n\n\n### 3 点击UITextField后，键盘抬起来了，可是点击键盘里面的字符怎么会显示到UITextField里面的呢？\n\n```objc\n@interface UITextField : UIControl <UITextInput, NSCoding> \n\n@protocol UITextInput <UIKeyInput>\n```\n\n是因为**UITextField**遵守了这**UITextInput**个协议。而UITextInput又遵守了**UIKeyInput**这个协议\n\n```objc\n@protocol UIKeyInput <UITextInputTraits>\n\n- (BOOL)hasText;\n- (void)insertText:(NSString *)text;\n- (void)deleteBackward;\n\n@end\n```\n\nUIKeyInput这个协议里面的这三个方法，就是实现键盘里被点击字符在UITextField输入框里面显示的方法，也就是说，可以手动调用这三个方法，来实现自定义键盘的功能，如下\n\n在自定义的键盘(就是一个view)上面放置很多btn，btn事件点击如下，这样没点击一个btn，UITextField里面就会做出相应的字符显示或删除\n\n```objc\n-(void)btnClick:(UIButton *)btn\n{\n    NSInteger tag = btn.tag;\n    \n    if (10 <= tag && tag <= 19) {\n        [_textField insertText:[NSString stringWithFormat:@\"%ld\",tag - 10]];\n    }else if (tag == 20){\n        [_textField insertText:@\"00\"];\n    }else if (tag == 21){\n        [_textField insertText:@\".\"];\n    }else if (tag == 100){\n        [_textField deleteBackward];\n    }else if (tag == 200){\n        [_textField resignFirstResponder];\n    }else if (tag == 300){\n        [_textField resignFirstResponder];\n    }else{\n        [_textField resignFirstResponder];\n    }\n    \n    [[UIDevice currentDevice] playInputClick];\n}\n\n```\n\n\n## 4 刚才说的点击UITextField键盘抬起是因为有个inputView属性，那一个自定义的view，没有这个属性，点击后怎么把键盘抬起来？\n\n这个也可以，没有inputView，但可以遵守这个协议`<UIKeyInput>` 也可以让键盘抬起来\n\n```objc\n@interface PswTextView : UIView <UITextInput> \n\n```\n\n点击PswTextView后，它becomeFirstResponder，键盘被顺利抬起,可是如何捕获键盘里面的被点击字符呢？如何显示呢？\n\n重写协议里面的以下方法\n\n```objc\n// _textStore 是PswTextView里面的全局可变字符串变量，用来存储当前键盘里面记录的点击字符\n\n- (void)deleteBackward\n{\n    if (_textStore.length == 0) {\n        return;\n    }\n    \n    NSRange theRange = NSMakeRange(_textStore.length - 1, 1);\n    [_textStore deleteCharactersInRange:theRange];\n    \n    [self setNeedsDisplay];\n}\n\n- (void)insertText:(NSString *)text\n{\n    if (_textStore.length == 6) {\n        return;\n    }\n    \n    if (![text isPureNumber]) {\n        return;\n    }\n    \n    [_textStore appendString:text];\n    \n    [self setNeedsDisplay];\n}\n\n- (BOOL)hasText\n{\n    return (_textStore.length > 0);\n}\n```\n\n重写UIResponder里面的方法\n\n```objc\n- (BOOL)canBecomeFirstResponder\n{\n    return YES;\n}\n\n- (BOOL)becomeFirstResponder\n{\n    [_textStore setString:@\"\"];\n    [self setNeedsDisplay];\n    \n    return [super becomeFirstResponder];\n}\n```\n\n在这个view上面显示的键盘被点击字符的话，就用到`drawRect `方法了，在键盘里面的字符变化时候调用一句`setNeedsDisplay `\n\n```objc\n-(void)drawRect:(CGRect)rect\n{    \n    [_textStore drawInRect:rect withAttributes:@{NSForegroundColorAttributeName:self.color,NSFontAttributeName:self.font}];\n}\n```\n\n\n## 自定义键盘、自定义输入框详细代码 请看[github](https://github.com/liu3399shuai/keyboard-Input)\n","source":"_posts/zi-ding-yi-jian-pan-he-shu-ru-kuang.md","raw":"---\nlayout: post\ntitle: \"自定义键盘和输入框\"\ndate: 2016-06-07 18:02:04 +0800\ncomments: true\ntags:\n- [UITextField]\n- [inputView]\ncategories:\n- [键盘]\n- [OC]\n---\n\n\n为什么点击UITextField键盘就抬起来了呢？为什么点击键盘里的字符，会显示在UITextField输入框里面呢？如何自定义点击UITextField后抬起来的键盘,并将自定义键盘里面的被点击字符传入UITextField\n\n<!-- more -->\n\n##### 为什么点击UITextField键盘就抬起来了呢？\n\n##### 为什么点击键盘里的字符，会显示在UITextField输入框里面呢？\n\n##### 如何自定义点击UITextField后抬起来的键盘,并将自定义键盘里面的被点击字符传入UITextField\n\n##### 如何自定义一个view，来模拟UITextField的功能？就是说点击这个view，键盘抬起，点击键盘里面的字符，会显示到这个view上面\n\n\n\n### 1 UITextField 继承自 UIResponder，UIResponder可以响应用户的交互\n\n```objc\n@interface UIResponder\n\n- (BOOL)becomeFirstResponder;\n\n- (BOOL)resignFirstResponder;\n\n- (BOOL)isFirstResponder;\n```\n\n### 2 可以响应用户事件了，这还不够，UIButton也可以，点击它怎么不抬起键盘。UITextField有个属性 inputView，看解释\n\n```objc\n// Presented when object becomes first responder.  If set to nil, reverts to following responder chain.  If\n// set while first responder, will not take effect until reloadInputViews is called.\n@property (nullable, readwrite, strong) UIView *inputView;\n\n```\n\n也就是说，如果UITextField的这个属性是个nil，那点击它后，键盘也抬不起来了，也就是说如果重新给inputView赋值一个自定义的view，那点击UITextField后，这个自定义的view就会被抬起来了，这就是所谓的自定义的键盘，其实就是个view\n\n\n### 3 点击UITextField后，键盘抬起来了，可是点击键盘里面的字符怎么会显示到UITextField里面的呢？\n\n```objc\n@interface UITextField : UIControl <UITextInput, NSCoding> \n\n@protocol UITextInput <UIKeyInput>\n```\n\n是因为**UITextField**遵守了这**UITextInput**个协议。而UITextInput又遵守了**UIKeyInput**这个协议\n\n```objc\n@protocol UIKeyInput <UITextInputTraits>\n\n- (BOOL)hasText;\n- (void)insertText:(NSString *)text;\n- (void)deleteBackward;\n\n@end\n```\n\nUIKeyInput这个协议里面的这三个方法，就是实现键盘里被点击字符在UITextField输入框里面显示的方法，也就是说，可以手动调用这三个方法，来实现自定义键盘的功能，如下\n\n在自定义的键盘(就是一个view)上面放置很多btn，btn事件点击如下，这样没点击一个btn，UITextField里面就会做出相应的字符显示或删除\n\n```objc\n-(void)btnClick:(UIButton *)btn\n{\n    NSInteger tag = btn.tag;\n    \n    if (10 <= tag && tag <= 19) {\n        [_textField insertText:[NSString stringWithFormat:@\"%ld\",tag - 10]];\n    }else if (tag == 20){\n        [_textField insertText:@\"00\"];\n    }else if (tag == 21){\n        [_textField insertText:@\".\"];\n    }else if (tag == 100){\n        [_textField deleteBackward];\n    }else if (tag == 200){\n        [_textField resignFirstResponder];\n    }else if (tag == 300){\n        [_textField resignFirstResponder];\n    }else{\n        [_textField resignFirstResponder];\n    }\n    \n    [[UIDevice currentDevice] playInputClick];\n}\n\n```\n\n\n## 4 刚才说的点击UITextField键盘抬起是因为有个inputView属性，那一个自定义的view，没有这个属性，点击后怎么把键盘抬起来？\n\n这个也可以，没有inputView，但可以遵守这个协议`<UIKeyInput>` 也可以让键盘抬起来\n\n```objc\n@interface PswTextView : UIView <UITextInput> \n\n```\n\n点击PswTextView后，它becomeFirstResponder，键盘被顺利抬起,可是如何捕获键盘里面的被点击字符呢？如何显示呢？\n\n重写协议里面的以下方法\n\n```objc\n// _textStore 是PswTextView里面的全局可变字符串变量，用来存储当前键盘里面记录的点击字符\n\n- (void)deleteBackward\n{\n    if (_textStore.length == 0) {\n        return;\n    }\n    \n    NSRange theRange = NSMakeRange(_textStore.length - 1, 1);\n    [_textStore deleteCharactersInRange:theRange];\n    \n    [self setNeedsDisplay];\n}\n\n- (void)insertText:(NSString *)text\n{\n    if (_textStore.length == 6) {\n        return;\n    }\n    \n    if (![text isPureNumber]) {\n        return;\n    }\n    \n    [_textStore appendString:text];\n    \n    [self setNeedsDisplay];\n}\n\n- (BOOL)hasText\n{\n    return (_textStore.length > 0);\n}\n```\n\n重写UIResponder里面的方法\n\n```objc\n- (BOOL)canBecomeFirstResponder\n{\n    return YES;\n}\n\n- (BOOL)becomeFirstResponder\n{\n    [_textStore setString:@\"\"];\n    [self setNeedsDisplay];\n    \n    return [super becomeFirstResponder];\n}\n```\n\n在这个view上面显示的键盘被点击字符的话，就用到`drawRect `方法了，在键盘里面的字符变化时候调用一句`setNeedsDisplay `\n\n```objc\n-(void)drawRect:(CGRect)rect\n{    \n    [_textStore drawInRect:rect withAttributes:@{NSForegroundColorAttributeName:self.color,NSFontAttributeName:self.font}];\n}\n```\n\n\n## 自定义键盘、自定义输入框详细代码 请看[github](https://github.com/liu3399shuai/keyboard-Input)\n","slug":"zi-ding-yi-jian-pan-he-shu-ru-kuang","published":1,"updated":"2020-06-23T05:59:23.900Z","_id":"ck4xzj9as000u88s65un4axtj","photos":[],"link":"","content":"<p>为什么点击UITextField键盘就抬起来了呢？为什么点击键盘里的字符，会显示在UITextField输入框里面呢？如何自定义点击UITextField后抬起来的键盘,并将自定义键盘里面的被点击字符传入UITextField</p>\n<a id=\"more\"></a>\n\n<h5 id=\"为什么点击UITextField键盘就抬起来了呢？\"><a href=\"#为什么点击UITextField键盘就抬起来了呢？\" class=\"headerlink\" title=\"为什么点击UITextField键盘就抬起来了呢？\"></a>为什么点击UITextField键盘就抬起来了呢？</h5><h5 id=\"为什么点击键盘里的字符，会显示在UITextField输入框里面呢？\"><a href=\"#为什么点击键盘里的字符，会显示在UITextField输入框里面呢？\" class=\"headerlink\" title=\"为什么点击键盘里的字符，会显示在UITextField输入框里面呢？\"></a>为什么点击键盘里的字符，会显示在UITextField输入框里面呢？</h5><h5 id=\"如何自定义点击UITextField后抬起来的键盘-并将自定义键盘里面的被点击字符传入UITextField\"><a href=\"#如何自定义点击UITextField后抬起来的键盘-并将自定义键盘里面的被点击字符传入UITextField\" class=\"headerlink\" title=\"如何自定义点击UITextField后抬起来的键盘,并将自定义键盘里面的被点击字符传入UITextField\"></a>如何自定义点击UITextField后抬起来的键盘,并将自定义键盘里面的被点击字符传入UITextField</h5><h5 id=\"如何自定义一个view，来模拟UITextField的功能？就是说点击这个view，键盘抬起，点击键盘里面的字符，会显示到这个view上面\"><a href=\"#如何自定义一个view，来模拟UITextField的功能？就是说点击这个view，键盘抬起，点击键盘里面的字符，会显示到这个view上面\" class=\"headerlink\" title=\"如何自定义一个view，来模拟UITextField的功能？就是说点击这个view，键盘抬起，点击键盘里面的字符，会显示到这个view上面\"></a>如何自定义一个view，来模拟UITextField的功能？就是说点击这个view，键盘抬起，点击键盘里面的字符，会显示到这个view上面</h5><h3 id=\"1-UITextField-继承自-UIResponder，UIResponder可以响应用户的交互\"><a href=\"#1-UITextField-继承自-UIResponder，UIResponder可以响应用户的交互\" class=\"headerlink\" title=\"1 UITextField 继承自 UIResponder，UIResponder可以响应用户的交互\"></a>1 UITextField 继承自 UIResponder，UIResponder可以响应用户的交互</h3><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@interface</span> <span class=\"title\">UIResponder</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)becomeFirstResponder;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)resignFirstResponder;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)isFirstResponder;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-可以响应用户事件了，这还不够，UIButton也可以，点击它怎么不抬起键盘。UITextField有个属性-inputView，看解释\"><a href=\"#2-可以响应用户事件了，这还不够，UIButton也可以，点击它怎么不抬起键盘。UITextField有个属性-inputView，看解释\" class=\"headerlink\" title=\"2 可以响应用户事件了，这还不够，UIButton也可以，点击它怎么不抬起键盘。UITextField有个属性 inputView，看解释\"></a>2 可以响应用户事件了，这还不够，UIButton也可以，点击它怎么不抬起键盘。UITextField有个属性 inputView，看解释</h3><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Presented when object becomes first responder.  If set to nil, reverts to following responder chain.  If</span></span><br><span class=\"line\"><span class=\"comment\">// set while first responder, will not take effect until reloadInputViews is called.</span></span><br><span class=\"line\"><span class=\"keyword\">@property</span> (<span class=\"keyword\">nullable</span>, <span class=\"keyword\">readwrite</span>, <span class=\"keyword\">strong</span>) <span class=\"built_in\">UIView</span> *inputView;</span><br></pre></td></tr></table></figure>\n\n<p>也就是说，如果UITextField的这个属性是个nil，那点击它后，键盘也抬不起来了，也就是说如果重新给inputView赋值一个自定义的view，那点击UITextField后，这个自定义的view就会被抬起来了，这就是所谓的自定义的键盘，其实就是个view</p>\n<h3 id=\"3-点击UITextField后，键盘抬起来了，可是点击键盘里面的字符怎么会显示到UITextField里面的呢？\"><a href=\"#3-点击UITextField后，键盘抬起来了，可是点击键盘里面的字符怎么会显示到UITextField里面的呢？\" class=\"headerlink\" title=\"3 点击UITextField后，键盘抬起来了，可是点击键盘里面的字符怎么会显示到UITextField里面的呢？\"></a>3 点击UITextField后，键盘抬起来了，可是点击键盘里面的字符怎么会显示到UITextField里面的呢？</h3><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@interface</span> <span class=\"title\">UITextField</span> : <span class=\"title\">UIControl</span> &lt;<span class=\"title\">UITextInput</span>, <span class=\"title\">NSCoding</span>&gt; </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@protocol</span> <span class=\"title\">UITextInput</span> &lt;<span class=\"title\">UIKeyInput</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>是因为<strong>UITextField</strong>遵守了这<strong>UITextInput</strong>个协议。而UITextInput又遵守了<strong>UIKeyInput</strong>这个协议</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@protocol</span> <span class=\"title\">UIKeyInput</span> &lt;<span class=\"title\">UITextInputTraits</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)hasText;</span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)insertText:(<span class=\"built_in\">NSString</span> *)text;</span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)deleteBackward;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br></pre></td></tr></table></figure>\n\n<p>UIKeyInput这个协议里面的这三个方法，就是实现键盘里被点击字符在UITextField输入框里面显示的方法，也就是说，可以手动调用这三个方法，来实现自定义键盘的功能，如下</p>\n<p>在自定义的键盘(就是一个view)上面放置很多btn，btn事件点击如下，这样没点击一个btn，UITextField里面就会做出相应的字符显示或删除</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-(<span class=\"keyword\">void</span>)btnClick:(<span class=\"built_in\">UIButton</span> *)btn</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">NSInteger</span> tag = btn.tag;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"number\">10</span> &lt;= tag &amp;&amp; tag &lt;= <span class=\"number\">19</span>) &#123;</span><br><span class=\"line\">        [_textField insertText:[<span class=\"built_in\">NSString</span> stringWithFormat:<span class=\"string\">@\"%ld\"</span>,tag - <span class=\"number\">10</span>]];</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tag == <span class=\"number\">20</span>)&#123;</span><br><span class=\"line\">        [_textField insertText:<span class=\"string\">@\"00\"</span>];</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tag == <span class=\"number\">21</span>)&#123;</span><br><span class=\"line\">        [_textField insertText:<span class=\"string\">@\".\"</span>];</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tag == <span class=\"number\">100</span>)&#123;</span><br><span class=\"line\">        [_textField deleteBackward];</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tag == <span class=\"number\">200</span>)&#123;</span><br><span class=\"line\">        [_textField resignFirstResponder];</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tag == <span class=\"number\">300</span>)&#123;</span><br><span class=\"line\">        [_textField resignFirstResponder];</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        [_textField resignFirstResponder];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    [[<span class=\"built_in\">UIDevice</span> currentDevice] playInputClick];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"4-刚才说的点击UITextField键盘抬起是因为有个inputView属性，那一个自定义的view，没有这个属性，点击后怎么把键盘抬起来？\"><a href=\"#4-刚才说的点击UITextField键盘抬起是因为有个inputView属性，那一个自定义的view，没有这个属性，点击后怎么把键盘抬起来？\" class=\"headerlink\" title=\"4 刚才说的点击UITextField键盘抬起是因为有个inputView属性，那一个自定义的view，没有这个属性，点击后怎么把键盘抬起来？\"></a>4 刚才说的点击UITextField键盘抬起是因为有个inputView属性，那一个自定义的view，没有这个属性，点击后怎么把键盘抬起来？</h2><p>这个也可以，没有inputView，但可以遵守这个协议<code>&lt;UIKeyInput&gt;</code> 也可以让键盘抬起来</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@interface</span> <span class=\"title\">PswTextView</span> : <span class=\"title\">UIView</span> &lt;<span class=\"title\">UITextInput</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>点击PswTextView后，它becomeFirstResponder，键盘被顺利抬起,可是如何捕获键盘里面的被点击字符呢？如何显示呢？</p>\n<p>重写协议里面的以下方法</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// _textStore 是PswTextView里面的全局可变字符串变量，用来存储当前键盘里面记录的点击字符</span></span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)deleteBackward</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (_textStore.length == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSRange</span> theRange = <span class=\"built_in\">NSMakeRange</span>(_textStore.length - <span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">    [_textStore deleteCharactersInRange:theRange];</span><br><span class=\"line\">    </span><br><span class=\"line\">    [<span class=\"keyword\">self</span> setNeedsDisplay];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)insertText:(<span class=\"built_in\">NSString</span> *)text</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (_textStore.length == <span class=\"number\">6</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (![text isPureNumber]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    [_textStore appendString:text];</span><br><span class=\"line\">    </span><br><span class=\"line\">    [<span class=\"keyword\">self</span> setNeedsDisplay];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)hasText</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (_textStore.length &gt; <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>重写UIResponder里面的方法</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)canBecomeFirstResponder</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">YES</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)becomeFirstResponder</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [_textStore setString:<span class=\"string\">@\"\"</span>];</span><br><span class=\"line\">    [<span class=\"keyword\">self</span> setNeedsDisplay];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> [<span class=\"keyword\">super</span> becomeFirstResponder];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在这个view上面显示的键盘被点击字符的话，就用到<code>drawRect</code>方法了，在键盘里面的字符变化时候调用一句<code>setNeedsDisplay</code></p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-(<span class=\"keyword\">void</span>)drawRect:(<span class=\"built_in\">CGRect</span>)rect</span><br><span class=\"line\">&#123;    </span><br><span class=\"line\">    [_textStore drawInRect:rect withAttributes:@&#123;<span class=\"built_in\">NSForegroundColorAttributeName</span>:<span class=\"keyword\">self</span>.color,<span class=\"built_in\">NSFontAttributeName</span>:<span class=\"keyword\">self</span>.font&#125;];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"自定义键盘、自定义输入框详细代码-请看github\"><a href=\"#自定义键盘、自定义输入框详细代码-请看github\" class=\"headerlink\" title=\"自定义键盘、自定义输入框详细代码 请看github\"></a>自定义键盘、自定义输入框详细代码 请看<a href=\"https://github.com/liu3399shuai/keyboard-Input\" target=\"_blank\" rel=\"noopener\">github</a></h2>","site":{"data":{}},"excerpt":"<p>为什么点击UITextField键盘就抬起来了呢？为什么点击键盘里的字符，会显示在UITextField输入框里面呢？如何自定义点击UITextField后抬起来的键盘,并将自定义键盘里面的被点击字符传入UITextField</p>","more":"<h5 id=\"为什么点击UITextField键盘就抬起来了呢？\"><a href=\"#为什么点击UITextField键盘就抬起来了呢？\" class=\"headerlink\" title=\"为什么点击UITextField键盘就抬起来了呢？\"></a>为什么点击UITextField键盘就抬起来了呢？</h5><h5 id=\"为什么点击键盘里的字符，会显示在UITextField输入框里面呢？\"><a href=\"#为什么点击键盘里的字符，会显示在UITextField输入框里面呢？\" class=\"headerlink\" title=\"为什么点击键盘里的字符，会显示在UITextField输入框里面呢？\"></a>为什么点击键盘里的字符，会显示在UITextField输入框里面呢？</h5><h5 id=\"如何自定义点击UITextField后抬起来的键盘-并将自定义键盘里面的被点击字符传入UITextField\"><a href=\"#如何自定义点击UITextField后抬起来的键盘-并将自定义键盘里面的被点击字符传入UITextField\" class=\"headerlink\" title=\"如何自定义点击UITextField后抬起来的键盘,并将自定义键盘里面的被点击字符传入UITextField\"></a>如何自定义点击UITextField后抬起来的键盘,并将自定义键盘里面的被点击字符传入UITextField</h5><h5 id=\"如何自定义一个view，来模拟UITextField的功能？就是说点击这个view，键盘抬起，点击键盘里面的字符，会显示到这个view上面\"><a href=\"#如何自定义一个view，来模拟UITextField的功能？就是说点击这个view，键盘抬起，点击键盘里面的字符，会显示到这个view上面\" class=\"headerlink\" title=\"如何自定义一个view，来模拟UITextField的功能？就是说点击这个view，键盘抬起，点击键盘里面的字符，会显示到这个view上面\"></a>如何自定义一个view，来模拟UITextField的功能？就是说点击这个view，键盘抬起，点击键盘里面的字符，会显示到这个view上面</h5><h3 id=\"1-UITextField-继承自-UIResponder，UIResponder可以响应用户的交互\"><a href=\"#1-UITextField-继承自-UIResponder，UIResponder可以响应用户的交互\" class=\"headerlink\" title=\"1 UITextField 继承自 UIResponder，UIResponder可以响应用户的交互\"></a>1 UITextField 继承自 UIResponder，UIResponder可以响应用户的交互</h3><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@interface</span> <span class=\"title\">UIResponder</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)becomeFirstResponder;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)resignFirstResponder;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)isFirstResponder;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-可以响应用户事件了，这还不够，UIButton也可以，点击它怎么不抬起键盘。UITextField有个属性-inputView，看解释\"><a href=\"#2-可以响应用户事件了，这还不够，UIButton也可以，点击它怎么不抬起键盘。UITextField有个属性-inputView，看解释\" class=\"headerlink\" title=\"2 可以响应用户事件了，这还不够，UIButton也可以，点击它怎么不抬起键盘。UITextField有个属性 inputView，看解释\"></a>2 可以响应用户事件了，这还不够，UIButton也可以，点击它怎么不抬起键盘。UITextField有个属性 inputView，看解释</h3><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Presented when object becomes first responder.  If set to nil, reverts to following responder chain.  If</span></span><br><span class=\"line\"><span class=\"comment\">// set while first responder, will not take effect until reloadInputViews is called.</span></span><br><span class=\"line\"><span class=\"keyword\">@property</span> (<span class=\"keyword\">nullable</span>, <span class=\"keyword\">readwrite</span>, <span class=\"keyword\">strong</span>) <span class=\"built_in\">UIView</span> *inputView;</span><br></pre></td></tr></table></figure>\n\n<p>也就是说，如果UITextField的这个属性是个nil，那点击它后，键盘也抬不起来了，也就是说如果重新给inputView赋值一个自定义的view，那点击UITextField后，这个自定义的view就会被抬起来了，这就是所谓的自定义的键盘，其实就是个view</p>\n<h3 id=\"3-点击UITextField后，键盘抬起来了，可是点击键盘里面的字符怎么会显示到UITextField里面的呢？\"><a href=\"#3-点击UITextField后，键盘抬起来了，可是点击键盘里面的字符怎么会显示到UITextField里面的呢？\" class=\"headerlink\" title=\"3 点击UITextField后，键盘抬起来了，可是点击键盘里面的字符怎么会显示到UITextField里面的呢？\"></a>3 点击UITextField后，键盘抬起来了，可是点击键盘里面的字符怎么会显示到UITextField里面的呢？</h3><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@interface</span> <span class=\"title\">UITextField</span> : <span class=\"title\">UIControl</span> &lt;<span class=\"title\">UITextInput</span>, <span class=\"title\">NSCoding</span>&gt; </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@protocol</span> <span class=\"title\">UITextInput</span> &lt;<span class=\"title\">UIKeyInput</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>是因为<strong>UITextField</strong>遵守了这<strong>UITextInput</strong>个协议。而UITextInput又遵守了<strong>UIKeyInput</strong>这个协议</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@protocol</span> <span class=\"title\">UIKeyInput</span> &lt;<span class=\"title\">UITextInputTraits</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)hasText;</span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)insertText:(<span class=\"built_in\">NSString</span> *)text;</span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)deleteBackward;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br></pre></td></tr></table></figure>\n\n<p>UIKeyInput这个协议里面的这三个方法，就是实现键盘里被点击字符在UITextField输入框里面显示的方法，也就是说，可以手动调用这三个方法，来实现自定义键盘的功能，如下</p>\n<p>在自定义的键盘(就是一个view)上面放置很多btn，btn事件点击如下，这样没点击一个btn，UITextField里面就会做出相应的字符显示或删除</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-(<span class=\"keyword\">void</span>)btnClick:(<span class=\"built_in\">UIButton</span> *)btn</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">NSInteger</span> tag = btn.tag;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"number\">10</span> &lt;= tag &amp;&amp; tag &lt;= <span class=\"number\">19</span>) &#123;</span><br><span class=\"line\">        [_textField insertText:[<span class=\"built_in\">NSString</span> stringWithFormat:<span class=\"string\">@\"%ld\"</span>,tag - <span class=\"number\">10</span>]];</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tag == <span class=\"number\">20</span>)&#123;</span><br><span class=\"line\">        [_textField insertText:<span class=\"string\">@\"00\"</span>];</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tag == <span class=\"number\">21</span>)&#123;</span><br><span class=\"line\">        [_textField insertText:<span class=\"string\">@\".\"</span>];</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tag == <span class=\"number\">100</span>)&#123;</span><br><span class=\"line\">        [_textField deleteBackward];</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tag == <span class=\"number\">200</span>)&#123;</span><br><span class=\"line\">        [_textField resignFirstResponder];</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tag == <span class=\"number\">300</span>)&#123;</span><br><span class=\"line\">        [_textField resignFirstResponder];</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        [_textField resignFirstResponder];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    [[<span class=\"built_in\">UIDevice</span> currentDevice] playInputClick];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"4-刚才说的点击UITextField键盘抬起是因为有个inputView属性，那一个自定义的view，没有这个属性，点击后怎么把键盘抬起来？\"><a href=\"#4-刚才说的点击UITextField键盘抬起是因为有个inputView属性，那一个自定义的view，没有这个属性，点击后怎么把键盘抬起来？\" class=\"headerlink\" title=\"4 刚才说的点击UITextField键盘抬起是因为有个inputView属性，那一个自定义的view，没有这个属性，点击后怎么把键盘抬起来？\"></a>4 刚才说的点击UITextField键盘抬起是因为有个inputView属性，那一个自定义的view，没有这个属性，点击后怎么把键盘抬起来？</h2><p>这个也可以，没有inputView，但可以遵守这个协议<code>&lt;UIKeyInput&gt;</code> 也可以让键盘抬起来</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@interface</span> <span class=\"title\">PswTextView</span> : <span class=\"title\">UIView</span> &lt;<span class=\"title\">UITextInput</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>点击PswTextView后，它becomeFirstResponder，键盘被顺利抬起,可是如何捕获键盘里面的被点击字符呢？如何显示呢？</p>\n<p>重写协议里面的以下方法</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// _textStore 是PswTextView里面的全局可变字符串变量，用来存储当前键盘里面记录的点击字符</span></span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)deleteBackward</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (_textStore.length == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSRange</span> theRange = <span class=\"built_in\">NSMakeRange</span>(_textStore.length - <span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">    [_textStore deleteCharactersInRange:theRange];</span><br><span class=\"line\">    </span><br><span class=\"line\">    [<span class=\"keyword\">self</span> setNeedsDisplay];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)insertText:(<span class=\"built_in\">NSString</span> *)text</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (_textStore.length == <span class=\"number\">6</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (![text isPureNumber]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    [_textStore appendString:text];</span><br><span class=\"line\">    </span><br><span class=\"line\">    [<span class=\"keyword\">self</span> setNeedsDisplay];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)hasText</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (_textStore.length &gt; <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>重写UIResponder里面的方法</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)canBecomeFirstResponder</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">YES</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)becomeFirstResponder</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [_textStore setString:<span class=\"string\">@\"\"</span>];</span><br><span class=\"line\">    [<span class=\"keyword\">self</span> setNeedsDisplay];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> [<span class=\"keyword\">super</span> becomeFirstResponder];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在这个view上面显示的键盘被点击字符的话，就用到<code>drawRect</code>方法了，在键盘里面的字符变化时候调用一句<code>setNeedsDisplay</code></p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-(<span class=\"keyword\">void</span>)drawRect:(<span class=\"built_in\">CGRect</span>)rect</span><br><span class=\"line\">&#123;    </span><br><span class=\"line\">    [_textStore drawInRect:rect withAttributes:@&#123;<span class=\"built_in\">NSForegroundColorAttributeName</span>:<span class=\"keyword\">self</span>.color,<span class=\"built_in\">NSFontAttributeName</span>:<span class=\"keyword\">self</span>.font&#125;];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"自定义键盘、自定义输入框详细代码-请看github\"><a href=\"#自定义键盘、自定义输入框详细代码-请看github\" class=\"headerlink\" title=\"自定义键盘、自定义输入框详细代码 请看github\"></a>自定义键盘、自定义输入框详细代码 请看<a href=\"https://github.com/liu3399shuai/keyboard-Input\" target=\"_blank\" rel=\"noopener\">github</a></h2>"},{"title":"hexo使用","date":"2018-01-05T07:32:48.000Z","_content":"\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in\n\n<!-- more -->\n\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hexo-use.md","raw":"---\ntitle: hexo使用\ndate: 2018-01-05 15:32:48\n---\n\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in\n\n<!-- more -->\n\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hexo-use","published":1,"updated":"2020-06-22T07:46:02.613Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbq74res0000nc3je8clh79o","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in</p>\n<a id=\"more\"></a>\n\n<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in</p>","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>"},{"title":"Macdown介绍","date":"2016-03-03T07:22:48.000Z","_content":"\nMacDown的一些简单介绍，摘自于MacDown的help页面\n\n<!-- more -->\n\n# MacDown介绍\n\n![MacDown logo](http://macdown.uranusjr.com/static/images/logo-160.png)\n\nHello there! I’m **MacDown**, the open source Markdown editor for OS X.\n\nLet me introduce myself.\n\n\n\n## Markdown and I\n\n**Markdown** is a plain text formatting syntax created by John Gruber, aiming to provide a easy-to-read and feasible markup. The original Markdown syntax specification can be found [here](http://daringfireball.net/projects/markdown/syntax).\n\n**MacDown** is created as a simple-to-use editor for Markdown documents. I render your Markdown contents real-time into HTML, and display them in a preview panel.\n\n![MacDown Screenshot](http://d.pr/i/10UGP+)\n\nI support all the original Markdown syntaxes. But I can do so much more! Various popular but non-standard syntaxes can be turned on/off from the [**Markdown** preference pane](#markdown-pane).\n\nYou can specify extra HTML rendering options through the [**Rendering** preference pane](#rendering-pane).\n\nYou can customize the editor window to you liking in the [**Editor** preferences pane](#editor-pane):\n\nYou can configure various application (that's me!) behaviors in the [**General** preference pane](#general-pane).\n\n## The Basics\nBefore I tell you about all the extra syntaxes and capabilities I have, I'll introduce you to the basics of standard markdown. If you already know markdown, and want to jump straight to learning about the fancier things I can do, I suggest you skip to the [**Markdown** preference pane](#markdown-pane). Lets jump right in.  \n\n### Line Breaks\nTo force a line break, put two spaces and a newline (return) at the end of the line.\n\n* This two-line bullet \nwon't break\n\n* This two-line bullet  \nwill break\n\nHere is the code:\n\n```\n* This two-line bullet \nwon't break\n\n* This two-line bullet  \nwill break\n```\n\n### Strong and Emphasize\n\n**Strong**: `**Strong**` or `__Strong__` (Command-B)  \n*Emphasize*: `*Emphasize*` or `_Emphasize_`[^emphasize] (Command-I)\n\n### Headers (like this one!)\n\n    Header 1\n    ========\n\n    Header 2\n    --------\n\nor\n\n    # Header 1\n    ## Header 2\n    ### Header 3\n    #### Header 4\n    ##### Header 5\n    ###### Header 6\n\n\n\n### Links and Email\n#### Inline\nJust put angle brackets around an email and it becomes clickable: <uranusjr@gmail.com>  \n`<uranusjr@gmail.com>`  \n\nSame thing with urls: <http://macdown.uranusjr.com>  \n` <http://macdown.uranusjr.com>`  \n\nPerhaps you want to some link text like this: [Macdown Website](http://macdown.uranusjr.com \"Title\")  \n`[Macdown Website](http://macdown.uranusjr.com \"Title\")` (The title is optional)  \n\n\n#### Reference style\nSometimes it looks too messy to include big long urls inline, or you want to keep all your urls together.  \n\nMake [a link][arbitrary_id] `[a link][arbitrary_id]` then on it's own line anywhere else in the file:  \n`[arbitrary_id]: http://macdown.uranusjr.com \"Title\"`\n  \nIf the link text itself would make a good id, you can link [like this][] `[like this][]`, then on it's own line anywhere else in the file:  \n`[like this]: http://macdown.uranusjr.com`  \n\n[arbitrary_id]: http://macdown.uranusjr.com \"Title\"\n[like this]: http://macdown.uranusjr.com  \n\n\n### Images\n#### Inline\n`![Alt Image Text](path/or/url/to.jpg \"Optional Title\")`\n#### Reference style\n`![Alt Image Text][image-id]`  \non it's own line elsewhere:  \n`[image-id]: path/or/url/to.jpg \"Optional Title\"`\n\n\n### Lists\n\n* Lists must be preceded by a blank line (or block element)\n* Unordered lists start each item with a `*`\n- `-` works too\n    * Indent a level to make a nested list\n        1. Ordered lists are supported.\n        2. Start each item (number-period-space) like `1. `\n        42. It doesn't matter what number you use, I will render them sequentially\n        1. So you might want to start each line with `1.` and let me sort it out\n\nHere is the code:\n\n```\n* Lists must be preceded by a blank line (or block element)\n* Unordered lists start each item with a `*`\n- `-` works too\n    * Indent a level to make a nested list\n        1. Ordered lists are supported.\n        2. Start each item (number-period-space) like `1. `\n        42. It doesn't matter what number you use, I will render them sequentially\n        1. So you might want to start each line with `1.` and let me sort it out\n```\n\n\n\n### Block Quote\n\n> Angle brackets `>` are used for block quotes.  \nTechnically not every line needs to start with a `>` as long as\nthere are no empty lines between paragraphs.  \n> Looks kinda ugly though.\n> > Block quotes can be nested.  \n> > > Multiple Levels\n>\n> Most markdown syntaxes work inside block quotes.\n>\n> * Lists\n> * [Links][arbitrary_id]\n> * Etc.\n\nHere is the code:\n\n```\n> Angle brackets `>` are used for block quotes.  \nTechnically not every line needs to start with a `>` as long as\nthere are no empty lines between paragraphs.  \n> Looks kinda ugly though.\n> > Block quotes can be nested.  \n> > > Multiple Levels\n>\n> Most markdown syntaxes work inside block quotes.\n>\n> * Lists\n> * [Links][arbitrary_id]\n> * Etc.\n```\n  \n  \n### Inline Code\n`Inline code` is indicated by surrounding it with backticks:  \n`` `Inline code` ``\n\nIf your ``code has `backticks` `` that need to be displayed, you can use double backticks:  \n```` ``Code with `backticks` `` ````  (mind the spaces preceding the final set of backticks)\n\n\n### Block Code\nIf you indent at least four spaces or one tab, I'll display a code block.\n\n    print('This is a code block')\n    print('The block must be preceded by a blank line')\n    print('Then indent at least 4 spaces or 1 tab')\n        print('Nesting does nothing. Your code is displayed Literally')\n\nI also know how to do something called [Fenced Code Blocks](#fenced-code-block) which I will tell you about later.\n\n### Horizontal Rules\nIf you type three asterisks `***` or three dashes `---` on a line, I'll display a horizontal rule:\n\n***\n\n\n## <a name=\"markdown-pane\"></a>The Markdown Preference Pane\nThis is where I keep all preferences related to how I parse markdown into html.  \n![Markdown preferences pane](http://d.pr/i/RQEi+)\n\n### Document Formatting\nThe ***Smartypants*** extension automatically transforms straight quotes (`\"` and `'`) in your text into typographer’s quotes (`“`, `”`, `‘`, and `’`) according to the context. Very useful if you’re a typography freak like I am. Quote and Smartypants are syntactically incompatible. If both are enabled, Quote takes precedence.\n\n\n### Block Formatting\n\n#### Table\n\nThis is a table:\n\nFirst Header  | Second Header\n------------- | -------------\nContent Cell  | Content Cell\nContent Cell  | Content Cell\n\nYou can align cell contents with syntax like this:\n\n| Left Aligned  | Center Aligned  | Right Aligned |\n|:------------- |:---------------:| -------------:|\n| col 3 is      | some wordy text |         $1600 |\n| col 2 is      | centered        |           $12 |\n| zebra stripes | are neat        |            $1 |\n\nThe left- and right-most pipes (`|`) are only aesthetic, and can be omitted. The spaces don’t matter, either. Alignment depends solely on `:` marks.\n\n#### <a name=\"fenced-code-block\">Fenced Code Block</a>\n\nThis is a fenced code block:\n\n```\nprint('Hello world!')\n```\n\nYou can also use waves (`~`) instead of back ticks (`` ` ``):\n\n~~~\nprint('Hello world!')\n~~~\n\n\nYou can add an optional language ID at the end of the first line. The language ID will only be used to highlight the code inside if you tick the ***Enable highlighting in code blocks*** option. This is what happens if you enable it:\n\n![Syntax highlighting example](http://d.pr/i/9HM6+)\n\nI support many popular languages as well as some generic syntax descriptions that can be used if your language of choice is not supported. See [relevant sections on the official site](http://macdown.uranusjr.com/features/) for a full list of supported syntaxes.\n\n\n### Inline Formatting\n\nThe following is a list of optional inline markups supported:\n\nOption name         | Markup           | Result if enabled     |\n--------------------|------------------|-----------------------|\nIntra-word emphasis | So A\\*maz\\*ing   | So A<em>maz</em>ing   |\nStrikethrough       | \\~~Much wow\\~~   | <del>Much wow</del>   |\nUnderline [^under]  | \\_So doge\\_      | <u>So doge</u>        |\nQuote [^quote]      | \\\"Such editor\\\"  | <q>Such editor</q>    |\nHighlight           | \\==So good\\==    | <mark>So good</mark>  |\nSuperscript         | hoge\\^(fuga)     | hoge<sup>fuga</sup>   |\nAutolink            | http://t.co      | <http://t.co>         |\nFootnotes           | [\\^4] and [\\^4]: | [^4] and footnote 4   |\n\n[^4]: You don't have to use a number. Arbitrary things like `[^footy note4]` and `[^footy note4]:` will also work. But they will *render* as numbered footnotes. Also, no need to keep your footnotes in order, I will sort out the order for you so they appear in the same order they were referenced in the text body. You can even keep some footnotes near where you referenced them, and collect others at the bottom of the file in the traditional place for footnotes. \n\n\n\n\n## <a name=\"rendering-pane\"></a>The Rendering Preference Pane\nThis is where I keep preferences relating to how I render and style the parsed markdown in the preview window.  \n![Rendering preferences pane](http://d.pr/i/rT4d+)\n\n### CSS\nYou can choose different css files for me to use to render your html. You can even customize or add your own custom css files.\n\n### Syntax Highlighting\nYou have already seen how I can syntax highlight your fenced code blocks. See the [Fenced Code Block](#fenced-code-block) section if you haven’t! You can also choose different themes for syntax highlighting.\n\n### TeX-like Math Syntax\nI can also render TeX-like math syntaxes, if you allow me to.[^math] I can do inline math like this: \\\\( 1 + 1 \\\\) or this (in MathML): <math><mn>1</mn><mo>+</mo><mn>1</mn></math>, and block math:\n\n\\\\[\n    A^T_S = B\n\\\\]\n\nor (in MathML)\n\n<math display=\"block\">\n    <msubsup><mi>A</mi> <mi>S</mi> <mi>T</mi></msubsup>\n    <mo>=</mo>\n    <mi>B</mi>\n</math>\n\n\n\n### Task List Syntax\n1. [x] I can render checkbox list syntax\n    * [x] I support nesting\n    * [x] I support ordered *and* unordered lists\n2. [ ] I don't support clicking checkboxes directly in the html window\n\n\n### Jekyll front-matter\nIf you like, I can display Jekyll front-matter in a nice table. Just make sure you put the front-matter at the very beginning of the file, and fence it with `---`. For example:\n\n```\n---\ntitle: \"Macdown is my friend\"\ndate: 2014-06-06 20:00:00\n---\n```\n\n### Render newline literally\nNormally I require you to put two spaces and a newline (aka return) at the end of a line in order to create a line break. If you like, I can render a newline any time you end a line with a newline. However, if you enable this, markdown that looks lovely when I render it might look pretty funky when you let some *other* program render it.\n\n\n\n\n\n## <a name=\"general-pane\"></a>The General Preferences Pane\n\nThis is where I keep preferences related to application behavior.  \n![General preferences pane](http://d.pr/i/rvwu+)\n\nThe General Preferences Pane allows you to tell me how you want me to behave. For example, do you want me to make sure there is a document open when I launch? You can also tell me if I should constantly update the preview window as you type, or wait for you to hit `command-R` instead. Maybe you prefer your editor window on the right? Or to see the word-count as you type. This is also the place to tell me if you are interested in pre-releases of me, or just want to stick to better-tested official releases.  \n\n## <a name=\"editor-pane\"></a>The Editor Preference Pane\nThis is where I keep preferences related to the behavior and styling of the editing window.  \n![Editor preferences pane](http://d.pr/i/6OL5+)\n\n\n### Styling\n\nMy editor provides syntax highlighting. You can edit the base font and the coloring/sizing theme. I provided some default themes (courtesy of [Mou](http://mouapp.com)’s creator, Chen Luo) if you don’t know where to start.\n\nYou can also edit, or even add new themes if you want to! Just click the ***Reveal*** button, and start moving things around. Remember to use the correct file extension (`.styles`), though. I’m picky about that.\n\nI offer auto-completion and other functions to ease your editing experience. If you don’t like it, however, you can turn them off.\n\n\n\n\n\n## Hack On\n\nThat’s about it. Thanks for listening. I’ll be quiet from now on (unless there’s an update about the app—I’ll remind you for that!).\n\nHappy writing!\n\n\n[^emphasize]: If **Underlines** is turned on, `_this notation_` will render as underlined instead of emphasized \n\n[^under]: If **Underline** is disabled `_this_` will be rendered as *emphasized* instead of being underlined.\n\n[^quote]: **Quote** replaces literal `\"` characters with html `<q>` tags. **Quote** and **Smartypants** are syntactically incompatible. If both are enabled, **Quote** takes precedence. Note that **Quote** is different from *blockquote*, which is part of standard Markdown.\n\n[^math]: Internet connection required.\n\n\n","source":"_posts/macdown_intro.md","raw":"---\ntitle: Macdown介绍\ndate: 2016-03-03 15:22:48\ntags:\n- macdown\ncategories:\n- [macdown]\n---\n\nMacDown的一些简单介绍，摘自于MacDown的help页面\n\n<!-- more -->\n\n# MacDown介绍\n\n![MacDown logo](http://macdown.uranusjr.com/static/images/logo-160.png)\n\nHello there! I’m **MacDown**, the open source Markdown editor for OS X.\n\nLet me introduce myself.\n\n\n\n## Markdown and I\n\n**Markdown** is a plain text formatting syntax created by John Gruber, aiming to provide a easy-to-read and feasible markup. The original Markdown syntax specification can be found [here](http://daringfireball.net/projects/markdown/syntax).\n\n**MacDown** is created as a simple-to-use editor for Markdown documents. I render your Markdown contents real-time into HTML, and display them in a preview panel.\n\n![MacDown Screenshot](http://d.pr/i/10UGP+)\n\nI support all the original Markdown syntaxes. But I can do so much more! Various popular but non-standard syntaxes can be turned on/off from the [**Markdown** preference pane](#markdown-pane).\n\nYou can specify extra HTML rendering options through the [**Rendering** preference pane](#rendering-pane).\n\nYou can customize the editor window to you liking in the [**Editor** preferences pane](#editor-pane):\n\nYou can configure various application (that's me!) behaviors in the [**General** preference pane](#general-pane).\n\n## The Basics\nBefore I tell you about all the extra syntaxes and capabilities I have, I'll introduce you to the basics of standard markdown. If you already know markdown, and want to jump straight to learning about the fancier things I can do, I suggest you skip to the [**Markdown** preference pane](#markdown-pane). Lets jump right in.  \n\n### Line Breaks\nTo force a line break, put two spaces and a newline (return) at the end of the line.\n\n* This two-line bullet \nwon't break\n\n* This two-line bullet  \nwill break\n\nHere is the code:\n\n```\n* This two-line bullet \nwon't break\n\n* This two-line bullet  \nwill break\n```\n\n### Strong and Emphasize\n\n**Strong**: `**Strong**` or `__Strong__` (Command-B)  \n*Emphasize*: `*Emphasize*` or `_Emphasize_`[^emphasize] (Command-I)\n\n### Headers (like this one!)\n\n    Header 1\n    ========\n\n    Header 2\n    --------\n\nor\n\n    # Header 1\n    ## Header 2\n    ### Header 3\n    #### Header 4\n    ##### Header 5\n    ###### Header 6\n\n\n\n### Links and Email\n#### Inline\nJust put angle brackets around an email and it becomes clickable: <uranusjr@gmail.com>  \n`<uranusjr@gmail.com>`  \n\nSame thing with urls: <http://macdown.uranusjr.com>  \n` <http://macdown.uranusjr.com>`  \n\nPerhaps you want to some link text like this: [Macdown Website](http://macdown.uranusjr.com \"Title\")  \n`[Macdown Website](http://macdown.uranusjr.com \"Title\")` (The title is optional)  \n\n\n#### Reference style\nSometimes it looks too messy to include big long urls inline, or you want to keep all your urls together.  \n\nMake [a link][arbitrary_id] `[a link][arbitrary_id]` then on it's own line anywhere else in the file:  \n`[arbitrary_id]: http://macdown.uranusjr.com \"Title\"`\n  \nIf the link text itself would make a good id, you can link [like this][] `[like this][]`, then on it's own line anywhere else in the file:  \n`[like this]: http://macdown.uranusjr.com`  \n\n[arbitrary_id]: http://macdown.uranusjr.com \"Title\"\n[like this]: http://macdown.uranusjr.com  \n\n\n### Images\n#### Inline\n`![Alt Image Text](path/or/url/to.jpg \"Optional Title\")`\n#### Reference style\n`![Alt Image Text][image-id]`  \non it's own line elsewhere:  \n`[image-id]: path/or/url/to.jpg \"Optional Title\"`\n\n\n### Lists\n\n* Lists must be preceded by a blank line (or block element)\n* Unordered lists start each item with a `*`\n- `-` works too\n    * Indent a level to make a nested list\n        1. Ordered lists are supported.\n        2. Start each item (number-period-space) like `1. `\n        42. It doesn't matter what number you use, I will render them sequentially\n        1. So you might want to start each line with `1.` and let me sort it out\n\nHere is the code:\n\n```\n* Lists must be preceded by a blank line (or block element)\n* Unordered lists start each item with a `*`\n- `-` works too\n    * Indent a level to make a nested list\n        1. Ordered lists are supported.\n        2. Start each item (number-period-space) like `1. `\n        42. It doesn't matter what number you use, I will render them sequentially\n        1. So you might want to start each line with `1.` and let me sort it out\n```\n\n\n\n### Block Quote\n\n> Angle brackets `>` are used for block quotes.  \nTechnically not every line needs to start with a `>` as long as\nthere are no empty lines between paragraphs.  \n> Looks kinda ugly though.\n> > Block quotes can be nested.  \n> > > Multiple Levels\n>\n> Most markdown syntaxes work inside block quotes.\n>\n> * Lists\n> * [Links][arbitrary_id]\n> * Etc.\n\nHere is the code:\n\n```\n> Angle brackets `>` are used for block quotes.  \nTechnically not every line needs to start with a `>` as long as\nthere are no empty lines between paragraphs.  \n> Looks kinda ugly though.\n> > Block quotes can be nested.  \n> > > Multiple Levels\n>\n> Most markdown syntaxes work inside block quotes.\n>\n> * Lists\n> * [Links][arbitrary_id]\n> * Etc.\n```\n  \n  \n### Inline Code\n`Inline code` is indicated by surrounding it with backticks:  \n`` `Inline code` ``\n\nIf your ``code has `backticks` `` that need to be displayed, you can use double backticks:  \n```` ``Code with `backticks` `` ````  (mind the spaces preceding the final set of backticks)\n\n\n### Block Code\nIf you indent at least four spaces or one tab, I'll display a code block.\n\n    print('This is a code block')\n    print('The block must be preceded by a blank line')\n    print('Then indent at least 4 spaces or 1 tab')\n        print('Nesting does nothing. Your code is displayed Literally')\n\nI also know how to do something called [Fenced Code Blocks](#fenced-code-block) which I will tell you about later.\n\n### Horizontal Rules\nIf you type three asterisks `***` or three dashes `---` on a line, I'll display a horizontal rule:\n\n***\n\n\n## <a name=\"markdown-pane\"></a>The Markdown Preference Pane\nThis is where I keep all preferences related to how I parse markdown into html.  \n![Markdown preferences pane](http://d.pr/i/RQEi+)\n\n### Document Formatting\nThe ***Smartypants*** extension automatically transforms straight quotes (`\"` and `'`) in your text into typographer’s quotes (`“`, `”`, `‘`, and `’`) according to the context. Very useful if you’re a typography freak like I am. Quote and Smartypants are syntactically incompatible. If both are enabled, Quote takes precedence.\n\n\n### Block Formatting\n\n#### Table\n\nThis is a table:\n\nFirst Header  | Second Header\n------------- | -------------\nContent Cell  | Content Cell\nContent Cell  | Content Cell\n\nYou can align cell contents with syntax like this:\n\n| Left Aligned  | Center Aligned  | Right Aligned |\n|:------------- |:---------------:| -------------:|\n| col 3 is      | some wordy text |         $1600 |\n| col 2 is      | centered        |           $12 |\n| zebra stripes | are neat        |            $1 |\n\nThe left- and right-most pipes (`|`) are only aesthetic, and can be omitted. The spaces don’t matter, either. Alignment depends solely on `:` marks.\n\n#### <a name=\"fenced-code-block\">Fenced Code Block</a>\n\nThis is a fenced code block:\n\n```\nprint('Hello world!')\n```\n\nYou can also use waves (`~`) instead of back ticks (`` ` ``):\n\n~~~\nprint('Hello world!')\n~~~\n\n\nYou can add an optional language ID at the end of the first line. The language ID will only be used to highlight the code inside if you tick the ***Enable highlighting in code blocks*** option. This is what happens if you enable it:\n\n![Syntax highlighting example](http://d.pr/i/9HM6+)\n\nI support many popular languages as well as some generic syntax descriptions that can be used if your language of choice is not supported. See [relevant sections on the official site](http://macdown.uranusjr.com/features/) for a full list of supported syntaxes.\n\n\n### Inline Formatting\n\nThe following is a list of optional inline markups supported:\n\nOption name         | Markup           | Result if enabled     |\n--------------------|------------------|-----------------------|\nIntra-word emphasis | So A\\*maz\\*ing   | So A<em>maz</em>ing   |\nStrikethrough       | \\~~Much wow\\~~   | <del>Much wow</del>   |\nUnderline [^under]  | \\_So doge\\_      | <u>So doge</u>        |\nQuote [^quote]      | \\\"Such editor\\\"  | <q>Such editor</q>    |\nHighlight           | \\==So good\\==    | <mark>So good</mark>  |\nSuperscript         | hoge\\^(fuga)     | hoge<sup>fuga</sup>   |\nAutolink            | http://t.co      | <http://t.co>         |\nFootnotes           | [\\^4] and [\\^4]: | [^4] and footnote 4   |\n\n[^4]: You don't have to use a number. Arbitrary things like `[^footy note4]` and `[^footy note4]:` will also work. But they will *render* as numbered footnotes. Also, no need to keep your footnotes in order, I will sort out the order for you so they appear in the same order they were referenced in the text body. You can even keep some footnotes near where you referenced them, and collect others at the bottom of the file in the traditional place for footnotes. \n\n\n\n\n## <a name=\"rendering-pane\"></a>The Rendering Preference Pane\nThis is where I keep preferences relating to how I render and style the parsed markdown in the preview window.  \n![Rendering preferences pane](http://d.pr/i/rT4d+)\n\n### CSS\nYou can choose different css files for me to use to render your html. You can even customize or add your own custom css files.\n\n### Syntax Highlighting\nYou have already seen how I can syntax highlight your fenced code blocks. See the [Fenced Code Block](#fenced-code-block) section if you haven’t! You can also choose different themes for syntax highlighting.\n\n### TeX-like Math Syntax\nI can also render TeX-like math syntaxes, if you allow me to.[^math] I can do inline math like this: \\\\( 1 + 1 \\\\) or this (in MathML): <math><mn>1</mn><mo>+</mo><mn>1</mn></math>, and block math:\n\n\\\\[\n    A^T_S = B\n\\\\]\n\nor (in MathML)\n\n<math display=\"block\">\n    <msubsup><mi>A</mi> <mi>S</mi> <mi>T</mi></msubsup>\n    <mo>=</mo>\n    <mi>B</mi>\n</math>\n\n\n\n### Task List Syntax\n1. [x] I can render checkbox list syntax\n    * [x] I support nesting\n    * [x] I support ordered *and* unordered lists\n2. [ ] I don't support clicking checkboxes directly in the html window\n\n\n### Jekyll front-matter\nIf you like, I can display Jekyll front-matter in a nice table. Just make sure you put the front-matter at the very beginning of the file, and fence it with `---`. For example:\n\n```\n---\ntitle: \"Macdown is my friend\"\ndate: 2014-06-06 20:00:00\n---\n```\n\n### Render newline literally\nNormally I require you to put two spaces and a newline (aka return) at the end of a line in order to create a line break. If you like, I can render a newline any time you end a line with a newline. However, if you enable this, markdown that looks lovely when I render it might look pretty funky when you let some *other* program render it.\n\n\n\n\n\n## <a name=\"general-pane\"></a>The General Preferences Pane\n\nThis is where I keep preferences related to application behavior.  \n![General preferences pane](http://d.pr/i/rvwu+)\n\nThe General Preferences Pane allows you to tell me how you want me to behave. For example, do you want me to make sure there is a document open when I launch? You can also tell me if I should constantly update the preview window as you type, or wait for you to hit `command-R` instead. Maybe you prefer your editor window on the right? Or to see the word-count as you type. This is also the place to tell me if you are interested in pre-releases of me, or just want to stick to better-tested official releases.  \n\n## <a name=\"editor-pane\"></a>The Editor Preference Pane\nThis is where I keep preferences related to the behavior and styling of the editing window.  \n![Editor preferences pane](http://d.pr/i/6OL5+)\n\n\n### Styling\n\nMy editor provides syntax highlighting. You can edit the base font and the coloring/sizing theme. I provided some default themes (courtesy of [Mou](http://mouapp.com)’s creator, Chen Luo) if you don’t know where to start.\n\nYou can also edit, or even add new themes if you want to! Just click the ***Reveal*** button, and start moving things around. Remember to use the correct file extension (`.styles`), though. I’m picky about that.\n\nI offer auto-completion and other functions to ease your editing experience. If you don’t like it, however, you can turn them off.\n\n\n\n\n\n## Hack On\n\nThat’s about it. Thanks for listening. I’ll be quiet from now on (unless there’s an update about the app—I’ll remind you for that!).\n\nHappy writing!\n\n\n[^emphasize]: If **Underlines** is turned on, `_this notation_` will render as underlined instead of emphasized \n\n[^under]: If **Underline** is disabled `_this_` will be rendered as *emphasized* instead of being underlined.\n\n[^quote]: **Quote** replaces literal `\"` characters with html `<q>` tags. **Quote** and **Smartypants** are syntactically incompatible. If both are enabled, **Quote** takes precedence. Note that **Quote** is different from *blockquote*, which is part of standard Markdown.\n\n[^math]: Internet connection required.\n\n\n","slug":"macdown_intro","published":1,"updated":"2020-06-22T07:49:41.292Z","_id":"ckbq74rf80001nc3j36ry28et","comments":1,"layout":"post","photos":[],"link":"","content":"<p>MacDown的一些简单介绍，摘自于MacDown的help页面</p>\n<a id=\"more\"></a>\n\n<h1 id=\"MacDown介绍\"><a href=\"#MacDown介绍\" class=\"headerlink\" title=\"MacDown介绍\"></a>MacDown介绍</h1><p><img src=\"http://macdown.uranusjr.com/static/images/logo-160.png\" alt=\"MacDown logo\"></p>\n<p>Hello there! I’m <strong>MacDown</strong>, the open source Markdown editor for OS X.</p>\n<p>Let me introduce myself.</p>\n<h2 id=\"Markdown-and-I\"><a href=\"#Markdown-and-I\" class=\"headerlink\" title=\"Markdown and I\"></a>Markdown and I</h2><p><strong>Markdown</strong> is a plain text formatting syntax created by John Gruber, aiming to provide a easy-to-read and feasible markup. The original Markdown syntax specification can be found <a href=\"http://daringfireball.net/projects/markdown/syntax\" target=\"_blank\" rel=\"noopener\">here</a>.</p>\n<p><strong>MacDown</strong> is created as a simple-to-use editor for Markdown documents. I render your Markdown contents real-time into HTML, and display them in a preview panel.</p>\n<p><img src=\"http://d.pr/i/10UGP+\" alt=\"MacDown Screenshot\"></p>\n<p>I support all the original Markdown syntaxes. But I can do so much more! Various popular but non-standard syntaxes can be turned on/off from the <a href=\"#markdown-pane\"><strong>Markdown</strong> preference pane</a>.</p>\n<p>You can specify extra HTML rendering options through the <a href=\"#rendering-pane\"><strong>Rendering</strong> preference pane</a>.</p>\n<p>You can customize the editor window to you liking in the <a href=\"#editor-pane\"><strong>Editor</strong> preferences pane</a>:</p>\n<p>You can configure various application (that’s me!) behaviors in the <a href=\"#general-pane\"><strong>General</strong> preference pane</a>.</p>\n<h2 id=\"The-Basics\"><a href=\"#The-Basics\" class=\"headerlink\" title=\"The Basics\"></a>The Basics</h2><p>Before I tell you about all the extra syntaxes and capabilities I have, I’ll introduce you to the basics of standard markdown. If you already know markdown, and want to jump straight to learning about the fancier things I can do, I suggest you skip to the <a href=\"#markdown-pane\"><strong>Markdown</strong> preference pane</a>. Lets jump right in.  </p>\n<h3 id=\"Line-Breaks\"><a href=\"#Line-Breaks\" class=\"headerlink\" title=\"Line Breaks\"></a>Line Breaks</h3><p>To force a line break, put two spaces and a newline (return) at the end of the line.</p>\n<ul>\n<li><p>This two-line bullet<br>won’t break</p>\n</li>\n<li><p>This two-line bullet<br>will break</p>\n</li>\n</ul>\n<p>Here is the code:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* This two-line bullet </span><br><span class=\"line\">won&#39;t break</span><br><span class=\"line\"></span><br><span class=\"line\">* This two-line bullet  </span><br><span class=\"line\">will break</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Strong-and-Emphasize\"><a href=\"#Strong-and-Emphasize\" class=\"headerlink\" title=\"Strong and Emphasize\"></a>Strong and Emphasize</h3><p><strong>Strong</strong>: <code>**Strong**</code> or <code>__Strong__</code> (Command-B)<br><em>Emphasize</em>: <code>*Emphasize*</code> or <code>_Emphasize_</code>[^emphasize] (Command-I)</p>\n<h3 id=\"Headers-like-this-one\"><a href=\"#Headers-like-this-one\" class=\"headerlink\" title=\"Headers (like this one!)\"></a>Headers (like this one!)</h3><pre><code>Header 1\n========\n\nHeader 2\n--------</code></pre><p>or</p>\n<pre><code># Header 1\n## Header 2\n### Header 3\n#### Header 4\n##### Header 5\n###### Header 6</code></pre><h3 id=\"Links-and-Email\"><a href=\"#Links-and-Email\" class=\"headerlink\" title=\"Links and Email\"></a>Links and Email</h3><h4 id=\"Inline\"><a href=\"#Inline\" class=\"headerlink\" title=\"Inline\"></a>Inline</h4><p>Just put angle brackets around an email and it becomes clickable: <a href=\"mailto:&#x75;&#x72;&#x61;&#x6e;&#117;&#115;&#106;&#x72;&#64;&#103;&#x6d;&#x61;&#x69;&#108;&#x2e;&#99;&#x6f;&#x6d;\">&#x75;&#x72;&#x61;&#x6e;&#117;&#115;&#106;&#x72;&#64;&#103;&#x6d;&#x61;&#x69;&#108;&#x2e;&#99;&#x6f;&#x6d;</a><br><code>&lt;uranusjr@gmail.com&gt;</code>  </p>\n<p>Same thing with urls: <a href=\"http://macdown.uranusjr.com\" target=\"_blank\" rel=\"noopener\">http://macdown.uranusjr.com</a><br><code>&lt;http://macdown.uranusjr.com&gt;</code>  </p>\n<p>Perhaps you want to some link text like this: <a href=\"http://macdown.uranusjr.com\" target=\"_blank\" rel=\"noopener\" title=\"Title\">Macdown Website</a><br><code>[Macdown Website](http://macdown.uranusjr.com &quot;Title&quot;)</code> (The title is optional)  </p>\n<h4 id=\"Reference-style\"><a href=\"#Reference-style\" class=\"headerlink\" title=\"Reference style\"></a>Reference style</h4><p>Sometimes it looks too messy to include big long urls inline, or you want to keep all your urls together.  </p>\n<p>Make <a href=\"http://macdown.uranusjr.com\" target=\"_blank\" rel=\"noopener\" title=\"Title\">a link</a> <code>[a link][arbitrary_id]</code> then on it’s own line anywhere else in the file:<br><code>[arbitrary_id]: http://macdown.uranusjr.com &quot;Title&quot;</code></p>\n<p>If the link text itself would make a good id, you can link <a href=\"http://macdown.uranusjr.com\" target=\"_blank\" rel=\"noopener\">like this</a> <code>[like this][]</code>, then on it’s own line anywhere else in the file:<br><code>[like this]: http://macdown.uranusjr.com</code>  </p>\n<h3 id=\"Images\"><a href=\"#Images\" class=\"headerlink\" title=\"Images\"></a>Images</h3><h4 id=\"Inline-1\"><a href=\"#Inline-1\" class=\"headerlink\" title=\"Inline\"></a>Inline</h4><p><code>![Alt Image Text](path/or/url/to.jpg &quot;Optional Title&quot;)</code></p>\n<h4 id=\"Reference-style-1\"><a href=\"#Reference-style-1\" class=\"headerlink\" title=\"Reference style\"></a>Reference style</h4><p><code>![Alt Image Text][image-id]</code><br>on it’s own line elsewhere:<br><code>[image-id]: path/or/url/to.jpg &quot;Optional Title&quot;</code></p>\n<h3 id=\"Lists\"><a href=\"#Lists\" class=\"headerlink\" title=\"Lists\"></a>Lists</h3><ul>\n<li>Lists must be preceded by a blank line (or block element)</li>\n<li>Unordered lists start each item with a <code>*</code></li>\n</ul>\n<ul>\n<li><code>-</code> works too<ul>\n<li>Indent a level to make a nested list<ol>\n<li>Ordered lists are supported.</li>\n<li>Start each item (number-period-space) like <code>1.</code></li>\n<li>It doesn’t matter what number you use, I will render them sequentially</li>\n<li>So you might want to start each line with <code>1.</code> and let me sort it out</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n<p>Here is the code:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* Lists must be preceded by a blank line (or block element)</span><br><span class=\"line\">* Unordered lists start each item with a &#96;*&#96;</span><br><span class=\"line\">- &#96;-&#96; works too</span><br><span class=\"line\">    * Indent a level to make a nested list</span><br><span class=\"line\">        1. Ordered lists are supported.</span><br><span class=\"line\">        2. Start each item (number-period-space) like &#96;1. &#96;</span><br><span class=\"line\">        42. It doesn&#39;t matter what number you use, I will render them sequentially</span><br><span class=\"line\">        1. So you might want to start each line with &#96;1.&#96; and let me sort it out</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"Block-Quote\"><a href=\"#Block-Quote\" class=\"headerlink\" title=\"Block Quote\"></a>Block Quote</h3><blockquote>\n<p>Angle brackets <code>&gt;</code> are used for block quotes.<br>Technically not every line needs to start with a <code>&gt;</code> as long as<br>there are no empty lines between paragraphs.<br>Looks kinda ugly though.</p>\n<blockquote>\n<p>Block quotes can be nested.  </p>\n<blockquote>\n<p>Multiple Levels</p>\n</blockquote>\n</blockquote>\n<p>Most markdown syntaxes work inside block quotes.</p>\n<ul>\n<li>Lists</li>\n<li><a href=\"http://macdown.uranusjr.com\" target=\"_blank\" rel=\"noopener\" title=\"Title\">Links</a></li>\n<li>Etc.</li>\n</ul>\n</blockquote>\n<p>Here is the code:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; Angle brackets &#96;&gt;&#96; are used for block quotes.  </span><br><span class=\"line\">Technically not every line needs to start with a &#96;&gt;&#96; as long as</span><br><span class=\"line\">there are no empty lines between paragraphs.  </span><br><span class=\"line\">&gt; Looks kinda ugly though.</span><br><span class=\"line\">&gt; &gt; Block quotes can be nested.  </span><br><span class=\"line\">&gt; &gt; &gt; Multiple Levels</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&gt; Most markdown syntaxes work inside block quotes.</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&gt; * Lists</span><br><span class=\"line\">&gt; * [Links][arbitrary_id]</span><br><span class=\"line\">&gt; * Etc.</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"Inline-Code\"><a href=\"#Inline-Code\" class=\"headerlink\" title=\"Inline Code\"></a>Inline Code</h3><p><code>Inline code</code> is indicated by surrounding it with backticks:<br><code>`Inline code`</code></p>\n<p>If your <code>code has `backticks`</code> that need to be displayed, you can use double backticks:  </p>\n<figure class=\"highlight plain\"><figcaption><span>``Code with `backticks` `` ````  (mind the spaces preceding the final set of backticks)</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">### Block Code</span><br><span class=\"line\">If you indent at least four spaces or one tab, I&#39;ll display a code block.</span><br><span class=\"line\"></span><br><span class=\"line\">    print(&#39;This is a code block&#39;)</span><br><span class=\"line\">    print(&#39;The block must be preceded by a blank line&#39;)</span><br><span class=\"line\">    print(&#39;Then indent at least 4 spaces or 1 tab&#39;)</span><br><span class=\"line\">        print(&#39;Nesting does nothing. Your code is displayed Literally&#39;)</span><br><span class=\"line\"></span><br><span class=\"line\">I also know how to do something called [Fenced Code Blocks](#fenced-code-block) which I will tell you about later.</span><br><span class=\"line\"></span><br><span class=\"line\">### Horizontal Rules</span><br><span class=\"line\">If you type three asterisks &#96;***&#96; or three dashes &#96;---&#96; on a line, I&#39;ll display a horizontal rule:</span><br><span class=\"line\"></span><br><span class=\"line\">***</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">## &lt;a name&#x3D;&quot;markdown-pane&quot;&gt;&lt;&#x2F;a&gt;The Markdown Preference Pane</span><br><span class=\"line\">This is where I keep all preferences related to how I parse markdown into html.  </span><br><span class=\"line\">![Markdown preferences pane](http:&#x2F;&#x2F;d.pr&#x2F;i&#x2F;RQEi+)</span><br><span class=\"line\"></span><br><span class=\"line\">### Document Formatting</span><br><span class=\"line\">The ***Smartypants*** extension automatically transforms straight quotes (&#96;&quot;&#96; and &#96;&#39;&#96;) in your text into typographer’s quotes (&#96;“&#96;, &#96;”&#96;, &#96;‘&#96;, and &#96;’&#96;) according to the context. Very useful if you’re a typography freak like I am. Quote and Smartypants are syntactically incompatible. If both are enabled, Quote takes precedence.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">### Block Formatting</span><br><span class=\"line\"></span><br><span class=\"line\">#### Table</span><br><span class=\"line\"></span><br><span class=\"line\">This is a table:</span><br><span class=\"line\"></span><br><span class=\"line\">First Header  | Second Header</span><br><span class=\"line\">------------- | -------------</span><br><span class=\"line\">Content Cell  | Content Cell</span><br><span class=\"line\">Content Cell  | Content Cell</span><br><span class=\"line\"></span><br><span class=\"line\">You can align cell contents with syntax like this:</span><br><span class=\"line\"></span><br><span class=\"line\">| Left Aligned  | Center Aligned  | Right Aligned |</span><br><span class=\"line\">|:------------- |:---------------:| -------------:|</span><br><span class=\"line\">| col 3 is      | some wordy text |         $1600 |</span><br><span class=\"line\">| col 2 is      | centered        |           $12 |</span><br><span class=\"line\">| zebra stripes | are neat        |            $1 |</span><br><span class=\"line\"></span><br><span class=\"line\">The left- and right-most pipes (&#96;|&#96;) are only aesthetic, and can be omitted. The spaces don’t matter, either. Alignment depends solely on &#96;:&#96; marks.</span><br><span class=\"line\"></span><br><span class=\"line\">#### &lt;a name&#x3D;&quot;fenced-code-block&quot;&gt;Fenced Code Block&lt;&#x2F;a&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">This is a fenced code block:</span><br></pre></td></tr></table></figure>\n<p>print(‘Hello world!’)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">You can also use waves (&#96;~&#96;) instead of back ticks (&#96;&#96; &#96; &#96;&#96;):</span><br><span class=\"line\"></span><br><span class=\"line\">~~~</span><br><span class=\"line\">print(&#39;Hello world!&#39;)</span><br><span class=\"line\">~~~</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">You can add an optional language ID at the end of the first line. The language ID will only be used to highlight the code inside if you tick the ***Enable highlighting in code blocks*** option. This is what happens if you enable it:</span><br><span class=\"line\"></span><br><span class=\"line\">![Syntax highlighting example](http:&#x2F;&#x2F;d.pr&#x2F;i&#x2F;9HM6+)</span><br><span class=\"line\"></span><br><span class=\"line\">I support many popular languages as well as some generic syntax descriptions that can be used if your language of choice is not supported. See [relevant sections on the official site](http:&#x2F;&#x2F;macdown.uranusjr.com&#x2F;features&#x2F;) for a full list of supported syntaxes.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">### Inline Formatting</span><br><span class=\"line\"></span><br><span class=\"line\">The following is a list of optional inline markups supported:</span><br><span class=\"line\"></span><br><span class=\"line\">Option name         | Markup           | Result if enabled     |</span><br><span class=\"line\">--------------------|------------------|-----------------------|</span><br><span class=\"line\">Intra-word emphasis | So A\\*maz\\*ing   | So A&lt;em&gt;maz&lt;&#x2F;em&gt;ing   |</span><br><span class=\"line\">Strikethrough       | \\~~Much wow\\~~   | &lt;del&gt;Much wow&lt;&#x2F;del&gt;   |</span><br><span class=\"line\">Underline [^under]  | \\_So doge\\_      | &lt;u&gt;So doge&lt;&#x2F;u&gt;        |</span><br><span class=\"line\">Quote [^quote]      | \\&quot;Such editor\\&quot;  | &lt;q&gt;Such editor&lt;&#x2F;q&gt;    |</span><br><span class=\"line\">Highlight           | \\&#x3D;&#x3D;So good\\&#x3D;&#x3D;    | &lt;mark&gt;So good&lt;&#x2F;mark&gt;  |</span><br><span class=\"line\">Superscript         | hoge\\^(fuga)     | hoge&lt;sup&gt;fuga&lt;&#x2F;sup&gt;   |</span><br><span class=\"line\">Autolink            | http:&#x2F;&#x2F;t.co      | &lt;http:&#x2F;&#x2F;t.co&gt;         |</span><br><span class=\"line\">Footnotes           | [\\^4] and [\\^4]: | [^4] and footnote 4   |</span><br><span class=\"line\"></span><br><span class=\"line\">[^4]: You don&#39;t have to use a number. Arbitrary things like &#96;[^footy note4]&#96; and &#96;[^footy note4]:&#96; will also work. But they will *render* as numbered footnotes. Also, no need to keep your footnotes in order, I will sort out the order for you so they appear in the same order they were referenced in the text body. You can even keep some footnotes near where you referenced them, and collect others at the bottom of the file in the traditional place for footnotes. </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">## &lt;a name&#x3D;&quot;rendering-pane&quot;&gt;&lt;&#x2F;a&gt;The Rendering Preference Pane</span><br><span class=\"line\">This is where I keep preferences relating to how I render and style the parsed markdown in the preview window.  </span><br><span class=\"line\">![Rendering preferences pane](http:&#x2F;&#x2F;d.pr&#x2F;i&#x2F;rT4d+)</span><br><span class=\"line\"></span><br><span class=\"line\">### CSS</span><br><span class=\"line\">You can choose different css files for me to use to render your html. You can even customize or add your own custom css files.</span><br><span class=\"line\"></span><br><span class=\"line\">### Syntax Highlighting</span><br><span class=\"line\">You have already seen how I can syntax highlight your fenced code blocks. See the [Fenced Code Block](#fenced-code-block) section if you haven’t! You can also choose different themes for syntax highlighting.</span><br><span class=\"line\"></span><br><span class=\"line\">### TeX-like Math Syntax</span><br><span class=\"line\">I can also render TeX-like math syntaxes, if you allow me to.[^math] I can do inline math like this: \\\\( 1 + 1 \\\\) or this (in MathML): &lt;math&gt;&lt;mn&gt;1&lt;&#x2F;mn&gt;&lt;mo&gt;+&lt;&#x2F;mo&gt;&lt;mn&gt;1&lt;&#x2F;mn&gt;&lt;&#x2F;math&gt;, and block math:</span><br><span class=\"line\"></span><br><span class=\"line\">\\\\[</span><br><span class=\"line\">    A^T_S &#x3D; B</span><br><span class=\"line\">\\\\]</span><br><span class=\"line\"></span><br><span class=\"line\">or (in MathML)</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;math display&#x3D;&quot;block&quot;&gt;</span><br><span class=\"line\">    &lt;msubsup&gt;&lt;mi&gt;A&lt;&#x2F;mi&gt; &lt;mi&gt;S&lt;&#x2F;mi&gt; &lt;mi&gt;T&lt;&#x2F;mi&gt;&lt;&#x2F;msubsup&gt;</span><br><span class=\"line\">    &lt;mo&gt;&#x3D;&lt;&#x2F;mo&gt;</span><br><span class=\"line\">    &lt;mi&gt;B&lt;&#x2F;mi&gt;</span><br><span class=\"line\">&lt;&#x2F;math&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">### Task List Syntax</span><br><span class=\"line\">1. [x] I can render checkbox list syntax</span><br><span class=\"line\">    * [x] I support nesting</span><br><span class=\"line\">    * [x] I support ordered *and* unordered lists</span><br><span class=\"line\">2. [ ] I don&#39;t support clicking checkboxes directly in the html window</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">### Jekyll front-matter</span><br><span class=\"line\">If you like, I can display Jekyll front-matter in a nice table. Just make sure you put the front-matter at the very beginning of the file, and fence it with &#96;---&#96;. For example:</span><br></pre></td></tr></table></figure>\n<hr>\n<p>title: “Macdown is my friend”<br>date: 2014-06-06 20:00:00</p>\n<hr>\n<pre><code>\n### Render newline literally\nNormally I require you to put two spaces and a newline (aka return) at the end of a line in order to create a line break. If you like, I can render a newline any time you end a line with a newline. However, if you enable this, markdown that looks lovely when I render it might look pretty funky when you let some *other* program render it.\n\n\n\n\n\n## &lt;a name=&quot;general-pane&quot;&gt;&lt;/a&gt;The General Preferences Pane\n\nThis is where I keep preferences related to application behavior.  \n![General preferences pane](http://d.pr/i/rvwu+)\n\nThe General Preferences Pane allows you to tell me how you want me to behave. For example, do you want me to make sure there is a document open when I launch? You can also tell me if I should constantly update the preview window as you type, or wait for you to hit `command-R` instead. Maybe you prefer your editor window on the right? Or to see the word-count as you type. This is also the place to tell me if you are interested in pre-releases of me, or just want to stick to better-tested official releases.  \n\n## &lt;a name=&quot;editor-pane&quot;&gt;&lt;/a&gt;The Editor Preference Pane\nThis is where I keep preferences related to the behavior and styling of the editing window.  \n![Editor preferences pane](http://d.pr/i/6OL5+)\n\n\n### Styling\n\nMy editor provides syntax highlighting. You can edit the base font and the coloring/sizing theme. I provided some default themes (courtesy of [Mou](http://mouapp.com)’s creator, Chen Luo) if you don’t know where to start.\n\nYou can also edit, or even add new themes if you want to! Just click the ***Reveal*** button, and start moving things around. Remember to use the correct file extension (`.styles`), though. I’m picky about that.\n\nI offer auto-completion and other functions to ease your editing experience. If you don’t like it, however, you can turn them off.\n\n\n\n\n\n## Hack On\n\nThat’s about it. Thanks for listening. I’ll be quiet from now on (unless there’s an update about the app—I’ll remind you for that!).\n\nHappy writing!\n\n\n[^emphasize]: If **Underlines** is turned on, `_this notation_` will render as underlined instead of emphasized \n\n[^under]: If **Underline** is disabled `_this_` will be rendered as *emphasized* instead of being underlined.\n\n[^quote]: **Quote** replaces literal `&quot;` characters with html `&lt;q&gt;` tags. **Quote** and **Smartypants** are syntactically incompatible. If both are enabled, **Quote** takes precedence. Note that **Quote** is different from *blockquote*, which is part of standard Markdown.\n\n[^math]: Internet connection required.\n\n</code></pre>","site":{"data":{}},"excerpt":"<p>MacDown的一些简单介绍，摘自于MacDown的help页面</p>","more":"<h1 id=\"MacDown介绍\"><a href=\"#MacDown介绍\" class=\"headerlink\" title=\"MacDown介绍\"></a>MacDown介绍</h1><p><img src=\"http://macdown.uranusjr.com/static/images/logo-160.png\" alt=\"MacDown logo\"></p>\n<p>Hello there! I’m <strong>MacDown</strong>, the open source Markdown editor for OS X.</p>\n<p>Let me introduce myself.</p>\n<h2 id=\"Markdown-and-I\"><a href=\"#Markdown-and-I\" class=\"headerlink\" title=\"Markdown and I\"></a>Markdown and I</h2><p><strong>Markdown</strong> is a plain text formatting syntax created by John Gruber, aiming to provide a easy-to-read and feasible markup. The original Markdown syntax specification can be found <a href=\"http://daringfireball.net/projects/markdown/syntax\" target=\"_blank\" rel=\"noopener\">here</a>.</p>\n<p><strong>MacDown</strong> is created as a simple-to-use editor for Markdown documents. I render your Markdown contents real-time into HTML, and display them in a preview panel.</p>\n<p><img src=\"http://d.pr/i/10UGP+\" alt=\"MacDown Screenshot\"></p>\n<p>I support all the original Markdown syntaxes. But I can do so much more! Various popular but non-standard syntaxes can be turned on/off from the <a href=\"#markdown-pane\"><strong>Markdown</strong> preference pane</a>.</p>\n<p>You can specify extra HTML rendering options through the <a href=\"#rendering-pane\"><strong>Rendering</strong> preference pane</a>.</p>\n<p>You can customize the editor window to you liking in the <a href=\"#editor-pane\"><strong>Editor</strong> preferences pane</a>:</p>\n<p>You can configure various application (that’s me!) behaviors in the <a href=\"#general-pane\"><strong>General</strong> preference pane</a>.</p>\n<h2 id=\"The-Basics\"><a href=\"#The-Basics\" class=\"headerlink\" title=\"The Basics\"></a>The Basics</h2><p>Before I tell you about all the extra syntaxes and capabilities I have, I’ll introduce you to the basics of standard markdown. If you already know markdown, and want to jump straight to learning about the fancier things I can do, I suggest you skip to the <a href=\"#markdown-pane\"><strong>Markdown</strong> preference pane</a>. Lets jump right in.  </p>\n<h3 id=\"Line-Breaks\"><a href=\"#Line-Breaks\" class=\"headerlink\" title=\"Line Breaks\"></a>Line Breaks</h3><p>To force a line break, put two spaces and a newline (return) at the end of the line.</p>\n<ul>\n<li><p>This two-line bullet<br>won’t break</p>\n</li>\n<li><p>This two-line bullet<br>will break</p>\n</li>\n</ul>\n<p>Here is the code:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* This two-line bullet </span><br><span class=\"line\">won&#39;t break</span><br><span class=\"line\"></span><br><span class=\"line\">* This two-line bullet  </span><br><span class=\"line\">will break</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Strong-and-Emphasize\"><a href=\"#Strong-and-Emphasize\" class=\"headerlink\" title=\"Strong and Emphasize\"></a>Strong and Emphasize</h3><p><strong>Strong</strong>: <code>**Strong**</code> or <code>__Strong__</code> (Command-B)<br><em>Emphasize</em>: <code>*Emphasize*</code> or <code>_Emphasize_</code>[^emphasize] (Command-I)</p>\n<h3 id=\"Headers-like-this-one\"><a href=\"#Headers-like-this-one\" class=\"headerlink\" title=\"Headers (like this one!)\"></a>Headers (like this one!)</h3><pre><code>Header 1\n========\n\nHeader 2\n--------</code></pre><p>or</p>\n<pre><code># Header 1\n## Header 2\n### Header 3\n#### Header 4\n##### Header 5\n###### Header 6</code></pre><h3 id=\"Links-and-Email\"><a href=\"#Links-and-Email\" class=\"headerlink\" title=\"Links and Email\"></a>Links and Email</h3><h4 id=\"Inline\"><a href=\"#Inline\" class=\"headerlink\" title=\"Inline\"></a>Inline</h4><p>Just put angle brackets around an email and it becomes clickable: <a href=\"mailto:&#x75;&#x72;&#x61;&#x6e;&#117;&#115;&#106;&#x72;&#64;&#103;&#x6d;&#x61;&#x69;&#108;&#x2e;&#99;&#x6f;&#x6d;\">&#x75;&#x72;&#x61;&#x6e;&#117;&#115;&#106;&#x72;&#64;&#103;&#x6d;&#x61;&#x69;&#108;&#x2e;&#99;&#x6f;&#x6d;</a><br><code>&lt;uranusjr@gmail.com&gt;</code>  </p>\n<p>Same thing with urls: <a href=\"http://macdown.uranusjr.com\" target=\"_blank\" rel=\"noopener\">http://macdown.uranusjr.com</a><br><code>&lt;http://macdown.uranusjr.com&gt;</code>  </p>\n<p>Perhaps you want to some link text like this: <a href=\"http://macdown.uranusjr.com\" target=\"_blank\" rel=\"noopener\" title=\"Title\">Macdown Website</a><br><code>[Macdown Website](http://macdown.uranusjr.com &quot;Title&quot;)</code> (The title is optional)  </p>\n<h4 id=\"Reference-style\"><a href=\"#Reference-style\" class=\"headerlink\" title=\"Reference style\"></a>Reference style</h4><p>Sometimes it looks too messy to include big long urls inline, or you want to keep all your urls together.  </p>\n<p>Make <a href=\"http://macdown.uranusjr.com\" target=\"_blank\" rel=\"noopener\" title=\"Title\">a link</a> <code>[a link][arbitrary_id]</code> then on it’s own line anywhere else in the file:<br><code>[arbitrary_id]: http://macdown.uranusjr.com &quot;Title&quot;</code></p>\n<p>If the link text itself would make a good id, you can link <a href=\"http://macdown.uranusjr.com\" target=\"_blank\" rel=\"noopener\">like this</a> <code>[like this][]</code>, then on it’s own line anywhere else in the file:<br><code>[like this]: http://macdown.uranusjr.com</code>  </p>\n<h3 id=\"Images\"><a href=\"#Images\" class=\"headerlink\" title=\"Images\"></a>Images</h3><h4 id=\"Inline-1\"><a href=\"#Inline-1\" class=\"headerlink\" title=\"Inline\"></a>Inline</h4><p><code>![Alt Image Text](path/or/url/to.jpg &quot;Optional Title&quot;)</code></p>\n<h4 id=\"Reference-style-1\"><a href=\"#Reference-style-1\" class=\"headerlink\" title=\"Reference style\"></a>Reference style</h4><p><code>![Alt Image Text][image-id]</code><br>on it’s own line elsewhere:<br><code>[image-id]: path/or/url/to.jpg &quot;Optional Title&quot;</code></p>\n<h3 id=\"Lists\"><a href=\"#Lists\" class=\"headerlink\" title=\"Lists\"></a>Lists</h3><ul>\n<li>Lists must be preceded by a blank line (or block element)</li>\n<li>Unordered lists start each item with a <code>*</code></li>\n</ul>\n<ul>\n<li><code>-</code> works too<ul>\n<li>Indent a level to make a nested list<ol>\n<li>Ordered lists are supported.</li>\n<li>Start each item (number-period-space) like <code>1.</code></li>\n<li>It doesn’t matter what number you use, I will render them sequentially</li>\n<li>So you might want to start each line with <code>1.</code> and let me sort it out</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n<p>Here is the code:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* Lists must be preceded by a blank line (or block element)</span><br><span class=\"line\">* Unordered lists start each item with a &#96;*&#96;</span><br><span class=\"line\">- &#96;-&#96; works too</span><br><span class=\"line\">    * Indent a level to make a nested list</span><br><span class=\"line\">        1. Ordered lists are supported.</span><br><span class=\"line\">        2. Start each item (number-period-space) like &#96;1. &#96;</span><br><span class=\"line\">        42. It doesn&#39;t matter what number you use, I will render them sequentially</span><br><span class=\"line\">        1. So you might want to start each line with &#96;1.&#96; and let me sort it out</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"Block-Quote\"><a href=\"#Block-Quote\" class=\"headerlink\" title=\"Block Quote\"></a>Block Quote</h3><blockquote>\n<p>Angle brackets <code>&gt;</code> are used for block quotes.<br>Technically not every line needs to start with a <code>&gt;</code> as long as<br>there are no empty lines between paragraphs.<br>Looks kinda ugly though.</p>\n<blockquote>\n<p>Block quotes can be nested.  </p>\n<blockquote>\n<p>Multiple Levels</p>\n</blockquote>\n</blockquote>\n<p>Most markdown syntaxes work inside block quotes.</p>\n<ul>\n<li>Lists</li>\n<li><a href=\"http://macdown.uranusjr.com\" target=\"_blank\" rel=\"noopener\" title=\"Title\">Links</a></li>\n<li>Etc.</li>\n</ul>\n</blockquote>\n<p>Here is the code:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; Angle brackets &#96;&gt;&#96; are used for block quotes.  </span><br><span class=\"line\">Technically not every line needs to start with a &#96;&gt;&#96; as long as</span><br><span class=\"line\">there are no empty lines between paragraphs.  </span><br><span class=\"line\">&gt; Looks kinda ugly though.</span><br><span class=\"line\">&gt; &gt; Block quotes can be nested.  </span><br><span class=\"line\">&gt; &gt; &gt; Multiple Levels</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&gt; Most markdown syntaxes work inside block quotes.</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&gt; * Lists</span><br><span class=\"line\">&gt; * [Links][arbitrary_id]</span><br><span class=\"line\">&gt; * Etc.</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"Inline-Code\"><a href=\"#Inline-Code\" class=\"headerlink\" title=\"Inline Code\"></a>Inline Code</h3><p><code>Inline code</code> is indicated by surrounding it with backticks:<br><code>`Inline code`</code></p>\n<p>If your <code>code has `backticks`</code> that need to be displayed, you can use double backticks:  </p>\n<figure class=\"highlight plain\"><figcaption><span>``Code with `backticks` `` ````  (mind the spaces preceding the final set of backticks)</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">### Block Code</span><br><span class=\"line\">If you indent at least four spaces or one tab, I&#39;ll display a code block.</span><br><span class=\"line\"></span><br><span class=\"line\">    print(&#39;This is a code block&#39;)</span><br><span class=\"line\">    print(&#39;The block must be preceded by a blank line&#39;)</span><br><span class=\"line\">    print(&#39;Then indent at least 4 spaces or 1 tab&#39;)</span><br><span class=\"line\">        print(&#39;Nesting does nothing. Your code is displayed Literally&#39;)</span><br><span class=\"line\"></span><br><span class=\"line\">I also know how to do something called [Fenced Code Blocks](#fenced-code-block) which I will tell you about later.</span><br><span class=\"line\"></span><br><span class=\"line\">### Horizontal Rules</span><br><span class=\"line\">If you type three asterisks &#96;***&#96; or three dashes &#96;---&#96; on a line, I&#39;ll display a horizontal rule:</span><br><span class=\"line\"></span><br><span class=\"line\">***</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">## &lt;a name&#x3D;&quot;markdown-pane&quot;&gt;&lt;&#x2F;a&gt;The Markdown Preference Pane</span><br><span class=\"line\">This is where I keep all preferences related to how I parse markdown into html.  </span><br><span class=\"line\">![Markdown preferences pane](http:&#x2F;&#x2F;d.pr&#x2F;i&#x2F;RQEi+)</span><br><span class=\"line\"></span><br><span class=\"line\">### Document Formatting</span><br><span class=\"line\">The ***Smartypants*** extension automatically transforms straight quotes (&#96;&quot;&#96; and &#96;&#39;&#96;) in your text into typographer’s quotes (&#96;“&#96;, &#96;”&#96;, &#96;‘&#96;, and &#96;’&#96;) according to the context. Very useful if you’re a typography freak like I am. Quote and Smartypants are syntactically incompatible. If both are enabled, Quote takes precedence.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">### Block Formatting</span><br><span class=\"line\"></span><br><span class=\"line\">#### Table</span><br><span class=\"line\"></span><br><span class=\"line\">This is a table:</span><br><span class=\"line\"></span><br><span class=\"line\">First Header  | Second Header</span><br><span class=\"line\">------------- | -------------</span><br><span class=\"line\">Content Cell  | Content Cell</span><br><span class=\"line\">Content Cell  | Content Cell</span><br><span class=\"line\"></span><br><span class=\"line\">You can align cell contents with syntax like this:</span><br><span class=\"line\"></span><br><span class=\"line\">| Left Aligned  | Center Aligned  | Right Aligned |</span><br><span class=\"line\">|:------------- |:---------------:| -------------:|</span><br><span class=\"line\">| col 3 is      | some wordy text |         $1600 |</span><br><span class=\"line\">| col 2 is      | centered        |           $12 |</span><br><span class=\"line\">| zebra stripes | are neat        |            $1 |</span><br><span class=\"line\"></span><br><span class=\"line\">The left- and right-most pipes (&#96;|&#96;) are only aesthetic, and can be omitted. The spaces don’t matter, either. Alignment depends solely on &#96;:&#96; marks.</span><br><span class=\"line\"></span><br><span class=\"line\">#### &lt;a name&#x3D;&quot;fenced-code-block&quot;&gt;Fenced Code Block&lt;&#x2F;a&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">This is a fenced code block:</span><br></pre></td></tr></table></figure>\n<p>print(‘Hello world!’)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">You can also use waves (&#96;~&#96;) instead of back ticks (&#96;&#96; &#96; &#96;&#96;):</span><br><span class=\"line\"></span><br><span class=\"line\">~~~</span><br><span class=\"line\">print(&#39;Hello world!&#39;)</span><br><span class=\"line\">~~~</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">You can add an optional language ID at the end of the first line. The language ID will only be used to highlight the code inside if you tick the ***Enable highlighting in code blocks*** option. This is what happens if you enable it:</span><br><span class=\"line\"></span><br><span class=\"line\">![Syntax highlighting example](http:&#x2F;&#x2F;d.pr&#x2F;i&#x2F;9HM6+)</span><br><span class=\"line\"></span><br><span class=\"line\">I support many popular languages as well as some generic syntax descriptions that can be used if your language of choice is not supported. See [relevant sections on the official site](http:&#x2F;&#x2F;macdown.uranusjr.com&#x2F;features&#x2F;) for a full list of supported syntaxes.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">### Inline Formatting</span><br><span class=\"line\"></span><br><span class=\"line\">The following is a list of optional inline markups supported:</span><br><span class=\"line\"></span><br><span class=\"line\">Option name         | Markup           | Result if enabled     |</span><br><span class=\"line\">--------------------|------------------|-----------------------|</span><br><span class=\"line\">Intra-word emphasis | So A\\*maz\\*ing   | So A&lt;em&gt;maz&lt;&#x2F;em&gt;ing   |</span><br><span class=\"line\">Strikethrough       | \\~~Much wow\\~~   | &lt;del&gt;Much wow&lt;&#x2F;del&gt;   |</span><br><span class=\"line\">Underline [^under]  | \\_So doge\\_      | &lt;u&gt;So doge&lt;&#x2F;u&gt;        |</span><br><span class=\"line\">Quote [^quote]      | \\&quot;Such editor\\&quot;  | &lt;q&gt;Such editor&lt;&#x2F;q&gt;    |</span><br><span class=\"line\">Highlight           | \\&#x3D;&#x3D;So good\\&#x3D;&#x3D;    | &lt;mark&gt;So good&lt;&#x2F;mark&gt;  |</span><br><span class=\"line\">Superscript         | hoge\\^(fuga)     | hoge&lt;sup&gt;fuga&lt;&#x2F;sup&gt;   |</span><br><span class=\"line\">Autolink            | http:&#x2F;&#x2F;t.co      | &lt;http:&#x2F;&#x2F;t.co&gt;         |</span><br><span class=\"line\">Footnotes           | [\\^4] and [\\^4]: | [^4] and footnote 4   |</span><br><span class=\"line\"></span><br><span class=\"line\">[^4]: You don&#39;t have to use a number. Arbitrary things like &#96;[^footy note4]&#96; and &#96;[^footy note4]:&#96; will also work. But they will *render* as numbered footnotes. Also, no need to keep your footnotes in order, I will sort out the order for you so they appear in the same order they were referenced in the text body. You can even keep some footnotes near where you referenced them, and collect others at the bottom of the file in the traditional place for footnotes. </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">## &lt;a name&#x3D;&quot;rendering-pane&quot;&gt;&lt;&#x2F;a&gt;The Rendering Preference Pane</span><br><span class=\"line\">This is where I keep preferences relating to how I render and style the parsed markdown in the preview window.  </span><br><span class=\"line\">![Rendering preferences pane](http:&#x2F;&#x2F;d.pr&#x2F;i&#x2F;rT4d+)</span><br><span class=\"line\"></span><br><span class=\"line\">### CSS</span><br><span class=\"line\">You can choose different css files for me to use to render your html. You can even customize or add your own custom css files.</span><br><span class=\"line\"></span><br><span class=\"line\">### Syntax Highlighting</span><br><span class=\"line\">You have already seen how I can syntax highlight your fenced code blocks. See the [Fenced Code Block](#fenced-code-block) section if you haven’t! You can also choose different themes for syntax highlighting.</span><br><span class=\"line\"></span><br><span class=\"line\">### TeX-like Math Syntax</span><br><span class=\"line\">I can also render TeX-like math syntaxes, if you allow me to.[^math] I can do inline math like this: \\\\( 1 + 1 \\\\) or this (in MathML): &lt;math&gt;&lt;mn&gt;1&lt;&#x2F;mn&gt;&lt;mo&gt;+&lt;&#x2F;mo&gt;&lt;mn&gt;1&lt;&#x2F;mn&gt;&lt;&#x2F;math&gt;, and block math:</span><br><span class=\"line\"></span><br><span class=\"line\">\\\\[</span><br><span class=\"line\">    A^T_S &#x3D; B</span><br><span class=\"line\">\\\\]</span><br><span class=\"line\"></span><br><span class=\"line\">or (in MathML)</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;math display&#x3D;&quot;block&quot;&gt;</span><br><span class=\"line\">    &lt;msubsup&gt;&lt;mi&gt;A&lt;&#x2F;mi&gt; &lt;mi&gt;S&lt;&#x2F;mi&gt; &lt;mi&gt;T&lt;&#x2F;mi&gt;&lt;&#x2F;msubsup&gt;</span><br><span class=\"line\">    &lt;mo&gt;&#x3D;&lt;&#x2F;mo&gt;</span><br><span class=\"line\">    &lt;mi&gt;B&lt;&#x2F;mi&gt;</span><br><span class=\"line\">&lt;&#x2F;math&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">### Task List Syntax</span><br><span class=\"line\">1. [x] I can render checkbox list syntax</span><br><span class=\"line\">    * [x] I support nesting</span><br><span class=\"line\">    * [x] I support ordered *and* unordered lists</span><br><span class=\"line\">2. [ ] I don&#39;t support clicking checkboxes directly in the html window</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">### Jekyll front-matter</span><br><span class=\"line\">If you like, I can display Jekyll front-matter in a nice table. Just make sure you put the front-matter at the very beginning of the file, and fence it with &#96;---&#96;. For example:</span><br></pre></td></tr></table></figure>\n<hr>\n<p>title: “Macdown is my friend”<br>date: 2014-06-06 20:00:00</p>\n<hr>\n<pre><code>\n### Render newline literally\nNormally I require you to put two spaces and a newline (aka return) at the end of a line in order to create a line break. If you like, I can render a newline any time you end a line with a newline. However, if you enable this, markdown that looks lovely when I render it might look pretty funky when you let some *other* program render it.\n\n\n\n\n\n## &lt;a name=&quot;general-pane&quot;&gt;&lt;/a&gt;The General Preferences Pane\n\nThis is where I keep preferences related to application behavior.  \n![General preferences pane](http://d.pr/i/rvwu+)\n\nThe General Preferences Pane allows you to tell me how you want me to behave. For example, do you want me to make sure there is a document open when I launch? You can also tell me if I should constantly update the preview window as you type, or wait for you to hit `command-R` instead. Maybe you prefer your editor window on the right? Or to see the word-count as you type. This is also the place to tell me if you are interested in pre-releases of me, or just want to stick to better-tested official releases.  \n\n## &lt;a name=&quot;editor-pane&quot;&gt;&lt;/a&gt;The Editor Preference Pane\nThis is where I keep preferences related to the behavior and styling of the editing window.  \n![Editor preferences pane](http://d.pr/i/6OL5+)\n\n\n### Styling\n\nMy editor provides syntax highlighting. You can edit the base font and the coloring/sizing theme. I provided some default themes (courtesy of [Mou](http://mouapp.com)’s creator, Chen Luo) if you don’t know where to start.\n\nYou can also edit, or even add new themes if you want to! Just click the ***Reveal*** button, and start moving things around. Remember to use the correct file extension (`.styles`), though. I’m picky about that.\n\nI offer auto-completion and other functions to ease your editing experience. If you don’t like it, however, you can turn them off.\n\n\n\n\n\n## Hack On\n\nThat’s about it. Thanks for listening. I’ll be quiet from now on (unless there’s an update about the app—I’ll remind you for that!).\n\nHappy writing!\n\n\n[^emphasize]: If **Underlines** is turned on, `_this notation_` will render as underlined instead of emphasized \n\n[^under]: If **Underline** is disabled `_this_` will be rendered as *emphasized* instead of being underlined.\n\n[^quote]: **Quote** replaces literal `&quot;` characters with html `&lt;q&gt;` tags. **Quote** and **Smartypants** are syntactically incompatible. If both are enabled, **Quote** takes precedence. Note that **Quote** is different from *blockquote*, which is part of standard Markdown.\n\n[^math]: Internet connection required.\n\n</code></pre>"},{"title":"Apple账号开通开发者相关","date":"2020-03-21T04:44:00.000Z","comments":1,"_content":"\n使用apple developer app进行apple账号开通开发者权限，进行扣费或者续费\n\n<!-- more -->\n\n以前Apple ID 相关都是在https://developer.apple.com/ 上操作，现在iOS相关Apple账号开通开发者权限需要使用Apple Developer app ;\n续费分为2种情况\n\n## 已有apple账号并开通了开发者权限，只需要在apple developer app上操作身份验证环节，验证完成后，付款还是在网站上操作方式\n\n验证您的身份，如下图\n![](/images/apple_1.png)\n\n接下来需要输入个人的详细信息，姓名、身份证号、电话等\n![](/images/apple_2.jpg)\n\n拍摄自拍照\n![](/images/apple_3.jpg)\n\n完成档案\n![](/images/apple_4.jpg)\n\n验证成功\n![](/images/apple_5.png)\n\n完成后，去developer网站上进行付款操作就可以了(和以前的流程一样，多了一个 身份信息收取验证环节)\n\n## 新注册Apple账号，需要去apple developer app上面 登录，然后注册成为开发者会员\n\n去注册，如下图\n![](/images/apple_6.png)\n\n进行扣费，如下图\n![](/images/apple_7.jpg)\n\n\n## 关于扣费\n\n以前扣费相对容易些，现在Apple那边对信用卡扣费限制的高了，填写扣费信息时候，信用卡卡号，信用卡账单地址、信用卡姓名信息、等这些信息要与办理信用卡时候写的一样才可以，如果不一样经常遇到的错误是 `你的支付授权是吧，请核对你的信息并重试，或尝试其他支付方式`\n","source":"_posts/apple-register.md","raw":"---\ntitle: \"Apple账号开通开发者相关\"\ndate: 2020-03-21 12:44:00 +0800\ncomments: true\ntags:\n- Apple\n- 续费\ncategories:\n- [iOS账号]\n- [上架]\n---\n\n使用apple developer app进行apple账号开通开发者权限，进行扣费或者续费\n\n<!-- more -->\n\n以前Apple ID 相关都是在https://developer.apple.com/ 上操作，现在iOS相关Apple账号开通开发者权限需要使用Apple Developer app ;\n续费分为2种情况\n\n## 已有apple账号并开通了开发者权限，只需要在apple developer app上操作身份验证环节，验证完成后，付款还是在网站上操作方式\n\n验证您的身份，如下图\n![](/images/apple_1.png)\n\n接下来需要输入个人的详细信息，姓名、身份证号、电话等\n![](/images/apple_2.jpg)\n\n拍摄自拍照\n![](/images/apple_3.jpg)\n\n完成档案\n![](/images/apple_4.jpg)\n\n验证成功\n![](/images/apple_5.png)\n\n完成后，去developer网站上进行付款操作就可以了(和以前的流程一样，多了一个 身份信息收取验证环节)\n\n## 新注册Apple账号，需要去apple developer app上面 登录，然后注册成为开发者会员\n\n去注册，如下图\n![](/images/apple_6.png)\n\n进行扣费，如下图\n![](/images/apple_7.jpg)\n\n\n## 关于扣费\n\n以前扣费相对容易些，现在Apple那边对信用卡扣费限制的高了，填写扣费信息时候，信用卡卡号，信用卡账单地址、信用卡姓名信息、等这些信息要与办理信用卡时候写的一样才可以，如果不一样经常遇到的错误是 `你的支付授权是吧，请核对你的信息并重试，或尝试其他支付方式`\n","slug":"apple-register","published":1,"updated":"2020-06-22T09:26:33.707Z","_id":"ckbq9wklh0000aj3j3ovle2g6","layout":"post","photos":[],"link":"","content":"<p>使用apple developer app进行apple账号开通开发者权限，进行扣费或者续费</p>\n<a id=\"more\"></a>\n\n<p>以前Apple ID 相关都是在<a href=\"https://developer.apple.com/\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/</a> 上操作，现在iOS相关Apple账号开通开发者权限需要使用Apple Developer app ;<br>续费分为2种情况</p>\n<h2 id=\"已有apple账号并开通了开发者权限，只需要在apple-developer-app上操作身份验证环节，验证完成后，付款还是在网站上操作方式\"><a href=\"#已有apple账号并开通了开发者权限，只需要在apple-developer-app上操作身份验证环节，验证完成后，付款还是在网站上操作方式\" class=\"headerlink\" title=\"已有apple账号并开通了开发者权限，只需要在apple developer app上操作身份验证环节，验证完成后，付款还是在网站上操作方式\"></a>已有apple账号并开通了开发者权限，只需要在apple developer app上操作身份验证环节，验证完成后，付款还是在网站上操作方式</h2><p>验证您的身份，如下图<br><img src=\"/images/apple_1.png\" alt=\"\"></p>\n<p>接下来需要输入个人的详细信息，姓名、身份证号、电话等<br><img src=\"/images/apple_2.jpg\" alt=\"\"></p>\n<p>拍摄自拍照<br><img src=\"/images/apple_3.jpg\" alt=\"\"></p>\n<p>完成档案<br><img src=\"/images/apple_4.jpg\" alt=\"\"></p>\n<p>验证成功<br><img src=\"/images/apple_5.png\" alt=\"\"></p>\n<p>完成后，去developer网站上进行付款操作就可以了(和以前的流程一样，多了一个 身份信息收取验证环节)</p>\n<h2 id=\"新注册Apple账号，需要去apple-developer-app上面-登录，然后注册成为开发者会员\"><a href=\"#新注册Apple账号，需要去apple-developer-app上面-登录，然后注册成为开发者会员\" class=\"headerlink\" title=\"新注册Apple账号，需要去apple developer app上面 登录，然后注册成为开发者会员\"></a>新注册Apple账号，需要去apple developer app上面 登录，然后注册成为开发者会员</h2><p>去注册，如下图<br><img src=\"/images/apple_6.png\" alt=\"\"></p>\n<p>进行扣费，如下图<br><img src=\"/images/apple_7.jpg\" alt=\"\"></p>\n<h2 id=\"关于扣费\"><a href=\"#关于扣费\" class=\"headerlink\" title=\"关于扣费\"></a>关于扣费</h2><p>以前扣费相对容易些，现在Apple那边对信用卡扣费限制的高了，填写扣费信息时候，信用卡卡号，信用卡账单地址、信用卡姓名信息、等这些信息要与办理信用卡时候写的一样才可以，如果不一样经常遇到的错误是 <code>你的支付授权是吧，请核对你的信息并重试，或尝试其他支付方式</code></p>\n","site":{"data":{}},"excerpt":"<p>使用apple developer app进行apple账号开通开发者权限，进行扣费或者续费</p>","more":"<p>以前Apple ID 相关都是在<a href=\"https://developer.apple.com/\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/</a> 上操作，现在iOS相关Apple账号开通开发者权限需要使用Apple Developer app ;<br>续费分为2种情况</p>\n<h2 id=\"已有apple账号并开通了开发者权限，只需要在apple-developer-app上操作身份验证环节，验证完成后，付款还是在网站上操作方式\"><a href=\"#已有apple账号并开通了开发者权限，只需要在apple-developer-app上操作身份验证环节，验证完成后，付款还是在网站上操作方式\" class=\"headerlink\" title=\"已有apple账号并开通了开发者权限，只需要在apple developer app上操作身份验证环节，验证完成后，付款还是在网站上操作方式\"></a>已有apple账号并开通了开发者权限，只需要在apple developer app上操作身份验证环节，验证完成后，付款还是在网站上操作方式</h2><p>验证您的身份，如下图<br><img src=\"/images/apple_1.png\" alt=\"\"></p>\n<p>接下来需要输入个人的详细信息，姓名、身份证号、电话等<br><img src=\"/images/apple_2.jpg\" alt=\"\"></p>\n<p>拍摄自拍照<br><img src=\"/images/apple_3.jpg\" alt=\"\"></p>\n<p>完成档案<br><img src=\"/images/apple_4.jpg\" alt=\"\"></p>\n<p>验证成功<br><img src=\"/images/apple_5.png\" alt=\"\"></p>\n<p>完成后，去developer网站上进行付款操作就可以了(和以前的流程一样，多了一个 身份信息收取验证环节)</p>\n<h2 id=\"新注册Apple账号，需要去apple-developer-app上面-登录，然后注册成为开发者会员\"><a href=\"#新注册Apple账号，需要去apple-developer-app上面-登录，然后注册成为开发者会员\" class=\"headerlink\" title=\"新注册Apple账号，需要去apple developer app上面 登录，然后注册成为开发者会员\"></a>新注册Apple账号，需要去apple developer app上面 登录，然后注册成为开发者会员</h2><p>去注册，如下图<br><img src=\"/images/apple_6.png\" alt=\"\"></p>\n<p>进行扣费，如下图<br><img src=\"/images/apple_7.jpg\" alt=\"\"></p>\n<h2 id=\"关于扣费\"><a href=\"#关于扣费\" class=\"headerlink\" title=\"关于扣费\"></a>关于扣费</h2><p>以前扣费相对容易些，现在Apple那边对信用卡扣费限制的高了，填写扣费信息时候，信用卡卡号，信用卡账单地址、信用卡姓名信息、等这些信息要与办理信用卡时候写的一样才可以，如果不一样经常遇到的错误是 <code>你的支付授权是吧，请核对你的信息并重试，或尝试其他支付方式</code></p>"},{"title":"iOS crash的相对全面的介绍","date":"2019-04-23T02:24:00.000Z","comments":1,"_content":"\n本文介绍了iOS中的crash的分类、收集、存储、上传、符号化等流程\n\n<!-- more -->\n\n## crash分类\n\n* crash分为 math exception 、 signal 、 NSException 三种类型，每一种类型crash都处在不同系统层级上\n\t1. 内核级异常 math exception\n\t2. 系统级异常 signal\n\t3. 应用级异常 NSException\n\n## 收集crash\n\n利用 NSSetUncaughtExceptionHandler() NSGetUncaughtExceptionHandler() 方法，去捕获crash信息\n\n如果多平台收集上传，需要使用NSGetUncaughtExceptionHandler()，并顺序传递exception，如下\n\n```objc\nstatic NSUncaughtExceptionHandler *MisCrashManager_PreviousUncaughtExceptionHandler;\n\nstatic void MisCrashManager_UncaughtExceptionHandler(NSException *exception)\n{\n    if(MisCrashManager_PreviousUncaughtExceptionHandler){\n        MisCrashManager_PreviousUncaughtExceptionHandler(exception);\n    }\n    \n    MisCrashManager_DealException(exception);\n}\n\nNSSetUncaughtExceptionHandler(&MisCrashManager_UncaughtExceptionHandler);\n```\n\n在收集的过程中，要多参数，多维度的去收集，包括不限于`base_address`、`slide_address`、`device_id`、`system_version`、`device_type`、`version`、`project`、`title`、`content`等参数，当然开发者需要根据本身业务去增加或减少\n\n常用的收集库`PLCrashReporter`、`CrashKit`，可以引入进来\n\n## 存储crash\n\n将上一步收集的crash存储到本地，可以是sql的数据结构，也可以是xml、json等list数据结构，下一次app打开时候，实时的上传到服务器\n\n如下事例为收集、存储\n\n```objc\nstatic void MisCrashManager_DealException(NSException *exception)\n{\n    NSString *title = [NSString stringWithFormat:@\"%@ %@\",exception.name,exception.reason];\n    \n    NSData *callStack = [NSJSONSerialization dataWithJSONObject:exception.callStackSymbols options:NSJSONWritingPrettyPrinted error:nil];\n    NSString *callStackStr = [[NSString alloc] initWithData:callStack encoding:NSUTF8StringEncoding];\n    \n    NSDictionary *remark = @{@\"base_address\"    : MisCrashTool.baseAddress ? : @\"\",\n                             @\"slide_address\"   : MisCrashTool.slideAddress ? : @\"\",\n                             @\"device_id\"       : MisCrashManager.shared.deviceID ? : @\"\"\n                             };\n    \n    NSData *remarkData = [NSJSONSerialization dataWithJSONObject:remark options:NSJSONWritingPrettyPrinted error:nil];\n    NSString *remarkStr = [[NSString alloc] initWithData:remarkData encoding:NSUTF8StringEncoding];\n    \n    NSDictionary *info = @{@\"sequence_id\"       : MisCrashManager.shared.userID ? : @\"\",\n                           @\"platform\"          : @\"ios\",\n                           @\"system_version\"    : UIDevice.currentDevice.systemVersion ? : @\"\",\n                           @\"device_type\"       : MisCrashTool.deviceName ? : @\"\",\n                           @\"version\"           : NSBundle.mainBundle.infoDictionary[@\"CFBundleShortVersionString\"] ? : @\"\",\n                           @\"project\"           : MisCrashManager.shared.projectID ? : @\"\",\n                           @\"create_time\"       : @(@(NSDate.date.timeIntervalSince1970*1000).longLongValue),\n                           @\"title\"             : title ? : @\"\",\n                           @\"content\"           : callStackStr ? : @\"\",\n                           @\"remark\"            : remarkStr ? : @\"\"\n                           };\n    NSData *infoData = [NSJSONSerialization dataWithJSONObject:info options:NSJSONWritingPrettyPrinted error:nil];\n    NSString *infoStr = [[NSString alloc] initWithData:infoData encoding:NSUTF8StringEncoding];\n    \n    NSString *documentPaths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES).firstObject;\n    documentPaths = [documentPaths stringByAppendingPathComponent:@\"mis_crash_exception.txt\"];\n    \n    NSArray *oldList = [[NSArray alloc] initWithContentsOfFile:documentPaths];\n    \n    NSMutableArray *list = [[NSMutableArray alloc] initWithArray:oldList];\n    [list addObject:infoStr ? : @\"\"];\n    [list writeToFile:documentPaths atomically:YES];\n}\n```\n\n## 上传crash\n在app下次打开时候，https实时的上传到服务器,上传完一条记得把本地存储的该条记录删除\n\n## 符号化crash\n\n导出dsym文件，需要使用atos、symbolicate等操作进行符号化，也可以使用dsymTools(https://github.com/answer-huang/dSYMTools)\n\n符号化，拿着 符号地址 和 DSYM 进行 还原\nsymbol_address 是 stack_address 减去 slide_address 的结果\n\n堆栈地址StackAddress - 加载地址LoadAddress = 符号地址SymbolAddress\n0x1003f34a0 - 0xea4000 = symbol_address\n\natos -o xxx.app.DSYM/Contents/Resources/DWARF/xxx -arch arm64 symbol_address\natos -o xxx.app.DSYM/Contents/Resources/DWARF/xxx -arch arm64 0x1003F01FC\n\n原始采集到的crash信息如下\n\n```\nCoreFoundation 0x0000000182eefd5c <redacted> + 52 \nUIKit 0x000000018d25bc7c <redacted> + 1352\nxxx      0x1003f34a0   xxx + 4142240\n\n```\n\n符号化后的明文为\n\n```\n3 UIKit -[UIWebSelectSinglePicker pickerView:didSelectRow:inComponent:] + 72\n4 UIKit -[UIPickerTableView _scrollingFinished] + 188\n5 xxx -[ServiceViewController tableView:didSelectRowAtIndexPath:] + 460\n```\n\n## 第三方优质服务商/开源服务\n\n`apple crash`、`google firebase`、`bugly`、`sentry开源且支持私有化部署`\n\n## sentry私有化部署接入记录\n\nClient Key (dsn) 在sentry后台的`Settings -> Projects -> 目标project -> Client Keys -> DSN`\n\nAuth Tokens 在sentry后台的`Settings -> Account -> Auth Tokens`, 使用sentry-cli命令行登录时候需要用到的token\n\nDSYM 在在sentry后台的`Settings -> Projects -> 目标project -> Debug Files`\n\ndsym符号表的上传需要使用sentry-cli命令，可在命令行手动上传，可写脚本嵌到工程的 Build Phases里面自动上传\n\n安装sentry-cli : 命令行 `curl -sL https://sentry.io/get-cli/ | bash`\n\n登录sentry-cli : `sentry-cli —url  http://sentry.xxxdomain.com/  login`\n\n\n\n","source":"_posts/ios-crash.md","raw":"---\ntitle: \"iOS crash的相对全面的介绍\"\ndate: 2019-04-23 10:24:00\ncomments: true\ntags:\n- iOS\n- crash\ncategories:\n- [crash]\n- [sentry]\n- [sdk]\n---\n\n本文介绍了iOS中的crash的分类、收集、存储、上传、符号化等流程\n\n<!-- more -->\n\n## crash分类\n\n* crash分为 math exception 、 signal 、 NSException 三种类型，每一种类型crash都处在不同系统层级上\n\t1. 内核级异常 math exception\n\t2. 系统级异常 signal\n\t3. 应用级异常 NSException\n\n## 收集crash\n\n利用 NSSetUncaughtExceptionHandler() NSGetUncaughtExceptionHandler() 方法，去捕获crash信息\n\n如果多平台收集上传，需要使用NSGetUncaughtExceptionHandler()，并顺序传递exception，如下\n\n```objc\nstatic NSUncaughtExceptionHandler *MisCrashManager_PreviousUncaughtExceptionHandler;\n\nstatic void MisCrashManager_UncaughtExceptionHandler(NSException *exception)\n{\n    if(MisCrashManager_PreviousUncaughtExceptionHandler){\n        MisCrashManager_PreviousUncaughtExceptionHandler(exception);\n    }\n    \n    MisCrashManager_DealException(exception);\n}\n\nNSSetUncaughtExceptionHandler(&MisCrashManager_UncaughtExceptionHandler);\n```\n\n在收集的过程中，要多参数，多维度的去收集，包括不限于`base_address`、`slide_address`、`device_id`、`system_version`、`device_type`、`version`、`project`、`title`、`content`等参数，当然开发者需要根据本身业务去增加或减少\n\n常用的收集库`PLCrashReporter`、`CrashKit`，可以引入进来\n\n## 存储crash\n\n将上一步收集的crash存储到本地，可以是sql的数据结构，也可以是xml、json等list数据结构，下一次app打开时候，实时的上传到服务器\n\n如下事例为收集、存储\n\n```objc\nstatic void MisCrashManager_DealException(NSException *exception)\n{\n    NSString *title = [NSString stringWithFormat:@\"%@ %@\",exception.name,exception.reason];\n    \n    NSData *callStack = [NSJSONSerialization dataWithJSONObject:exception.callStackSymbols options:NSJSONWritingPrettyPrinted error:nil];\n    NSString *callStackStr = [[NSString alloc] initWithData:callStack encoding:NSUTF8StringEncoding];\n    \n    NSDictionary *remark = @{@\"base_address\"    : MisCrashTool.baseAddress ? : @\"\",\n                             @\"slide_address\"   : MisCrashTool.slideAddress ? : @\"\",\n                             @\"device_id\"       : MisCrashManager.shared.deviceID ? : @\"\"\n                             };\n    \n    NSData *remarkData = [NSJSONSerialization dataWithJSONObject:remark options:NSJSONWritingPrettyPrinted error:nil];\n    NSString *remarkStr = [[NSString alloc] initWithData:remarkData encoding:NSUTF8StringEncoding];\n    \n    NSDictionary *info = @{@\"sequence_id\"       : MisCrashManager.shared.userID ? : @\"\",\n                           @\"platform\"          : @\"ios\",\n                           @\"system_version\"    : UIDevice.currentDevice.systemVersion ? : @\"\",\n                           @\"device_type\"       : MisCrashTool.deviceName ? : @\"\",\n                           @\"version\"           : NSBundle.mainBundle.infoDictionary[@\"CFBundleShortVersionString\"] ? : @\"\",\n                           @\"project\"           : MisCrashManager.shared.projectID ? : @\"\",\n                           @\"create_time\"       : @(@(NSDate.date.timeIntervalSince1970*1000).longLongValue),\n                           @\"title\"             : title ? : @\"\",\n                           @\"content\"           : callStackStr ? : @\"\",\n                           @\"remark\"            : remarkStr ? : @\"\"\n                           };\n    NSData *infoData = [NSJSONSerialization dataWithJSONObject:info options:NSJSONWritingPrettyPrinted error:nil];\n    NSString *infoStr = [[NSString alloc] initWithData:infoData encoding:NSUTF8StringEncoding];\n    \n    NSString *documentPaths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES).firstObject;\n    documentPaths = [documentPaths stringByAppendingPathComponent:@\"mis_crash_exception.txt\"];\n    \n    NSArray *oldList = [[NSArray alloc] initWithContentsOfFile:documentPaths];\n    \n    NSMutableArray *list = [[NSMutableArray alloc] initWithArray:oldList];\n    [list addObject:infoStr ? : @\"\"];\n    [list writeToFile:documentPaths atomically:YES];\n}\n```\n\n## 上传crash\n在app下次打开时候，https实时的上传到服务器,上传完一条记得把本地存储的该条记录删除\n\n## 符号化crash\n\n导出dsym文件，需要使用atos、symbolicate等操作进行符号化，也可以使用dsymTools(https://github.com/answer-huang/dSYMTools)\n\n符号化，拿着 符号地址 和 DSYM 进行 还原\nsymbol_address 是 stack_address 减去 slide_address 的结果\n\n堆栈地址StackAddress - 加载地址LoadAddress = 符号地址SymbolAddress\n0x1003f34a0 - 0xea4000 = symbol_address\n\natos -o xxx.app.DSYM/Contents/Resources/DWARF/xxx -arch arm64 symbol_address\natos -o xxx.app.DSYM/Contents/Resources/DWARF/xxx -arch arm64 0x1003F01FC\n\n原始采集到的crash信息如下\n\n```\nCoreFoundation 0x0000000182eefd5c <redacted> + 52 \nUIKit 0x000000018d25bc7c <redacted> + 1352\nxxx      0x1003f34a0   xxx + 4142240\n\n```\n\n符号化后的明文为\n\n```\n3 UIKit -[UIWebSelectSinglePicker pickerView:didSelectRow:inComponent:] + 72\n4 UIKit -[UIPickerTableView _scrollingFinished] + 188\n5 xxx -[ServiceViewController tableView:didSelectRowAtIndexPath:] + 460\n```\n\n## 第三方优质服务商/开源服务\n\n`apple crash`、`google firebase`、`bugly`、`sentry开源且支持私有化部署`\n\n## sentry私有化部署接入记录\n\nClient Key (dsn) 在sentry后台的`Settings -> Projects -> 目标project -> Client Keys -> DSN`\n\nAuth Tokens 在sentry后台的`Settings -> Account -> Auth Tokens`, 使用sentry-cli命令行登录时候需要用到的token\n\nDSYM 在在sentry后台的`Settings -> Projects -> 目标project -> Debug Files`\n\ndsym符号表的上传需要使用sentry-cli命令，可在命令行手动上传，可写脚本嵌到工程的 Build Phases里面自动上传\n\n安装sentry-cli : 命令行 `curl -sL https://sentry.io/get-cli/ | bash`\n\n登录sentry-cli : `sentry-cli —url  http://sentry.xxxdomain.com/  login`\n\n\n\n","slug":"ios-crash","published":1,"updated":"2020-06-23T06:11:38.744Z","_id":"ckbqeimtq0000uj3jcunkcuti","layout":"post","photos":[],"link":"","content":"<p>本文介绍了iOS中的crash的分类、收集、存储、上传、符号化等流程</p>\n<a id=\"more\"></a>\n\n<h2 id=\"crash分类\"><a href=\"#crash分类\" class=\"headerlink\" title=\"crash分类\"></a>crash分类</h2><ul>\n<li>crash分为 math exception 、 signal 、 NSException 三种类型，每一种类型crash都处在不同系统层级上<ol>\n<li>内核级异常 math exception</li>\n<li>系统级异常 signal</li>\n<li>应用级异常 NSException</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"收集crash\"><a href=\"#收集crash\" class=\"headerlink\" title=\"收集crash\"></a>收集crash</h2><p>利用 NSSetUncaughtExceptionHandler() NSGetUncaughtExceptionHandler() 方法，去捕获crash信息</p>\n<p>如果多平台收集上传，需要使用NSGetUncaughtExceptionHandler()，并顺序传递exception，如下</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"built_in\">NSUncaughtExceptionHandler</span> *MisCrashManager_PreviousUncaughtExceptionHandler;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> MisCrashManager_UncaughtExceptionHandler(<span class=\"built_in\">NSException</span> *exception)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(MisCrashManager_PreviousUncaughtExceptionHandler)&#123;</span><br><span class=\"line\">        MisCrashManager_PreviousUncaughtExceptionHandler(exception);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    MisCrashManager_DealException(exception);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">NSSetUncaughtExceptionHandler</span>(&amp;MisCrashManager_UncaughtExceptionHandler);</span><br></pre></td></tr></table></figure>\n\n<p>在收集的过程中，要多参数，多维度的去收集，包括不限于<code>base_address</code>、<code>slide_address</code>、<code>device_id</code>、<code>system_version</code>、<code>device_type</code>、<code>version</code>、<code>project</code>、<code>title</code>、<code>content</code>等参数，当然开发者需要根据本身业务去增加或减少</p>\n<p>常用的收集库<code>PLCrashReporter</code>、<code>CrashKit</code>，可以引入进来</p>\n<h2 id=\"存储crash\"><a href=\"#存储crash\" class=\"headerlink\" title=\"存储crash\"></a>存储crash</h2><p>将上一步收集的crash存储到本地，可以是sql的数据结构，也可以是xml、json等list数据结构，下一次app打开时候，实时的上传到服务器</p>\n<p>如下事例为收集、存储</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> MisCrashManager_DealException(<span class=\"built_in\">NSException</span> *exception)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">NSString</span> *title = [<span class=\"built_in\">NSString</span> stringWithFormat:<span class=\"string\">@\"%@ %@\"</span>,exception.name,exception.reason];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSData</span> *callStack = [<span class=\"built_in\">NSJSONSerialization</span> dataWithJSONObject:exception.callStackSymbols options:<span class=\"built_in\">NSJSONWritingPrettyPrinted</span> error:<span class=\"literal\">nil</span>];</span><br><span class=\"line\">    <span class=\"built_in\">NSString</span> *callStackStr = [[<span class=\"built_in\">NSString</span> alloc] initWithData:callStack encoding:<span class=\"built_in\">NSUTF8StringEncoding</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSDictionary</span> *remark = @&#123;<span class=\"string\">@\"base_address\"</span>    : MisCrashTool.baseAddress ? : <span class=\"string\">@\"\"</span>,</span><br><span class=\"line\">                             <span class=\"string\">@\"slide_address\"</span>   : MisCrashTool.slideAddress ? : <span class=\"string\">@\"\"</span>,</span><br><span class=\"line\">                             <span class=\"string\">@\"device_id\"</span>       : MisCrashManager.shared.deviceID ? : <span class=\"string\">@\"\"</span></span><br><span class=\"line\">                             &#125;;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSData</span> *remarkData = [<span class=\"built_in\">NSJSONSerialization</span> dataWithJSONObject:remark options:<span class=\"built_in\">NSJSONWritingPrettyPrinted</span> error:<span class=\"literal\">nil</span>];</span><br><span class=\"line\">    <span class=\"built_in\">NSString</span> *remarkStr = [[<span class=\"built_in\">NSString</span> alloc] initWithData:remarkData encoding:<span class=\"built_in\">NSUTF8StringEncoding</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSDictionary</span> *info = @&#123;<span class=\"string\">@\"sequence_id\"</span>       : MisCrashManager.shared.userID ? : <span class=\"string\">@\"\"</span>,</span><br><span class=\"line\">                           <span class=\"string\">@\"platform\"</span>          : <span class=\"string\">@\"ios\"</span>,</span><br><span class=\"line\">                           <span class=\"string\">@\"system_version\"</span>    : <span class=\"built_in\">UIDevice</span>.currentDevice.systemVersion ? : <span class=\"string\">@\"\"</span>,</span><br><span class=\"line\">                           <span class=\"string\">@\"device_type\"</span>       : MisCrashTool.deviceName ? : <span class=\"string\">@\"\"</span>,</span><br><span class=\"line\">                           <span class=\"string\">@\"version\"</span>           : <span class=\"built_in\">NSBundle</span>.mainBundle.infoDictionary[<span class=\"string\">@\"CFBundleShortVersionString\"</span>] ? : <span class=\"string\">@\"\"</span>,</span><br><span class=\"line\">                           <span class=\"string\">@\"project\"</span>           : MisCrashManager.shared.projectID ? : <span class=\"string\">@\"\"</span>,</span><br><span class=\"line\">                           <span class=\"string\">@\"create_time\"</span>       : @(@(<span class=\"built_in\">NSDate</span>.date.timeIntervalSince1970*<span class=\"number\">1000</span>).longLongValue),</span><br><span class=\"line\">                           <span class=\"string\">@\"title\"</span>             : title ? : <span class=\"string\">@\"\"</span>,</span><br><span class=\"line\">                           <span class=\"string\">@\"content\"</span>           : callStackStr ? : <span class=\"string\">@\"\"</span>,</span><br><span class=\"line\">                           <span class=\"string\">@\"remark\"</span>            : remarkStr ? : <span class=\"string\">@\"\"</span></span><br><span class=\"line\">                           &#125;;</span><br><span class=\"line\">    <span class=\"built_in\">NSData</span> *infoData = [<span class=\"built_in\">NSJSONSerialization</span> dataWithJSONObject:info options:<span class=\"built_in\">NSJSONWritingPrettyPrinted</span> error:<span class=\"literal\">nil</span>];</span><br><span class=\"line\">    <span class=\"built_in\">NSString</span> *infoStr = [[<span class=\"built_in\">NSString</span> alloc] initWithData:infoData encoding:<span class=\"built_in\">NSUTF8StringEncoding</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSString</span> *documentPaths = <span class=\"built_in\">NSSearchPathForDirectoriesInDomains</span>(<span class=\"built_in\">NSDocumentDirectory</span>, <span class=\"built_in\">NSUserDomainMask</span>, <span class=\"literal\">YES</span>).firstObject;</span><br><span class=\"line\">    documentPaths = [documentPaths stringByAppendingPathComponent:<span class=\"string\">@\"mis_crash_exception.txt\"</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSArray</span> *oldList = [[<span class=\"built_in\">NSArray</span> alloc] initWithContentsOfFile:documentPaths];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSMutableArray</span> *list = [[<span class=\"built_in\">NSMutableArray</span> alloc] initWithArray:oldList];</span><br><span class=\"line\">    [list addObject:infoStr ? : <span class=\"string\">@\"\"</span>];</span><br><span class=\"line\">    [list writeToFile:documentPaths atomically:<span class=\"literal\">YES</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"上传crash\"><a href=\"#上传crash\" class=\"headerlink\" title=\"上传crash\"></a>上传crash</h2><p>在app下次打开时候，https实时的上传到服务器,上传完一条记得把本地存储的该条记录删除</p>\n<h2 id=\"符号化crash\"><a href=\"#符号化crash\" class=\"headerlink\" title=\"符号化crash\"></a>符号化crash</h2><p>导出dsym文件，需要使用atos、symbolicate等操作进行符号化，也可以使用dsymTools(<a href=\"https://github.com/answer-huang/dSYMTools\" target=\"_blank\" rel=\"noopener\">https://github.com/answer-huang/dSYMTools</a>)</p>\n<p>符号化，拿着 符号地址 和 DSYM 进行 还原<br>symbol_address 是 stack_address 减去 slide_address 的结果</p>\n<p>堆栈地址StackAddress - 加载地址LoadAddress = 符号地址SymbolAddress<br>0x1003f34a0 - 0xea4000 = symbol_address</p>\n<p>atos -o xxx.app.DSYM/Contents/Resources/DWARF/xxx -arch arm64 symbol_address<br>atos -o xxx.app.DSYM/Contents/Resources/DWARF/xxx -arch arm64 0x1003F01FC</p>\n<p>原始采集到的crash信息如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CoreFoundation 0x0000000182eefd5c &lt;redacted&gt; + 52 </span><br><span class=\"line\">UIKit 0x000000018d25bc7c &lt;redacted&gt; + 1352</span><br><span class=\"line\">xxx      0x1003f34a0   xxx + 4142240</span><br></pre></td></tr></table></figure>\n\n<p>符号化后的明文为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3 UIKit -[UIWebSelectSinglePicker pickerView:didSelectRow:inComponent:] + 72</span><br><span class=\"line\">4 UIKit -[UIPickerTableView _scrollingFinished] + 188</span><br><span class=\"line\">5 xxx -[ServiceViewController tableView:didSelectRowAtIndexPath:] + 460</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"第三方优质服务商-开源服务\"><a href=\"#第三方优质服务商-开源服务\" class=\"headerlink\" title=\"第三方优质服务商/开源服务\"></a>第三方优质服务商/开源服务</h2><p><code>apple crash</code>、<code>google firebase</code>、<code>bugly</code>、<code>sentry开源且支持私有化部署</code></p>\n<h2 id=\"sentry私有化部署接入记录\"><a href=\"#sentry私有化部署接入记录\" class=\"headerlink\" title=\"sentry私有化部署接入记录\"></a>sentry私有化部署接入记录</h2><p>Client Key (dsn) 在sentry后台的<code>Settings -&gt; Projects -&gt; 目标project -&gt; Client Keys -&gt; DSN</code></p>\n<p>Auth Tokens 在sentry后台的<code>Settings -&gt; Account -&gt; Auth Tokens</code>, 使用sentry-cli命令行登录时候需要用到的token</p>\n<p>DSYM 在在sentry后台的<code>Settings -&gt; Projects -&gt; 目标project -&gt; Debug Files</code></p>\n<p>dsym符号表的上传需要使用sentry-cli命令，可在命令行手动上传，可写脚本嵌到工程的 Build Phases里面自动上传</p>\n<p>安装sentry-cli : 命令行 <code>curl -sL https://sentry.io/get-cli/ | bash</code></p>\n<p>登录sentry-cli : <code>sentry-cli —url  http://sentry.xxxdomain.com/  login</code></p>\n","site":{"data":{}},"excerpt":"<p>本文介绍了iOS中的crash的分类、收集、存储、上传、符号化等流程</p>","more":"<h2 id=\"crash分类\"><a href=\"#crash分类\" class=\"headerlink\" title=\"crash分类\"></a>crash分类</h2><ul>\n<li>crash分为 math exception 、 signal 、 NSException 三种类型，每一种类型crash都处在不同系统层级上<ol>\n<li>内核级异常 math exception</li>\n<li>系统级异常 signal</li>\n<li>应用级异常 NSException</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"收集crash\"><a href=\"#收集crash\" class=\"headerlink\" title=\"收集crash\"></a>收集crash</h2><p>利用 NSSetUncaughtExceptionHandler() NSGetUncaughtExceptionHandler() 方法，去捕获crash信息</p>\n<p>如果多平台收集上传，需要使用NSGetUncaughtExceptionHandler()，并顺序传递exception，如下</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"built_in\">NSUncaughtExceptionHandler</span> *MisCrashManager_PreviousUncaughtExceptionHandler;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> MisCrashManager_UncaughtExceptionHandler(<span class=\"built_in\">NSException</span> *exception)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(MisCrashManager_PreviousUncaughtExceptionHandler)&#123;</span><br><span class=\"line\">        MisCrashManager_PreviousUncaughtExceptionHandler(exception);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    MisCrashManager_DealException(exception);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">NSSetUncaughtExceptionHandler</span>(&amp;MisCrashManager_UncaughtExceptionHandler);</span><br></pre></td></tr></table></figure>\n\n<p>在收集的过程中，要多参数，多维度的去收集，包括不限于<code>base_address</code>、<code>slide_address</code>、<code>device_id</code>、<code>system_version</code>、<code>device_type</code>、<code>version</code>、<code>project</code>、<code>title</code>、<code>content</code>等参数，当然开发者需要根据本身业务去增加或减少</p>\n<p>常用的收集库<code>PLCrashReporter</code>、<code>CrashKit</code>，可以引入进来</p>\n<h2 id=\"存储crash\"><a href=\"#存储crash\" class=\"headerlink\" title=\"存储crash\"></a>存储crash</h2><p>将上一步收集的crash存储到本地，可以是sql的数据结构，也可以是xml、json等list数据结构，下一次app打开时候，实时的上传到服务器</p>\n<p>如下事例为收集、存储</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> MisCrashManager_DealException(<span class=\"built_in\">NSException</span> *exception)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">NSString</span> *title = [<span class=\"built_in\">NSString</span> stringWithFormat:<span class=\"string\">@\"%@ %@\"</span>,exception.name,exception.reason];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSData</span> *callStack = [<span class=\"built_in\">NSJSONSerialization</span> dataWithJSONObject:exception.callStackSymbols options:<span class=\"built_in\">NSJSONWritingPrettyPrinted</span> error:<span class=\"literal\">nil</span>];</span><br><span class=\"line\">    <span class=\"built_in\">NSString</span> *callStackStr = [[<span class=\"built_in\">NSString</span> alloc] initWithData:callStack encoding:<span class=\"built_in\">NSUTF8StringEncoding</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSDictionary</span> *remark = @&#123;<span class=\"string\">@\"base_address\"</span>    : MisCrashTool.baseAddress ? : <span class=\"string\">@\"\"</span>,</span><br><span class=\"line\">                             <span class=\"string\">@\"slide_address\"</span>   : MisCrashTool.slideAddress ? : <span class=\"string\">@\"\"</span>,</span><br><span class=\"line\">                             <span class=\"string\">@\"device_id\"</span>       : MisCrashManager.shared.deviceID ? : <span class=\"string\">@\"\"</span></span><br><span class=\"line\">                             &#125;;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSData</span> *remarkData = [<span class=\"built_in\">NSJSONSerialization</span> dataWithJSONObject:remark options:<span class=\"built_in\">NSJSONWritingPrettyPrinted</span> error:<span class=\"literal\">nil</span>];</span><br><span class=\"line\">    <span class=\"built_in\">NSString</span> *remarkStr = [[<span class=\"built_in\">NSString</span> alloc] initWithData:remarkData encoding:<span class=\"built_in\">NSUTF8StringEncoding</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSDictionary</span> *info = @&#123;<span class=\"string\">@\"sequence_id\"</span>       : MisCrashManager.shared.userID ? : <span class=\"string\">@\"\"</span>,</span><br><span class=\"line\">                           <span class=\"string\">@\"platform\"</span>          : <span class=\"string\">@\"ios\"</span>,</span><br><span class=\"line\">                           <span class=\"string\">@\"system_version\"</span>    : <span class=\"built_in\">UIDevice</span>.currentDevice.systemVersion ? : <span class=\"string\">@\"\"</span>,</span><br><span class=\"line\">                           <span class=\"string\">@\"device_type\"</span>       : MisCrashTool.deviceName ? : <span class=\"string\">@\"\"</span>,</span><br><span class=\"line\">                           <span class=\"string\">@\"version\"</span>           : <span class=\"built_in\">NSBundle</span>.mainBundle.infoDictionary[<span class=\"string\">@\"CFBundleShortVersionString\"</span>] ? : <span class=\"string\">@\"\"</span>,</span><br><span class=\"line\">                           <span class=\"string\">@\"project\"</span>           : MisCrashManager.shared.projectID ? : <span class=\"string\">@\"\"</span>,</span><br><span class=\"line\">                           <span class=\"string\">@\"create_time\"</span>       : @(@(<span class=\"built_in\">NSDate</span>.date.timeIntervalSince1970*<span class=\"number\">1000</span>).longLongValue),</span><br><span class=\"line\">                           <span class=\"string\">@\"title\"</span>             : title ? : <span class=\"string\">@\"\"</span>,</span><br><span class=\"line\">                           <span class=\"string\">@\"content\"</span>           : callStackStr ? : <span class=\"string\">@\"\"</span>,</span><br><span class=\"line\">                           <span class=\"string\">@\"remark\"</span>            : remarkStr ? : <span class=\"string\">@\"\"</span></span><br><span class=\"line\">                           &#125;;</span><br><span class=\"line\">    <span class=\"built_in\">NSData</span> *infoData = [<span class=\"built_in\">NSJSONSerialization</span> dataWithJSONObject:info options:<span class=\"built_in\">NSJSONWritingPrettyPrinted</span> error:<span class=\"literal\">nil</span>];</span><br><span class=\"line\">    <span class=\"built_in\">NSString</span> *infoStr = [[<span class=\"built_in\">NSString</span> alloc] initWithData:infoData encoding:<span class=\"built_in\">NSUTF8StringEncoding</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSString</span> *documentPaths = <span class=\"built_in\">NSSearchPathForDirectoriesInDomains</span>(<span class=\"built_in\">NSDocumentDirectory</span>, <span class=\"built_in\">NSUserDomainMask</span>, <span class=\"literal\">YES</span>).firstObject;</span><br><span class=\"line\">    documentPaths = [documentPaths stringByAppendingPathComponent:<span class=\"string\">@\"mis_crash_exception.txt\"</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSArray</span> *oldList = [[<span class=\"built_in\">NSArray</span> alloc] initWithContentsOfFile:documentPaths];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSMutableArray</span> *list = [[<span class=\"built_in\">NSMutableArray</span> alloc] initWithArray:oldList];</span><br><span class=\"line\">    [list addObject:infoStr ? : <span class=\"string\">@\"\"</span>];</span><br><span class=\"line\">    [list writeToFile:documentPaths atomically:<span class=\"literal\">YES</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"上传crash\"><a href=\"#上传crash\" class=\"headerlink\" title=\"上传crash\"></a>上传crash</h2><p>在app下次打开时候，https实时的上传到服务器,上传完一条记得把本地存储的该条记录删除</p>\n<h2 id=\"符号化crash\"><a href=\"#符号化crash\" class=\"headerlink\" title=\"符号化crash\"></a>符号化crash</h2><p>导出dsym文件，需要使用atos、symbolicate等操作进行符号化，也可以使用dsymTools(<a href=\"https://github.com/answer-huang/dSYMTools\" target=\"_blank\" rel=\"noopener\">https://github.com/answer-huang/dSYMTools</a>)</p>\n<p>符号化，拿着 符号地址 和 DSYM 进行 还原<br>symbol_address 是 stack_address 减去 slide_address 的结果</p>\n<p>堆栈地址StackAddress - 加载地址LoadAddress = 符号地址SymbolAddress<br>0x1003f34a0 - 0xea4000 = symbol_address</p>\n<p>atos -o xxx.app.DSYM/Contents/Resources/DWARF/xxx -arch arm64 symbol_address<br>atos -o xxx.app.DSYM/Contents/Resources/DWARF/xxx -arch arm64 0x1003F01FC</p>\n<p>原始采集到的crash信息如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CoreFoundation 0x0000000182eefd5c &lt;redacted&gt; + 52 </span><br><span class=\"line\">UIKit 0x000000018d25bc7c &lt;redacted&gt; + 1352</span><br><span class=\"line\">xxx      0x1003f34a0   xxx + 4142240</span><br></pre></td></tr></table></figure>\n\n<p>符号化后的明文为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3 UIKit -[UIWebSelectSinglePicker pickerView:didSelectRow:inComponent:] + 72</span><br><span class=\"line\">4 UIKit -[UIPickerTableView _scrollingFinished] + 188</span><br><span class=\"line\">5 xxx -[ServiceViewController tableView:didSelectRowAtIndexPath:] + 460</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"第三方优质服务商-开源服务\"><a href=\"#第三方优质服务商-开源服务\" class=\"headerlink\" title=\"第三方优质服务商/开源服务\"></a>第三方优质服务商/开源服务</h2><p><code>apple crash</code>、<code>google firebase</code>、<code>bugly</code>、<code>sentry开源且支持私有化部署</code></p>\n<h2 id=\"sentry私有化部署接入记录\"><a href=\"#sentry私有化部署接入记录\" class=\"headerlink\" title=\"sentry私有化部署接入记录\"></a>sentry私有化部署接入记录</h2><p>Client Key (dsn) 在sentry后台的<code>Settings -&gt; Projects -&gt; 目标project -&gt; Client Keys -&gt; DSN</code></p>\n<p>Auth Tokens 在sentry后台的<code>Settings -&gt; Account -&gt; Auth Tokens</code>, 使用sentry-cli命令行登录时候需要用到的token</p>\n<p>DSYM 在在sentry后台的<code>Settings -&gt; Projects -&gt; 目标project -&gt; Debug Files</code></p>\n<p>dsym符号表的上传需要使用sentry-cli命令，可在命令行手动上传，可写脚本嵌到工程的 Build Phases里面自动上传</p>\n<p>安装sentry-cli : 命令行 <code>curl -sL https://sentry.io/get-cli/ | bash</code></p>\n<p>登录sentry-cli : <code>sentry-cli —url  http://sentry.xxxdomain.com/  login</code></p>"},{"title":"操作系统编程使用的常见加密算法","date":"2018-09-11T02:41:00.000Z","comments":1,"_content":"\n简单介绍下操作系统编程中常见的经常使用的加密算法种类\n\n<!-- more -->\n\n* 编码型算法加密\n\t1. `Base64`\n* 摘要算法加密\n\t1. `MD5`\n\t2. `SHA1`、`SHA2`、`SHA256`\n* 对称加密\n\t1. `AES`\n\t2. `DES`\n* 非对称加密\n\t1. `RSA`\n\t2. `SSL(Https)`\n\n### 对称加密\n加解密双方 共享`密钥`，即为`对称`（`明文` <-> `密钥` <-> `密文`）\n优点：加密速度快\n缺点：安全性低\n\n### 非对称加密\n加解密双方使用 一对密钥(`私钥-公钥 对`) 使用了 私钥加密的信息，只有该私钥对应的公钥才能解密，使用了 公钥加密的信息，只有该公钥对应的私钥才能解密，也就是加解密是单向的；`明文`使用`密钥(公钥)`加密成`密文`，`密文`使用`密钥(私钥)`解密成`明文`，密钥可使用`公钥`或`私钥`\n优点：安全性高\n缺点：运算耗时\n","source":"_posts/encrypt.md","raw":"---\ntitle: \"操作系统编程使用的常见加密算法\"\ndate: 2018-09-11 10:41:00 +0800\ncomments: true\ntags:\n- 加密\n- 算法\ncategories:\n- [加密]\n- [算法]\n---\n\n简单介绍下操作系统编程中常见的经常使用的加密算法种类\n\n<!-- more -->\n\n* 编码型算法加密\n\t1. `Base64`\n* 摘要算法加密\n\t1. `MD5`\n\t2. `SHA1`、`SHA2`、`SHA256`\n* 对称加密\n\t1. `AES`\n\t2. `DES`\n* 非对称加密\n\t1. `RSA`\n\t2. `SSL(Https)`\n\n### 对称加密\n加解密双方 共享`密钥`，即为`对称`（`明文` <-> `密钥` <-> `密文`）\n优点：加密速度快\n缺点：安全性低\n\n### 非对称加密\n加解密双方使用 一对密钥(`私钥-公钥 对`) 使用了 私钥加密的信息，只有该私钥对应的公钥才能解密，使用了 公钥加密的信息，只有该公钥对应的私钥才能解密，也就是加解密是单向的；`明文`使用`密钥(公钥)`加密成`密文`，`密文`使用`密钥(私钥)`解密成`明文`，密钥可使用`公钥`或`私钥`\n优点：安全性高\n缺点：运算耗时\n","slug":"encrypt","published":1,"updated":"2020-06-23T07:15:53.614Z","layout":"post","photos":[],"link":"","_id":"ckbrn0y3t00006u3j05i1fbm5","content":"<p>简单介绍下操作系统编程中常见的经常使用的加密算法种类</p>\n<a id=\"more\"></a>\n\n<ul>\n<li>编码型算法加密<ol>\n<li><code>Base64</code></li>\n</ol>\n</li>\n<li>摘要算法加密<ol>\n<li><code>MD5</code></li>\n<li><code>SHA1</code>、<code>SHA2</code>、<code>SHA256</code></li>\n</ol>\n</li>\n<li>对称加密<ol>\n<li><code>AES</code></li>\n<li><code>DES</code></li>\n</ol>\n</li>\n<li>非对称加密<ol>\n<li><code>RSA</code></li>\n<li><code>SSL(Https)</code></li>\n</ol>\n</li>\n</ul>\n<h3 id=\"对称加密\"><a href=\"#对称加密\" class=\"headerlink\" title=\"对称加密\"></a>对称加密</h3><p>加解密双方 共享<code>密钥</code>，即为<code>对称</code>（<code>明文</code> &lt;-&gt; <code>密钥</code> &lt;-&gt; <code>密文</code>）<br>优点：加密速度快<br>缺点：安全性低</p>\n<h3 id=\"非对称加密\"><a href=\"#非对称加密\" class=\"headerlink\" title=\"非对称加密\"></a>非对称加密</h3><p>加解密双方使用 一对密钥(<code>私钥-公钥 对</code>) 使用了 私钥加密的信息，只有该私钥对应的公钥才能解密，使用了 公钥加密的信息，只有该公钥对应的私钥才能解密，也就是加解密是单向的；<code>明文</code>使用<code>密钥(公钥)</code>加密成<code>密文</code>，<code>密文</code>使用<code>密钥(私钥)</code>解密成<code>明文</code>，密钥可使用<code>公钥</code>或<code>私钥</code><br>优点：安全性高<br>缺点：运算耗时</p>\n","site":{"data":{}},"excerpt":"<p>简单介绍下操作系统编程中常见的经常使用的加密算法种类</p>","more":"<ul>\n<li>编码型算法加密<ol>\n<li><code>Base64</code></li>\n</ol>\n</li>\n<li>摘要算法加密<ol>\n<li><code>MD5</code></li>\n<li><code>SHA1</code>、<code>SHA2</code>、<code>SHA256</code></li>\n</ol>\n</li>\n<li>对称加密<ol>\n<li><code>AES</code></li>\n<li><code>DES</code></li>\n</ol>\n</li>\n<li>非对称加密<ol>\n<li><code>RSA</code></li>\n<li><code>SSL(Https)</code></li>\n</ol>\n</li>\n</ul>\n<h3 id=\"对称加密\"><a href=\"#对称加密\" class=\"headerlink\" title=\"对称加密\"></a>对称加密</h3><p>加解密双方 共享<code>密钥</code>，即为<code>对称</code>（<code>明文</code> &lt;-&gt; <code>密钥</code> &lt;-&gt; <code>密文</code>）<br>优点：加密速度快<br>缺点：安全性低</p>\n<h3 id=\"非对称加密\"><a href=\"#非对称加密\" class=\"headerlink\" title=\"非对称加密\"></a>非对称加密</h3><p>加解密双方使用 一对密钥(<code>私钥-公钥 对</code>) 使用了 私钥加密的信息，只有该私钥对应的公钥才能解密，使用了 公钥加密的信息，只有该公钥对应的私钥才能解密，也就是加解密是单向的；<code>明文</code>使用<code>密钥(公钥)</code>加密成<code>密文</code>，<code>密文</code>使用<code>密钥(私钥)</code>解密成<code>明文</code>，密钥可使用<code>公钥</code>或<code>私钥</code><br>优点：安全性高<br>缺点：运算耗时</p>"},{"title":"操作系统数字签名、数字证书、证书链","date":"2018-09-11T02:41:00.000Z","comments":1,"_content":"\n简单介绍下数字签名、数字证书\n\n<!-- more -->\n\n### 前沿\n开发过程中需要对app发起的API请求进行验签，防篡改处理\n\n### 数字证书\n每个操作系统中会自带很多根证书(根证书即称为CA颁发机构)，这些默认是`隐士信任`的\n\n如下图为Mac自带的系统根证书\n![](/images/digital_1.png)\n\n<https://support.apple.com/zh-cn/HT204132> 这个链接是iPhone手机中内置的根证书\n\n也有的根证书，是 加到 操作系统里，让用户点击确认后，信任的( `显示信任` )，比如 抓包Charles的证书\n\n抓包，就是 抓包工具 伪装成 服务器，APP连接此服务器进行通讯，然后 此服务器再伪装成客户端，和 真实的服务器进行通讯，它就成了 中间人了，所有的数据 它都能拿到，并且可以进行篡改\n\n证书组成信息，包括主题名称、国家/地区、所在地、组织、组织单位、有效期、公共密钥信息、签发者信息\n\n![](/images/digital_2.png)\n![](/images/digital_3.png)\n\n### 证书链\n证书链：从根证书一级一级向下颁发证书，进行签名\n\n![](/images/digital_4.png)\n\n## 验签\n\n验签目的是防止 `中间人攻击`\n所以要做 证书 检验，即 证书锁定 SSL Pinning\n\n* 一般有3个方向,从宽到严依次为\n\t1. 叶节点证书 校验，在证书链上 校验 叶节点是否是 使用的证书，可以从证书的信息校验，比如 证书常用名称，证书序列号，证书指纹(证书的sha-256算法加密签名、 证书的sha-1算法加密签名)，AFNet里面提供了 证书public key信息校验，证书data信息校验 , 但如果服务器换证书了，这个就悲剧了\n\n\t2. 根节点证书 校验，在证书链上 校验 根节点 使用的证书 ，比如 根证书 publicKey是否和 预埋的一致，根证书的sha-256签名和预埋的是否一致，但这种情况下，如果服务器换了别家的 CA颁发机构 ，就悲剧了\n\n\t3. 验证 根证书 是否是 系统自带的内置的证书，校验方式，就是验证证书的信息，比如 证书常用名称，证书序列号，证书指纹(证书的sha-256算法加密签名、 证书的sha-1算法加密签名)，也就是 验证当前网络服务器的根证书的 sha-256算法签名 是否在 https://support.apple.com/zh-cn/HT204132 这个列表里\n\t\n```objc\n// 获取证书链\n- (void)logDistrustCert:(SecTrustRef)serverTrust\n{\n    NSMutableArray *list = [[NSMutableArray alloc] init];\n    \n    CFIndex certificateCount = SecTrustGetCertificateCount(serverTrust);\n    \n    for (CFIndex i = 0; i < certificateCount; i++) {\n        SecCertificateRef certificate = SecTrustGetCertificateAtIndex(serverTrust, i);\n        \n        NSMutableDictionary *certInfo = [[NSMutableDictionary alloc] init];\n        \n        CFStringRef subjectSummary = SecCertificateCopySubjectSummary(certificate);\n        certInfo[@\"subject_summary\"] = [NSString stringWithFormat:@\"%@\", subjectSummary];\n        \n        if (@available(iOS 11.0, *)) {\n            NSData *serialNum = (__bridge_transfer NSData *)SecCertificateCopySerialNumberData(certificate, nil);\n            certInfo[@\"serial_number\"] = [NSString stringWithFormat:@\"%@\", serialNum];\n        }\n        \n        NSData *certData = (__bridge_transfer NSData *)SecCertificateCopyData(certificate);\n        certInfo[@\"sha256\"] = [NSString stringWithFormat:@\"%@\", AFSHA256(certData)];\n        \n        certInfo[@\"time\"] = @(NSDate.date.timeIntervalSince1970);\n        \n        [list addObject:certInfo];\n    }\n    \n    [self saveDistrustCert:list];\n}\n\n// 获取证书的sha256\nstatic NSString *AFSHA256(NSData *data)\n{\n    if (data.length <= 0) {\n        return @\"\";\n    }\n    \n    uint8_t digest[CC_SHA256_DIGEST_LENGTH];\n    \n    CC_SHA256(data.bytes, (CC_LONG)data.length, digest);\n    \n    NSMutableString *result = [NSMutableString stringWithCapacity:CC_SHA256_DIGEST_LENGTH * 3];\n    for (int i = 0; i < CC_SHA256_DIGEST_LENGTH; i++) {\n        [result appendFormat:@\"%02x\", digest[i]];\n    }\n    \n    return [result stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]].uppercaseString;\n}\n```\n\n```objc\n// 这个list为iPhone中的系统自带的根证书的sha256\n\nstatic NSArray *systemInlayCertSha256()\n{\n    NSArray *list =\n    @[@\"D7A7A0FB5D7E2731D771E9484EBCDEF71D5F0C3E0A2948782BC83EE0EA699EF4\",\n      @\"55926084EC963A64B96E2ABE01CE0BA86A64FBFEBCC7AAB5AFC155B37FD76066\",\n      @\"8C7209279AC04E275E16D07FD3B775E80154B5968046E31F52DD25766324E9A7\",\n      @\"687FA451382278FFF0C8B11F8D43D576671C6EB2BCEAB413FB83D965D06D2FF2\",\n      @\"A31F093053BD12C1F5C3C6EFD498023FD2914D7758D05D698CE084B50626E0E5\",\n      @\"0376AB1D54C5F9803CE4B2E201A0EE7EEF7B57B636E8A93C9B8D4860C96F5FA7\",\n      @\"0A81EC5A929777F145904AF38D5D509F66B5E2C58FCDB531058B0E17F3F0B41B\",\n      @\"BD71FDF6DA97E4CF62D1647ADD2581B07D79ADF8397EB4ECBA9C5E8488821423\",\n      @\"70A73F7F376B60074248904534B11482D5BF0E698ECC498DF52577EBF2E93B9A\",\n      @\"8ECDE6884F3D87B1125BA31AC3FCB13D7016DE7F57CC904FE1CB97C6AE98196E\",\n      @\"1BA5B2AA8C65401A82960118F80BEC4F62304D83CEC4713A19C39C011EA46DB4\",\n      @\"18CE6CFE7BF14E60B2E347B8DFE868CB31D02EBB3ADA271569F50343B46DB3A4\",\n      @\"E35D28419ED02025CFA69038CD623962458DA5C695FBDEA3C22B0BFB25897092\",\n      @\"E3268F6106BA8B665A1A962DDEA1459D2A46972F1F2440329B390B895749AD45\",\n      @\"C2B9B042DD57830E7D117DAC55AC8AE19407D38E41D88F3215BC3A890444A050\",\n      @\"63343ABFB89A6A03EBB57E9B3F5FA7BE7C4F5C756F3017B3A8C488C3653E9179\",\n      @\"B0B1730ECBC7FF4505142C49F1295E6EDA6BCAED7E2C68C5BE91B5A11001F024\",\n      @\"0D83B611B648A1A75EB8558400795375CAD92E264ED8E9D7A757C1F5EE2BB22D\",\n      @\"126BF01C1094D2F0CA2E352380B3C724294546CCC65597BEF7F12D8A171F1984\",\n      @\"F356BEA244B7A91EB35D53CA9AD7864ACE018E2D35D5F8F96DDF68A6F41AA474\",\n      @\"04048028BF1F2864D48F9AD4D83294366A828856553F3B14303F90147F5D40EF\",\n      @\"0ED3FFAB6C149C8B4E71058E8668D429ABFDA681C2FFF508207641F0D751A3E5\",\n      @\"16AF57A9F676B0AB126095AA5EBADEF22AB31119D644AC95CD4B93DBF3F26AEB\",\n      @\"9F9744463BE13714754E1A3BECF98C08CC205E4AB32028F4E2830C4A1B2775B8\",\n      @\"9A114025197C5BB95D94E63D55CD43790847B646B23CDF11ADA4A00EFF15FB48\",\n      @\"EDF7EBBCA27A2A384D387B7D4010C666E2EDB4843E4C29B4AE1D5B9332E6B24D\",\n      @\"F96F23F4C3E79C077A46988D5AF5900676A0F039CB645DD17549B216C82440CE\",\n      @\"E23D4A036D7B70E9F595B1422079D2B91EDFBB1FB651A0633EAA8A9DC5F80703\",\n      @\"E3B6A2DB2ED7CE48842F7AC53241C7B71D54144BFB40C11F3F1D0B42F5EEA12D\",\n      @\"FCBFE2886206F72B27593C8B070297E12D769ED10ED7930705A8098EFFC14D17\",\n      @\"2A99F5BC1174B73CBB1D620884E01C34E51CCB3978DA125F0E33268883BF4158\",\n      @\"152A402BFCDF2CD548054D2275B39C7FCA3EC0978078B0F0EA76E561A6C7433E\",\n      @\"6CC05041E6445E74696C4CFBC9F80F543B7EABBB44B4CE6F787C6A9971C42F17\",\n      @\"EAA962C4FA4A6BAFEBE415196D351CCD888D4F53F3FA8AE6D7C466A94E6042BB\",\n      @\"D8E0FEBC1DB2E38D00940F37D27D41344D993E734B99D5656D9778D4D8143624\",\n      @\"B676F2EDDAE8775CD36CB0F63CD1D4603961F49E6265BA013A2F0307B6D0B804\",\n      @\"5C58468D55F58E497E743982D2B50010B6D165374ACF83A7D4A32DB768C4408E\",\n      @\"5CC3D78E4E1D5E45547A04E6873E64F90CF9536D1CCC2EF800F355C4C5FD70FD\",\n      @\"063E4AFAC491DFD332F3089B8542E94617D893D7FE944E10A7937EE29D9693C0\",\n      @\"0C258A12A5674AEF25F28BA7DCFAECEEA348E541E6F5CC4EE63B71B361606AC3\",\n      @\"8327BC8C9D69947B3DE3C27511537267F59C21B9FA7B613FAFBCCD53B7024000\",\n      @\"0F993C8AEF97BAAF5687140ED59AD1821BB4AFACF0AA9A58B5D57A338A3AFBCB\",\n      @\"0C2CD63DF7806FA399EDE809116B575BF87989F06518F9808C860503178BAF66\",\n      @\"1793927A0614549789ADCE2F8F34F7F0B66D0F3AE3A3B84D21EC15DBBA4FADC7\",\n      @\"52F0E1C4E58EC629291B60317F074671B85D7EA80D5B07273463534B32B40234\",\n      @\"AE4457B40D9EDA96677B0D3C92D57B5177ABD7AC1037958356D1E094518BE5F2\",\n      @\"2605875AFCC176B2D66DD66A995D7F8D5EBB86CE120D0E7E9E7C6EF294A27D4C\",\n      @\"507941C74460A0B47086220D4E9932572AB5D1B5BBCB8980AB1CB17651A844D2\",\n      @\"A1A86D04121EB87F027C66F53303C28E5739F943FC84B38AD6AF009035DD9457\",\n      @\"49E7A442ACF0EA6287050054B52564B650E4F49E42E348D6AA38E039E957B1C1\",\n      @\"EEC5496B988CE98625B934092EEC2908BED0B0F316C2D4730C84EAF1F3D34881\",\n      @\"B6191A50D0C3977F7DA99BCDAAC86A227DAEB9679EC70BA3B0C9D92271C170D3\",\n      @\"3E9099B5015E8F486C00BCEA9D111EE721FABA355A89BCF1DF69561E3DC6325C\",\n      @\"7D05EBB682339F8C9451EE094EEBFEFA7953A114EDB2F44949452FAB7D2FC185\",\n      @\"7E37CB8B4C47090CAB36551BA6F45DB840680FBA166A952DB100717F43053FC2\",\n      @\"4348A0E9444C78CB265E058D5E8944B4D84F9662BD26DB257F8934A443C70161\",\n      @\"CB3CCBB76031E5E0138F8DD39A23F9DE47FFC35E43C1144CEA27D46A5AB1CB5F\",\n      @\"31AD6648F8104138C738F39EA4320133393E3A18CC02296EF97C2AC9EF6731D0\",\n      @\"7431E5F4C3C1CE4690774F0B61E05440883BA9A01ED00BA6ABD7806ED3B118CF\",\n      @\"552F7BDCF1A7AF9E6CE672017F4F12ABF77240C78E761AC203D1D9D20AC89988\",\n      @\"0687260331A72403D909F105E69BCF0D32E1BD2493FFC6D9206D11BCD6770739\",\n      @\"9A73929A500F1A0BF49DCB046E8039169696557345E9F813F10FF9380DB22695\",\n      @\"B0BFD52BB0D7D9BD92BF5D4DC13DA255C02C542F378365EA893911F55E55F23C\",\n      @\"6639D13CAB85DF1AD9A23C443B3A60901E2B138D456FA71183578108884EC6BF\",\n      @\"3E84BA4342908516E77573C0992F0979CA084E4685681FF195CCBA8A229B8A76\",\n      @\"02ED0EB28C14DA45165C566791700D6451D7FB56F0B2AB1D3B8EB070E56EDFF5\",\n      @\"43DF5774B03E7FEF5FE40D931A7BEDF1BB2E6B42738C4E6D3841103D3AA7F339\",\n      @\"73C176434F1BC6D5ADF45B0E76E727287C8DE57616C1E6E6141A2B2CBC7D8E4C\",\n      @\"D1C339EA2784EB870F934FC5634E4AA9AD5505016401F26465D37A574663359F\",\n      @\"6DC47172E01CBCB0BF62580D895FE2B8AC9AD4F873801E0C10B9C837D21EB177\",\n      @\"C0A6F4DC63A24BFDCF54EF2A6A082A0A72DE35803E2FF5FF527AE5D87206DFD5\",\n      @\"894EBC0B23DA2A50C0186B7F8F25EF1F6B2935AF32A94584EF80AAF877A3A06E\",\n      @\"FF856A2D251DCD88D36656F450126798CFABAADE40799C722DE4D2B5DB36A73A\",\n      @\"5EDB7AC43B82A06A8761E8D7BE4979EBF2611F7DD79BF91C1C6B566A219ED766\",\n      @\"B478B812250DF878635C2AA7EC7D155EAA625EE82916E2CD294361886CD1FBD4\",\n      @\"37D51006C512EAAB626421F1EC8C92013FC5F82AE98EE533EB4619B8DEB4D06C\",\n      @\"136335439334A7698016A0D324DE72284E079D7B5220BB8FBD747816EEBEBACA\",\n      @\"EF3CB417FC8EBF6F97876C9E4ECE39DE1EA5FE649141D1028B7D11C0B2298CED\",\n      @\"EBD41040E4BB3EC742C9E381D31EF2A41A48B6685C96E7CEF3C1DF6CD4331C99\",\n      @\"BEC94911C2955676DB6C0A550986D76E3BA005667C442C9762B4FBB773DE228C\",\n      @\"179FBC148A3DD00FD24EA13458CC43BFA7F59C8182D783A513F6EBEC100C8924\",\n      @\"CA42DD41745FD0B81EB902362CF9D8BF719DA1BD1B1EFC946F5B4C99F42C1B9E\",\n      @\"CBB522D7B7F127AD6A0113865BDF1CD4102E7D0759AF635A7CF4720DC963C53B\",\n      @\"C3846BF24B9E93CA64274C0EC67C1ECC5E024FFCACD2D74019350E81FE546AE4\",\n      @\"45140B3247EB9CC8C5B4F0D7B53091F73292089E6E5A63E2749DD3ACA9198EDA\",\n      @\"70B922BFDA0E3F4A342E4EE22D579AE598D071CC5EC9C30F123680340388AEA5\",\n      @\"BC104F15A48BE709DCA542A7E1D4B9DF6F054527E802EAA92D595444258AFE71\",\n      @\"F9E67D336C51002AC054C632022D66DDA2E7E3FFF10AD061ED31D8BBB410CFB2\",\n      @\"C0C05A8D8DA55EAF27AA9B910B0A6EF0D8BBDED346928DB872E182C2073E9802\",\n      @\"5D56499BE4D2E08BCFCAD08A3E38723D50503BDE706948E42F55603019E528AE\",\n      @\"30D0895A9A448A262091635522D1F52010B5867ACAE12C78EF958FD4F4389F2F\",\n      @\"96BCEC06264976F37460779ACF28C5A7CFE8A3C0AAE11A8FFCEE05C0BDDF08C6\",\n      @\"23804203CA45D8CDE716B8C13BF3B448457FA06CC10250997FA01458317C41E5\",\n      @\"2530CC8E98321502BAD96F9B1FBA1B099E2D299E0F4548BB914F363BC0D4531F\",\n      @\"6FDB3F76C8B801A75338D8A50A7C02879F6198B57E594D318D3832900FEDCD79\",\n      @\"3C5F81FEA5FAB82C64BFA2EAECAFCDE8E077FC8620A7CAE537163DF36EDBF378\",\n      @\"6C61DAC3A2DEF031506BE036D2A6FE401994FBD13DF9C8D466599274C446EC98\",\n      @\"15F0BA00A3AC7AF3AC884C072B1011A077BD77C097F40164B2F8598ABD83860C\",\n      @\"41C923866AB4CAD6B7AD578081582E020797A6CBDF4FFF78CE8396B38937D7F5\",\n      @\"6B9C08E86EB0F767CFAD65CD98B62149E5494A67F5845E7BD1ED019F27B86BD6\",\n      @\"56C77128D98C18D91B4CFDFFBC25EE9103D4758EA2ABAD826A90F3457D460EB4\",\n      @\"27995829FE6A7515C1BFE848F9C4761DB16C225929257BF40D0894F29EA8BAF2\",\n      @\"B7C36231706E81078C367CB896198F1E3208DD926949DD8F5709A410F75B6292\",\n      @\"8A866FD1B276B57E578E921C65828A2BED58E9F2F288054134B7F1F4BFC9CC74\",\n      @\"8FE4FB0AF93A4D0D67DB0BEBB23E37C71BF325DCBCDD240EA04DAF58B47E1840\",\n      @\"85A0DD7DD720ADB7FF05F83D542B209DC7FF4528F7D677B18389FEA5E5C49E86\",\n      @\"88EF81DE202EB018452E43F864725CEA5FBD1FC2D9D205730709C5D8B8690F46\",\n      @\"18F1FC7F205DF8ADDDEB7FE007DD57E3AF375A9C4D8D73546BF4F1FED1E18D35\",\n      @\"A45EDE3BBBF09C8AE15C72EFC07268D693A21C996FD51E67CA079460FD6D8873\",\n      @\"4200F5043AC8590EBB527D209ED1503029FBCBD41CA1B506EC27F15ADE7DAC69\",\n      @\"F1C1B50AE5A20DD8030EC9F6BC24823DD367B5255759B4E71B61FCE9F7375D73\",\n      @\"A22DBA681E97376E2D397D728AAE3A9B6296B9FDBA60BC2E11F647F2C675FB37\",\n      @\"E75E72ED9F560EEC6EB4800073A43FC3AD19195A392282017895974A99026B6C\",\n      @\"513B2CECB810D4CDE5DD85391ADFC6C2DD60D87BB736D2B521484AA47A0EBEF6\",\n      @\"7908B40314C138100B518D0735807FFBFCF8518A0095337105BA386B153DD927\",\n      @\"4D2491414CFE956746EC4CEFA6CF6F72E28A1329432F9D8A907AC4CB5DADC15A\",\n      @\"668C83947DA63B724BECE1743C31A0E6AED0DB8EC5B31BE377BB784F91B6716F\",\n      @\"3C4FB0B95AB8B30032F432B86F535FE172C185D0FD39865837CF36187FA6F428\",\n      @\"1465FA205397B876FAA6F0A9958E5590E40FCC7FAA4FB7C2C8677521FB5FB658\",\n      @\"2CE1CB0BF9D2F9E102993FBE215152C3B2DD0CABDE1C68E5319B839154DBB7F5\",\n      @\"568D6905A2C88708A4B3025190EDCFEDB1974A606A13C6E5290FCB2AE63EDAB5\",\n      @\"C7BA6567DE93A798AE1FAA791E712D378FAE1F93C4397FEA441BB7CBE6FD5995\",\n      @\"C766A9BEF2D4071C863A31AA4920E813B2D198608CB7B7CFE21143B836DF09EA\",\n      @\"E17890EE09A3FBF4F48B9C414A17D637B7A50647E9BC752322727FCC1742A911\",\n      @\"21DB20123660BB2ED418205DA11EE7A85A65E2BC6E55B5AF7E7899C8A266D92E\",\n      @\"F09B122C7114F4A09BD4EA4F4A99D558B46E4C25CD81140D29C05613914C3841\",\n      @\"D95FEA3CA4EEDCE74CD76E75FC6D1FF62C441F0FA8BC77F034B19E5DB258015D\",\n      @\"62DD0BE9B9F50A163EA0F8E75C053B1ECA57EA55C8688F647C6881F2C8357B95\",\n      @\"7AF6EA9F753A1E709BD64D0BEB867C11E8C295A56E24A6E0471459DCCDAA1558\",\n      @\"3B222E566711E992300DC0B15AB9473DAFDEF8C84D0CEF7D3317B4C1821D1436\",\n      @\"59B3829F1FF443344958FAE8BFF621B684C848CFBF7EAD6B63A6CA50F2794F89\",\n      @\"BE6C4DA2BBB9BA59B6F3939768374246C3C005993FA98F020D1DEDBED48A81D5\",\n      @\"1E49AC5DC69E86D0565DA2C1305C419330B0B781BFEC50E54A1B35AF7FDDD501\",\n      @\"363F3C849EAB03B0A2A0F636D7B86D04D3AC7FCFE26A0A9121AB9795F6E176DF\",\n      @\"9D190B2E314566685BE8A889E27AA8C7D7AE1D8AADDBA3C1ECF9D24863CD34B9\",\n      @\"FE863D0822FE7A2353FA484D5924E875656D3DC9FB58771F6F616F9D571BC592\",\n      @\"CB627D18B58AD56DDE331A30456BC65C601A4E9B18DEDCEA08E7DAAA07815FF0\",\n      @\"53DFDFA4E297FCFE07594E8C62D5B8AB06B32C7549F38A163094FD6429D5DA43\",\n      @\"B32396746453442F353E616292BB20BBAA5D23B546450FDB9C54B8386167D529\",\n      @\"FABCF5197CDD7F458AC33832D3284021DB2425FD6BEA7A2E69B7486E8F51F9CC\",\n      @\"91E2F5788D5810EBA7BA58737DE1548A8ECACD014598BC0B143E041B17052552\",\n      @\"FD73DAD31C644FF1B43BEF0CCDDA96710B9CD9875ECA7E31707AF3E96D522BBD\",\n      @\"DD6936FE21F8F077C123A1A521C12224F72255B73E03A7260693E8A24B0FA389\",\n      @\"A4310D50AF18A6447190372A86AFAF8B951FFB431D837F1E5688B45971ED1557\",\n      @\"4B03F45807AD70F21BFC2CAE71C9FDE4604C064CF5FFB686BAE5DBAAD7FDD34C\",\n      @\"8D722F81A9C113C0791DF136A2966DB26C950A971DB46B4199F4EA54B78BFB9F\",\n      @\"92D8092EE77BC9208F0897DC05271894E63EF27933AE537FB983EEF0EAE3EEC8\",\n      @\"C1B48299ABA5208FE9630ACE55CA68A03EDA5A519C8802A0D3A673BE8F8E557D\",\n      @\"59769007F7685D0FCD50872F9F95D5755A5B2B457D81F3692B610A98672F0E1B\",\n      @\"BFD88FE1101C41AE3E801BF8BE56350EE9BAD1A6B9BD515EDC5C6D5B8711AC44\",\n      @\"A1F05CCB80C2D710EC7D479ABDCBB879E58D7EDB7149FE78A87884E3D0BAD0F9\",\n      @\"93E65EC762F055DC718A332582C41A04430D72E3CB87E8B897B67516F0D1AA39\",\n      @\"4FF460D54B9C86DABFBCFC5712E0400D2BED3FBC4D4FBDAA86E06ADCD2A9AD7A\",\n      @\"E793C9B02FD8AA13E21C31228ACCB08119643B749C898964B1746D46C3D4CBD2\",\n      @\"85FB2F91DD12275A0145B636534F84024AD68B69B8EE88684FF711375805B348\",\n      @\"43F257412D440D627476974F877DA8F1FC2444565A367AE60EDDC27A412531AE\",\n      @\"6EA54741D004667EED1B4816634AA3A79E6E4B96950F8279DAFC8D9BD8812137\",\n      @\"6FFF78E400A70C11011CD85977C459FB5AF96A3DF0540820D0F4B8607875E58F\",\n      @\"CBB5AF185E942A2402F9EACBC0ED5BB876EEA3C1223623D00447E4F3BA554B65\",\n      @\"92A9D9833FE1944DB366E8BFAE7A95B6480C2D6C6C2A1BE65D4236B608FCA1BB\",\n      @\"EB04CF5EB1F39AFA762F2BB120F296CBA520C1B97DB1589565B81CB9A17B7244\",\n      @\"69DDD7EA90BB57C93E135DC85EA6FCD5480B603239BDC454FC758B2A26CF7F79\",\n      @\"9ACFAB7E43C8D880D06B262A94DEEEE4B4659989C3D0CAF19BAF6405E41AB7DF\",\n      @\"2399561127A57125DE8CEFEA610DDF2FA078B5C8067F4E828290BFB860E84B3C\",\n      @\"69FAC9BD55FB0AC78D53BBEE5CF1D597989FD0AAAB20A25151BDF1733EE7D122\",\n      @\"C57A3ACBE8C06BA1988A83485BF326F2448775379849DE01CA43571AF357E74B\",\n      @\"F008733EC500DC498763CC9264C6FCEA40EC22000E927D053CE9C90BFA046CB2\",\n      @\"CECDDC905099D8DADFC5B1D209B737CBE2C18CFB2C10C0FF0BCF0D3286FC1AA2\"];\n    \n    return list;\n}\n```","source":"_posts/digital-signature.md","raw":"---\ntitle: \"操作系统数字签名、数字证书、证书链\"\ndate: 2018-09-11 10:41:00 +0800\ncomments: true\ntags:\n- 证书链\n- 数字证书\ncategories:\n- [证书链]\n- [数字证书]\n---\n\n简单介绍下数字签名、数字证书\n\n<!-- more -->\n\n### 前沿\n开发过程中需要对app发起的API请求进行验签，防篡改处理\n\n### 数字证书\n每个操作系统中会自带很多根证书(根证书即称为CA颁发机构)，这些默认是`隐士信任`的\n\n如下图为Mac自带的系统根证书\n![](/images/digital_1.png)\n\n<https://support.apple.com/zh-cn/HT204132> 这个链接是iPhone手机中内置的根证书\n\n也有的根证书，是 加到 操作系统里，让用户点击确认后，信任的( `显示信任` )，比如 抓包Charles的证书\n\n抓包，就是 抓包工具 伪装成 服务器，APP连接此服务器进行通讯，然后 此服务器再伪装成客户端，和 真实的服务器进行通讯，它就成了 中间人了，所有的数据 它都能拿到，并且可以进行篡改\n\n证书组成信息，包括主题名称、国家/地区、所在地、组织、组织单位、有效期、公共密钥信息、签发者信息\n\n![](/images/digital_2.png)\n![](/images/digital_3.png)\n\n### 证书链\n证书链：从根证书一级一级向下颁发证书，进行签名\n\n![](/images/digital_4.png)\n\n## 验签\n\n验签目的是防止 `中间人攻击`\n所以要做 证书 检验，即 证书锁定 SSL Pinning\n\n* 一般有3个方向,从宽到严依次为\n\t1. 叶节点证书 校验，在证书链上 校验 叶节点是否是 使用的证书，可以从证书的信息校验，比如 证书常用名称，证书序列号，证书指纹(证书的sha-256算法加密签名、 证书的sha-1算法加密签名)，AFNet里面提供了 证书public key信息校验，证书data信息校验 , 但如果服务器换证书了，这个就悲剧了\n\n\t2. 根节点证书 校验，在证书链上 校验 根节点 使用的证书 ，比如 根证书 publicKey是否和 预埋的一致，根证书的sha-256签名和预埋的是否一致，但这种情况下，如果服务器换了别家的 CA颁发机构 ，就悲剧了\n\n\t3. 验证 根证书 是否是 系统自带的内置的证书，校验方式，就是验证证书的信息，比如 证书常用名称，证书序列号，证书指纹(证书的sha-256算法加密签名、 证书的sha-1算法加密签名)，也就是 验证当前网络服务器的根证书的 sha-256算法签名 是否在 https://support.apple.com/zh-cn/HT204132 这个列表里\n\t\n```objc\n// 获取证书链\n- (void)logDistrustCert:(SecTrustRef)serverTrust\n{\n    NSMutableArray *list = [[NSMutableArray alloc] init];\n    \n    CFIndex certificateCount = SecTrustGetCertificateCount(serverTrust);\n    \n    for (CFIndex i = 0; i < certificateCount; i++) {\n        SecCertificateRef certificate = SecTrustGetCertificateAtIndex(serverTrust, i);\n        \n        NSMutableDictionary *certInfo = [[NSMutableDictionary alloc] init];\n        \n        CFStringRef subjectSummary = SecCertificateCopySubjectSummary(certificate);\n        certInfo[@\"subject_summary\"] = [NSString stringWithFormat:@\"%@\", subjectSummary];\n        \n        if (@available(iOS 11.0, *)) {\n            NSData *serialNum = (__bridge_transfer NSData *)SecCertificateCopySerialNumberData(certificate, nil);\n            certInfo[@\"serial_number\"] = [NSString stringWithFormat:@\"%@\", serialNum];\n        }\n        \n        NSData *certData = (__bridge_transfer NSData *)SecCertificateCopyData(certificate);\n        certInfo[@\"sha256\"] = [NSString stringWithFormat:@\"%@\", AFSHA256(certData)];\n        \n        certInfo[@\"time\"] = @(NSDate.date.timeIntervalSince1970);\n        \n        [list addObject:certInfo];\n    }\n    \n    [self saveDistrustCert:list];\n}\n\n// 获取证书的sha256\nstatic NSString *AFSHA256(NSData *data)\n{\n    if (data.length <= 0) {\n        return @\"\";\n    }\n    \n    uint8_t digest[CC_SHA256_DIGEST_LENGTH];\n    \n    CC_SHA256(data.bytes, (CC_LONG)data.length, digest);\n    \n    NSMutableString *result = [NSMutableString stringWithCapacity:CC_SHA256_DIGEST_LENGTH * 3];\n    for (int i = 0; i < CC_SHA256_DIGEST_LENGTH; i++) {\n        [result appendFormat:@\"%02x\", digest[i]];\n    }\n    \n    return [result stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]].uppercaseString;\n}\n```\n\n```objc\n// 这个list为iPhone中的系统自带的根证书的sha256\n\nstatic NSArray *systemInlayCertSha256()\n{\n    NSArray *list =\n    @[@\"D7A7A0FB5D7E2731D771E9484EBCDEF71D5F0C3E0A2948782BC83EE0EA699EF4\",\n      @\"55926084EC963A64B96E2ABE01CE0BA86A64FBFEBCC7AAB5AFC155B37FD76066\",\n      @\"8C7209279AC04E275E16D07FD3B775E80154B5968046E31F52DD25766324E9A7\",\n      @\"687FA451382278FFF0C8B11F8D43D576671C6EB2BCEAB413FB83D965D06D2FF2\",\n      @\"A31F093053BD12C1F5C3C6EFD498023FD2914D7758D05D698CE084B50626E0E5\",\n      @\"0376AB1D54C5F9803CE4B2E201A0EE7EEF7B57B636E8A93C9B8D4860C96F5FA7\",\n      @\"0A81EC5A929777F145904AF38D5D509F66B5E2C58FCDB531058B0E17F3F0B41B\",\n      @\"BD71FDF6DA97E4CF62D1647ADD2581B07D79ADF8397EB4ECBA9C5E8488821423\",\n      @\"70A73F7F376B60074248904534B11482D5BF0E698ECC498DF52577EBF2E93B9A\",\n      @\"8ECDE6884F3D87B1125BA31AC3FCB13D7016DE7F57CC904FE1CB97C6AE98196E\",\n      @\"1BA5B2AA8C65401A82960118F80BEC4F62304D83CEC4713A19C39C011EA46DB4\",\n      @\"18CE6CFE7BF14E60B2E347B8DFE868CB31D02EBB3ADA271569F50343B46DB3A4\",\n      @\"E35D28419ED02025CFA69038CD623962458DA5C695FBDEA3C22B0BFB25897092\",\n      @\"E3268F6106BA8B665A1A962DDEA1459D2A46972F1F2440329B390B895749AD45\",\n      @\"C2B9B042DD57830E7D117DAC55AC8AE19407D38E41D88F3215BC3A890444A050\",\n      @\"63343ABFB89A6A03EBB57E9B3F5FA7BE7C4F5C756F3017B3A8C488C3653E9179\",\n      @\"B0B1730ECBC7FF4505142C49F1295E6EDA6BCAED7E2C68C5BE91B5A11001F024\",\n      @\"0D83B611B648A1A75EB8558400795375CAD92E264ED8E9D7A757C1F5EE2BB22D\",\n      @\"126BF01C1094D2F0CA2E352380B3C724294546CCC65597BEF7F12D8A171F1984\",\n      @\"F356BEA244B7A91EB35D53CA9AD7864ACE018E2D35D5F8F96DDF68A6F41AA474\",\n      @\"04048028BF1F2864D48F9AD4D83294366A828856553F3B14303F90147F5D40EF\",\n      @\"0ED3FFAB6C149C8B4E71058E8668D429ABFDA681C2FFF508207641F0D751A3E5\",\n      @\"16AF57A9F676B0AB126095AA5EBADEF22AB31119D644AC95CD4B93DBF3F26AEB\",\n      @\"9F9744463BE13714754E1A3BECF98C08CC205E4AB32028F4E2830C4A1B2775B8\",\n      @\"9A114025197C5BB95D94E63D55CD43790847B646B23CDF11ADA4A00EFF15FB48\",\n      @\"EDF7EBBCA27A2A384D387B7D4010C666E2EDB4843E4C29B4AE1D5B9332E6B24D\",\n      @\"F96F23F4C3E79C077A46988D5AF5900676A0F039CB645DD17549B216C82440CE\",\n      @\"E23D4A036D7B70E9F595B1422079D2B91EDFBB1FB651A0633EAA8A9DC5F80703\",\n      @\"E3B6A2DB2ED7CE48842F7AC53241C7B71D54144BFB40C11F3F1D0B42F5EEA12D\",\n      @\"FCBFE2886206F72B27593C8B070297E12D769ED10ED7930705A8098EFFC14D17\",\n      @\"2A99F5BC1174B73CBB1D620884E01C34E51CCB3978DA125F0E33268883BF4158\",\n      @\"152A402BFCDF2CD548054D2275B39C7FCA3EC0978078B0F0EA76E561A6C7433E\",\n      @\"6CC05041E6445E74696C4CFBC9F80F543B7EABBB44B4CE6F787C6A9971C42F17\",\n      @\"EAA962C4FA4A6BAFEBE415196D351CCD888D4F53F3FA8AE6D7C466A94E6042BB\",\n      @\"D8E0FEBC1DB2E38D00940F37D27D41344D993E734B99D5656D9778D4D8143624\",\n      @\"B676F2EDDAE8775CD36CB0F63CD1D4603961F49E6265BA013A2F0307B6D0B804\",\n      @\"5C58468D55F58E497E743982D2B50010B6D165374ACF83A7D4A32DB768C4408E\",\n      @\"5CC3D78E4E1D5E45547A04E6873E64F90CF9536D1CCC2EF800F355C4C5FD70FD\",\n      @\"063E4AFAC491DFD332F3089B8542E94617D893D7FE944E10A7937EE29D9693C0\",\n      @\"0C258A12A5674AEF25F28BA7DCFAECEEA348E541E6F5CC4EE63B71B361606AC3\",\n      @\"8327BC8C9D69947B3DE3C27511537267F59C21B9FA7B613FAFBCCD53B7024000\",\n      @\"0F993C8AEF97BAAF5687140ED59AD1821BB4AFACF0AA9A58B5D57A338A3AFBCB\",\n      @\"0C2CD63DF7806FA399EDE809116B575BF87989F06518F9808C860503178BAF66\",\n      @\"1793927A0614549789ADCE2F8F34F7F0B66D0F3AE3A3B84D21EC15DBBA4FADC7\",\n      @\"52F0E1C4E58EC629291B60317F074671B85D7EA80D5B07273463534B32B40234\",\n      @\"AE4457B40D9EDA96677B0D3C92D57B5177ABD7AC1037958356D1E094518BE5F2\",\n      @\"2605875AFCC176B2D66DD66A995D7F8D5EBB86CE120D0E7E9E7C6EF294A27D4C\",\n      @\"507941C74460A0B47086220D4E9932572AB5D1B5BBCB8980AB1CB17651A844D2\",\n      @\"A1A86D04121EB87F027C66F53303C28E5739F943FC84B38AD6AF009035DD9457\",\n      @\"49E7A442ACF0EA6287050054B52564B650E4F49E42E348D6AA38E039E957B1C1\",\n      @\"EEC5496B988CE98625B934092EEC2908BED0B0F316C2D4730C84EAF1F3D34881\",\n      @\"B6191A50D0C3977F7DA99BCDAAC86A227DAEB9679EC70BA3B0C9D92271C170D3\",\n      @\"3E9099B5015E8F486C00BCEA9D111EE721FABA355A89BCF1DF69561E3DC6325C\",\n      @\"7D05EBB682339F8C9451EE094EEBFEFA7953A114EDB2F44949452FAB7D2FC185\",\n      @\"7E37CB8B4C47090CAB36551BA6F45DB840680FBA166A952DB100717F43053FC2\",\n      @\"4348A0E9444C78CB265E058D5E8944B4D84F9662BD26DB257F8934A443C70161\",\n      @\"CB3CCBB76031E5E0138F8DD39A23F9DE47FFC35E43C1144CEA27D46A5AB1CB5F\",\n      @\"31AD6648F8104138C738F39EA4320133393E3A18CC02296EF97C2AC9EF6731D0\",\n      @\"7431E5F4C3C1CE4690774F0B61E05440883BA9A01ED00BA6ABD7806ED3B118CF\",\n      @\"552F7BDCF1A7AF9E6CE672017F4F12ABF77240C78E761AC203D1D9D20AC89988\",\n      @\"0687260331A72403D909F105E69BCF0D32E1BD2493FFC6D9206D11BCD6770739\",\n      @\"9A73929A500F1A0BF49DCB046E8039169696557345E9F813F10FF9380DB22695\",\n      @\"B0BFD52BB0D7D9BD92BF5D4DC13DA255C02C542F378365EA893911F55E55F23C\",\n      @\"6639D13CAB85DF1AD9A23C443B3A60901E2B138D456FA71183578108884EC6BF\",\n      @\"3E84BA4342908516E77573C0992F0979CA084E4685681FF195CCBA8A229B8A76\",\n      @\"02ED0EB28C14DA45165C566791700D6451D7FB56F0B2AB1D3B8EB070E56EDFF5\",\n      @\"43DF5774B03E7FEF5FE40D931A7BEDF1BB2E6B42738C4E6D3841103D3AA7F339\",\n      @\"73C176434F1BC6D5ADF45B0E76E727287C8DE57616C1E6E6141A2B2CBC7D8E4C\",\n      @\"D1C339EA2784EB870F934FC5634E4AA9AD5505016401F26465D37A574663359F\",\n      @\"6DC47172E01CBCB0BF62580D895FE2B8AC9AD4F873801E0C10B9C837D21EB177\",\n      @\"C0A6F4DC63A24BFDCF54EF2A6A082A0A72DE35803E2FF5FF527AE5D87206DFD5\",\n      @\"894EBC0B23DA2A50C0186B7F8F25EF1F6B2935AF32A94584EF80AAF877A3A06E\",\n      @\"FF856A2D251DCD88D36656F450126798CFABAADE40799C722DE4D2B5DB36A73A\",\n      @\"5EDB7AC43B82A06A8761E8D7BE4979EBF2611F7DD79BF91C1C6B566A219ED766\",\n      @\"B478B812250DF878635C2AA7EC7D155EAA625EE82916E2CD294361886CD1FBD4\",\n      @\"37D51006C512EAAB626421F1EC8C92013FC5F82AE98EE533EB4619B8DEB4D06C\",\n      @\"136335439334A7698016A0D324DE72284E079D7B5220BB8FBD747816EEBEBACA\",\n      @\"EF3CB417FC8EBF6F97876C9E4ECE39DE1EA5FE649141D1028B7D11C0B2298CED\",\n      @\"EBD41040E4BB3EC742C9E381D31EF2A41A48B6685C96E7CEF3C1DF6CD4331C99\",\n      @\"BEC94911C2955676DB6C0A550986D76E3BA005667C442C9762B4FBB773DE228C\",\n      @\"179FBC148A3DD00FD24EA13458CC43BFA7F59C8182D783A513F6EBEC100C8924\",\n      @\"CA42DD41745FD0B81EB902362CF9D8BF719DA1BD1B1EFC946F5B4C99F42C1B9E\",\n      @\"CBB522D7B7F127AD6A0113865BDF1CD4102E7D0759AF635A7CF4720DC963C53B\",\n      @\"C3846BF24B9E93CA64274C0EC67C1ECC5E024FFCACD2D74019350E81FE546AE4\",\n      @\"45140B3247EB9CC8C5B4F0D7B53091F73292089E6E5A63E2749DD3ACA9198EDA\",\n      @\"70B922BFDA0E3F4A342E4EE22D579AE598D071CC5EC9C30F123680340388AEA5\",\n      @\"BC104F15A48BE709DCA542A7E1D4B9DF6F054527E802EAA92D595444258AFE71\",\n      @\"F9E67D336C51002AC054C632022D66DDA2E7E3FFF10AD061ED31D8BBB410CFB2\",\n      @\"C0C05A8D8DA55EAF27AA9B910B0A6EF0D8BBDED346928DB872E182C2073E9802\",\n      @\"5D56499BE4D2E08BCFCAD08A3E38723D50503BDE706948E42F55603019E528AE\",\n      @\"30D0895A9A448A262091635522D1F52010B5867ACAE12C78EF958FD4F4389F2F\",\n      @\"96BCEC06264976F37460779ACF28C5A7CFE8A3C0AAE11A8FFCEE05C0BDDF08C6\",\n      @\"23804203CA45D8CDE716B8C13BF3B448457FA06CC10250997FA01458317C41E5\",\n      @\"2530CC8E98321502BAD96F9B1FBA1B099E2D299E0F4548BB914F363BC0D4531F\",\n      @\"6FDB3F76C8B801A75338D8A50A7C02879F6198B57E594D318D3832900FEDCD79\",\n      @\"3C5F81FEA5FAB82C64BFA2EAECAFCDE8E077FC8620A7CAE537163DF36EDBF378\",\n      @\"6C61DAC3A2DEF031506BE036D2A6FE401994FBD13DF9C8D466599274C446EC98\",\n      @\"15F0BA00A3AC7AF3AC884C072B1011A077BD77C097F40164B2F8598ABD83860C\",\n      @\"41C923866AB4CAD6B7AD578081582E020797A6CBDF4FFF78CE8396B38937D7F5\",\n      @\"6B9C08E86EB0F767CFAD65CD98B62149E5494A67F5845E7BD1ED019F27B86BD6\",\n      @\"56C77128D98C18D91B4CFDFFBC25EE9103D4758EA2ABAD826A90F3457D460EB4\",\n      @\"27995829FE6A7515C1BFE848F9C4761DB16C225929257BF40D0894F29EA8BAF2\",\n      @\"B7C36231706E81078C367CB896198F1E3208DD926949DD8F5709A410F75B6292\",\n      @\"8A866FD1B276B57E578E921C65828A2BED58E9F2F288054134B7F1F4BFC9CC74\",\n      @\"8FE4FB0AF93A4D0D67DB0BEBB23E37C71BF325DCBCDD240EA04DAF58B47E1840\",\n      @\"85A0DD7DD720ADB7FF05F83D542B209DC7FF4528F7D677B18389FEA5E5C49E86\",\n      @\"88EF81DE202EB018452E43F864725CEA5FBD1FC2D9D205730709C5D8B8690F46\",\n      @\"18F1FC7F205DF8ADDDEB7FE007DD57E3AF375A9C4D8D73546BF4F1FED1E18D35\",\n      @\"A45EDE3BBBF09C8AE15C72EFC07268D693A21C996FD51E67CA079460FD6D8873\",\n      @\"4200F5043AC8590EBB527D209ED1503029FBCBD41CA1B506EC27F15ADE7DAC69\",\n      @\"F1C1B50AE5A20DD8030EC9F6BC24823DD367B5255759B4E71B61FCE9F7375D73\",\n      @\"A22DBA681E97376E2D397D728AAE3A9B6296B9FDBA60BC2E11F647F2C675FB37\",\n      @\"E75E72ED9F560EEC6EB4800073A43FC3AD19195A392282017895974A99026B6C\",\n      @\"513B2CECB810D4CDE5DD85391ADFC6C2DD60D87BB736D2B521484AA47A0EBEF6\",\n      @\"7908B40314C138100B518D0735807FFBFCF8518A0095337105BA386B153DD927\",\n      @\"4D2491414CFE956746EC4CEFA6CF6F72E28A1329432F9D8A907AC4CB5DADC15A\",\n      @\"668C83947DA63B724BECE1743C31A0E6AED0DB8EC5B31BE377BB784F91B6716F\",\n      @\"3C4FB0B95AB8B30032F432B86F535FE172C185D0FD39865837CF36187FA6F428\",\n      @\"1465FA205397B876FAA6F0A9958E5590E40FCC7FAA4FB7C2C8677521FB5FB658\",\n      @\"2CE1CB0BF9D2F9E102993FBE215152C3B2DD0CABDE1C68E5319B839154DBB7F5\",\n      @\"568D6905A2C88708A4B3025190EDCFEDB1974A606A13C6E5290FCB2AE63EDAB5\",\n      @\"C7BA6567DE93A798AE1FAA791E712D378FAE1F93C4397FEA441BB7CBE6FD5995\",\n      @\"C766A9BEF2D4071C863A31AA4920E813B2D198608CB7B7CFE21143B836DF09EA\",\n      @\"E17890EE09A3FBF4F48B9C414A17D637B7A50647E9BC752322727FCC1742A911\",\n      @\"21DB20123660BB2ED418205DA11EE7A85A65E2BC6E55B5AF7E7899C8A266D92E\",\n      @\"F09B122C7114F4A09BD4EA4F4A99D558B46E4C25CD81140D29C05613914C3841\",\n      @\"D95FEA3CA4EEDCE74CD76E75FC6D1FF62C441F0FA8BC77F034B19E5DB258015D\",\n      @\"62DD0BE9B9F50A163EA0F8E75C053B1ECA57EA55C8688F647C6881F2C8357B95\",\n      @\"7AF6EA9F753A1E709BD64D0BEB867C11E8C295A56E24A6E0471459DCCDAA1558\",\n      @\"3B222E566711E992300DC0B15AB9473DAFDEF8C84D0CEF7D3317B4C1821D1436\",\n      @\"59B3829F1FF443344958FAE8BFF621B684C848CFBF7EAD6B63A6CA50F2794F89\",\n      @\"BE6C4DA2BBB9BA59B6F3939768374246C3C005993FA98F020D1DEDBED48A81D5\",\n      @\"1E49AC5DC69E86D0565DA2C1305C419330B0B781BFEC50E54A1B35AF7FDDD501\",\n      @\"363F3C849EAB03B0A2A0F636D7B86D04D3AC7FCFE26A0A9121AB9795F6E176DF\",\n      @\"9D190B2E314566685BE8A889E27AA8C7D7AE1D8AADDBA3C1ECF9D24863CD34B9\",\n      @\"FE863D0822FE7A2353FA484D5924E875656D3DC9FB58771F6F616F9D571BC592\",\n      @\"CB627D18B58AD56DDE331A30456BC65C601A4E9B18DEDCEA08E7DAAA07815FF0\",\n      @\"53DFDFA4E297FCFE07594E8C62D5B8AB06B32C7549F38A163094FD6429D5DA43\",\n      @\"B32396746453442F353E616292BB20BBAA5D23B546450FDB9C54B8386167D529\",\n      @\"FABCF5197CDD7F458AC33832D3284021DB2425FD6BEA7A2E69B7486E8F51F9CC\",\n      @\"91E2F5788D5810EBA7BA58737DE1548A8ECACD014598BC0B143E041B17052552\",\n      @\"FD73DAD31C644FF1B43BEF0CCDDA96710B9CD9875ECA7E31707AF3E96D522BBD\",\n      @\"DD6936FE21F8F077C123A1A521C12224F72255B73E03A7260693E8A24B0FA389\",\n      @\"A4310D50AF18A6447190372A86AFAF8B951FFB431D837F1E5688B45971ED1557\",\n      @\"4B03F45807AD70F21BFC2CAE71C9FDE4604C064CF5FFB686BAE5DBAAD7FDD34C\",\n      @\"8D722F81A9C113C0791DF136A2966DB26C950A971DB46B4199F4EA54B78BFB9F\",\n      @\"92D8092EE77BC9208F0897DC05271894E63EF27933AE537FB983EEF0EAE3EEC8\",\n      @\"C1B48299ABA5208FE9630ACE55CA68A03EDA5A519C8802A0D3A673BE8F8E557D\",\n      @\"59769007F7685D0FCD50872F9F95D5755A5B2B457D81F3692B610A98672F0E1B\",\n      @\"BFD88FE1101C41AE3E801BF8BE56350EE9BAD1A6B9BD515EDC5C6D5B8711AC44\",\n      @\"A1F05CCB80C2D710EC7D479ABDCBB879E58D7EDB7149FE78A87884E3D0BAD0F9\",\n      @\"93E65EC762F055DC718A332582C41A04430D72E3CB87E8B897B67516F0D1AA39\",\n      @\"4FF460D54B9C86DABFBCFC5712E0400D2BED3FBC4D4FBDAA86E06ADCD2A9AD7A\",\n      @\"E793C9B02FD8AA13E21C31228ACCB08119643B749C898964B1746D46C3D4CBD2\",\n      @\"85FB2F91DD12275A0145B636534F84024AD68B69B8EE88684FF711375805B348\",\n      @\"43F257412D440D627476974F877DA8F1FC2444565A367AE60EDDC27A412531AE\",\n      @\"6EA54741D004667EED1B4816634AA3A79E6E4B96950F8279DAFC8D9BD8812137\",\n      @\"6FFF78E400A70C11011CD85977C459FB5AF96A3DF0540820D0F4B8607875E58F\",\n      @\"CBB5AF185E942A2402F9EACBC0ED5BB876EEA3C1223623D00447E4F3BA554B65\",\n      @\"92A9D9833FE1944DB366E8BFAE7A95B6480C2D6C6C2A1BE65D4236B608FCA1BB\",\n      @\"EB04CF5EB1F39AFA762F2BB120F296CBA520C1B97DB1589565B81CB9A17B7244\",\n      @\"69DDD7EA90BB57C93E135DC85EA6FCD5480B603239BDC454FC758B2A26CF7F79\",\n      @\"9ACFAB7E43C8D880D06B262A94DEEEE4B4659989C3D0CAF19BAF6405E41AB7DF\",\n      @\"2399561127A57125DE8CEFEA610DDF2FA078B5C8067F4E828290BFB860E84B3C\",\n      @\"69FAC9BD55FB0AC78D53BBEE5CF1D597989FD0AAAB20A25151BDF1733EE7D122\",\n      @\"C57A3ACBE8C06BA1988A83485BF326F2448775379849DE01CA43571AF357E74B\",\n      @\"F008733EC500DC498763CC9264C6FCEA40EC22000E927D053CE9C90BFA046CB2\",\n      @\"CECDDC905099D8DADFC5B1D209B737CBE2C18CFB2C10C0FF0BCF0D3286FC1AA2\"];\n    \n    return list;\n}\n```","slug":"digital-signature","published":1,"updated":"2020-06-23T07:58:55.955Z","layout":"post","photos":[],"link":"","_id":"ckbrn0y4f00096u3j18cz6iya","content":"<p>简单介绍下数字签名、数字证书</p>\n<a id=\"more\"></a>\n\n<h3 id=\"前沿\"><a href=\"#前沿\" class=\"headerlink\" title=\"前沿\"></a>前沿</h3><p>开发过程中需要对app发起的API请求进行验签，防篡改处理</p>\n<h3 id=\"数字证书\"><a href=\"#数字证书\" class=\"headerlink\" title=\"数字证书\"></a>数字证书</h3><p>每个操作系统中会自带很多根证书(根证书即称为CA颁发机构)，这些默认是<code>隐士信任</code>的</p>\n<p>如下图为Mac自带的系统根证书<br><img src=\"/images/digital_1.png\" alt=\"\"></p>\n<p><a href=\"https://support.apple.com/zh-cn/HT204132\" target=\"_blank\" rel=\"noopener\">https://support.apple.com/zh-cn/HT204132</a> 这个链接是iPhone手机中内置的根证书</p>\n<p>也有的根证书，是 加到 操作系统里，让用户点击确认后，信任的( <code>显示信任</code> )，比如 抓包Charles的证书</p>\n<p>抓包，就是 抓包工具 伪装成 服务器，APP连接此服务器进行通讯，然后 此服务器再伪装成客户端，和 真实的服务器进行通讯，它就成了 中间人了，所有的数据 它都能拿到，并且可以进行篡改</p>\n<p>证书组成信息，包括主题名称、国家/地区、所在地、组织、组织单位、有效期、公共密钥信息、签发者信息</p>\n<p><img src=\"/images/digital_2.png\" alt=\"\"><br><img src=\"/images/digital_3.png\" alt=\"\"></p>\n<h3 id=\"证书链\"><a href=\"#证书链\" class=\"headerlink\" title=\"证书链\"></a>证书链</h3><p>证书链：从根证书一级一级向下颁发证书，进行签名</p>\n<p><img src=\"/images/digital_4.png\" alt=\"\"></p>\n<h2 id=\"验签\"><a href=\"#验签\" class=\"headerlink\" title=\"验签\"></a>验签</h2><p>验签目的是防止 <code>中间人攻击</code><br>所以要做 证书 检验，即 证书锁定 SSL Pinning</p>\n<ul>\n<li><p>一般有3个方向,从宽到严依次为</p>\n<ol>\n<li><p>叶节点证书 校验，在证书链上 校验 叶节点是否是 使用的证书，可以从证书的信息校验，比如 证书常用名称，证书序列号，证书指纹(证书的sha-256算法加密签名、 证书的sha-1算法加密签名)，AFNet里面提供了 证书public key信息校验，证书data信息校验 , 但如果服务器换证书了，这个就悲剧了</p>\n</li>\n<li><p>根节点证书 校验，在证书链上 校验 根节点 使用的证书 ，比如 根证书 publicKey是否和 预埋的一致，根证书的sha-256签名和预埋的是否一致，但这种情况下，如果服务器换了别家的 CA颁发机构 ，就悲剧了</p>\n</li>\n<li><p>验证 根证书 是否是 系统自带的内置的证书，校验方式，就是验证证书的信息，比如 证书常用名称，证书序列号，证书指纹(证书的sha-256算法加密签名、 证书的sha-1算法加密签名)，也就是 验证当前网络服务器的根证书的 sha-256算法签名 是否在 <a href=\"https://support.apple.com/zh-cn/HT204132\" target=\"_blank\" rel=\"noopener\">https://support.apple.com/zh-cn/HT204132</a> 这个列表里</p>\n</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取证书链</span></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)logDistrustCert:(SecTrustRef)serverTrust</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">NSMutableArray</span> *list = [[<span class=\"built_in\">NSMutableArray</span> alloc] init];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">CFIndex</span> certificateCount = SecTrustGetCertificateCount(serverTrust);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"built_in\">CFIndex</span> i = <span class=\"number\">0</span>; i &lt; certificateCount; i++) &#123;</span><br><span class=\"line\">        SecCertificateRef certificate = SecTrustGetCertificateAtIndex(serverTrust, i);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"built_in\">NSMutableDictionary</span> *certInfo = [[<span class=\"built_in\">NSMutableDictionary</span> alloc] init];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"built_in\">CFStringRef</span> subjectSummary = SecCertificateCopySubjectSummary(certificate);</span><br><span class=\"line\">        certInfo[<span class=\"string\">@\"subject_summary\"</span>] = [<span class=\"built_in\">NSString</span> stringWithFormat:<span class=\"string\">@\"%@\"</span>, subjectSummary];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (@available(iOS <span class=\"number\">11.0</span>, *)) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">NSData</span> *serialNum = (__bridge_transfer <span class=\"built_in\">NSData</span> *)SecCertificateCopySerialNumberData(certificate, <span class=\"literal\">nil</span>);</span><br><span class=\"line\">            certInfo[<span class=\"string\">@\"serial_number\"</span>] = [<span class=\"built_in\">NSString</span> stringWithFormat:<span class=\"string\">@\"%@\"</span>, serialNum];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"built_in\">NSData</span> *certData = (__bridge_transfer <span class=\"built_in\">NSData</span> *)SecCertificateCopyData(certificate);</span><br><span class=\"line\">        certInfo[<span class=\"string\">@\"sha256\"</span>] = [<span class=\"built_in\">NSString</span> stringWithFormat:<span class=\"string\">@\"%@\"</span>, AFSHA256(certData)];</span><br><span class=\"line\">        </span><br><span class=\"line\">        certInfo[<span class=\"string\">@\"time\"</span>] = @(<span class=\"built_in\">NSDate</span>.date.timeIntervalSince1970);</span><br><span class=\"line\">        </span><br><span class=\"line\">        [list addObject:certInfo];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    [<span class=\"keyword\">self</span> saveDistrustCert:list];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取证书的sha256</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"built_in\">NSString</span> *AFSHA256(<span class=\"built_in\">NSData</span> *data)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (data.length &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">@\"\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    uint8_t digest[CC_SHA256_DIGEST_LENGTH];</span><br><span class=\"line\">    </span><br><span class=\"line\">    CC_SHA256(data.bytes, (CC_LONG)data.length, digest);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSMutableString</span> *result = [<span class=\"built_in\">NSMutableString</span> stringWithCapacity:CC_SHA256_DIGEST_LENGTH * <span class=\"number\">3</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; CC_SHA256_DIGEST_LENGTH; i++) &#123;</span><br><span class=\"line\">        [result appendFormat:<span class=\"string\">@\"%02x\"</span>, digest[i]];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> [result stringByTrimmingCharactersInSet:[<span class=\"built_in\">NSCharacterSet</span> whitespaceCharacterSet]].uppercaseString;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这个list为iPhone中的系统自带的根证书的sha256</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"built_in\">NSArray</span> *systemInlayCertSha256()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">NSArray</span> *list =</span><br><span class=\"line\">    @[<span class=\"string\">@\"D7A7A0FB5D7E2731D771E9484EBCDEF71D5F0C3E0A2948782BC83EE0EA699EF4\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"55926084EC963A64B96E2ABE01CE0BA86A64FBFEBCC7AAB5AFC155B37FD76066\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"8C7209279AC04E275E16D07FD3B775E80154B5968046E31F52DD25766324E9A7\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"687FA451382278FFF0C8B11F8D43D576671C6EB2BCEAB413FB83D965D06D2FF2\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"A31F093053BD12C1F5C3C6EFD498023FD2914D7758D05D698CE084B50626E0E5\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"0376AB1D54C5F9803CE4B2E201A0EE7EEF7B57B636E8A93C9B8D4860C96F5FA7\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"0A81EC5A929777F145904AF38D5D509F66B5E2C58FCDB531058B0E17F3F0B41B\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"BD71FDF6DA97E4CF62D1647ADD2581B07D79ADF8397EB4ECBA9C5E8488821423\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"70A73F7F376B60074248904534B11482D5BF0E698ECC498DF52577EBF2E93B9A\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"8ECDE6884F3D87B1125BA31AC3FCB13D7016DE7F57CC904FE1CB97C6AE98196E\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"1BA5B2AA8C65401A82960118F80BEC4F62304D83CEC4713A19C39C011EA46DB4\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"18CE6CFE7BF14E60B2E347B8DFE868CB31D02EBB3ADA271569F50343B46DB3A4\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"E35D28419ED02025CFA69038CD623962458DA5C695FBDEA3C22B0BFB25897092\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"E3268F6106BA8B665A1A962DDEA1459D2A46972F1F2440329B390B895749AD45\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"C2B9B042DD57830E7D117DAC55AC8AE19407D38E41D88F3215BC3A890444A050\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"63343ABFB89A6A03EBB57E9B3F5FA7BE7C4F5C756F3017B3A8C488C3653E9179\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"B0B1730ECBC7FF4505142C49F1295E6EDA6BCAED7E2C68C5BE91B5A11001F024\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"0D83B611B648A1A75EB8558400795375CAD92E264ED8E9D7A757C1F5EE2BB22D\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"126BF01C1094D2F0CA2E352380B3C724294546CCC65597BEF7F12D8A171F1984\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"F356BEA244B7A91EB35D53CA9AD7864ACE018E2D35D5F8F96DDF68A6F41AA474\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"04048028BF1F2864D48F9AD4D83294366A828856553F3B14303F90147F5D40EF\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"0ED3FFAB6C149C8B4E71058E8668D429ABFDA681C2FFF508207641F0D751A3E5\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"16AF57A9F676B0AB126095AA5EBADEF22AB31119D644AC95CD4B93DBF3F26AEB\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"9F9744463BE13714754E1A3BECF98C08CC205E4AB32028F4E2830C4A1B2775B8\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"9A114025197C5BB95D94E63D55CD43790847B646B23CDF11ADA4A00EFF15FB48\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"EDF7EBBCA27A2A384D387B7D4010C666E2EDB4843E4C29B4AE1D5B9332E6B24D\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"F96F23F4C3E79C077A46988D5AF5900676A0F039CB645DD17549B216C82440CE\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"E23D4A036D7B70E9F595B1422079D2B91EDFBB1FB651A0633EAA8A9DC5F80703\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"E3B6A2DB2ED7CE48842F7AC53241C7B71D54144BFB40C11F3F1D0B42F5EEA12D\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"FCBFE2886206F72B27593C8B070297E12D769ED10ED7930705A8098EFFC14D17\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"2A99F5BC1174B73CBB1D620884E01C34E51CCB3978DA125F0E33268883BF4158\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"152A402BFCDF2CD548054D2275B39C7FCA3EC0978078B0F0EA76E561A6C7433E\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"6CC05041E6445E74696C4CFBC9F80F543B7EABBB44B4CE6F787C6A9971C42F17\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"EAA962C4FA4A6BAFEBE415196D351CCD888D4F53F3FA8AE6D7C466A94E6042BB\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"D8E0FEBC1DB2E38D00940F37D27D41344D993E734B99D5656D9778D4D8143624\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"B676F2EDDAE8775CD36CB0F63CD1D4603961F49E6265BA013A2F0307B6D0B804\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"5C58468D55F58E497E743982D2B50010B6D165374ACF83A7D4A32DB768C4408E\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"5CC3D78E4E1D5E45547A04E6873E64F90CF9536D1CCC2EF800F355C4C5FD70FD\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"063E4AFAC491DFD332F3089B8542E94617D893D7FE944E10A7937EE29D9693C0\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"0C258A12A5674AEF25F28BA7DCFAECEEA348E541E6F5CC4EE63B71B361606AC3\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"8327BC8C9D69947B3DE3C27511537267F59C21B9FA7B613FAFBCCD53B7024000\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"0F993C8AEF97BAAF5687140ED59AD1821BB4AFACF0AA9A58B5D57A338A3AFBCB\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"0C2CD63DF7806FA399EDE809116B575BF87989F06518F9808C860503178BAF66\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"1793927A0614549789ADCE2F8F34F7F0B66D0F3AE3A3B84D21EC15DBBA4FADC7\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"52F0E1C4E58EC629291B60317F074671B85D7EA80D5B07273463534B32B40234\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"AE4457B40D9EDA96677B0D3C92D57B5177ABD7AC1037958356D1E094518BE5F2\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"2605875AFCC176B2D66DD66A995D7F8D5EBB86CE120D0E7E9E7C6EF294A27D4C\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"507941C74460A0B47086220D4E9932572AB5D1B5BBCB8980AB1CB17651A844D2\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"A1A86D04121EB87F027C66F53303C28E5739F943FC84B38AD6AF009035DD9457\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"49E7A442ACF0EA6287050054B52564B650E4F49E42E348D6AA38E039E957B1C1\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"EEC5496B988CE98625B934092EEC2908BED0B0F316C2D4730C84EAF1F3D34881\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"B6191A50D0C3977F7DA99BCDAAC86A227DAEB9679EC70BA3B0C9D92271C170D3\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"3E9099B5015E8F486C00BCEA9D111EE721FABA355A89BCF1DF69561E3DC6325C\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"7D05EBB682339F8C9451EE094EEBFEFA7953A114EDB2F44949452FAB7D2FC185\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"7E37CB8B4C47090CAB36551BA6F45DB840680FBA166A952DB100717F43053FC2\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"4348A0E9444C78CB265E058D5E8944B4D84F9662BD26DB257F8934A443C70161\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"CB3CCBB76031E5E0138F8DD39A23F9DE47FFC35E43C1144CEA27D46A5AB1CB5F\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"31AD6648F8104138C738F39EA4320133393E3A18CC02296EF97C2AC9EF6731D0\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"7431E5F4C3C1CE4690774F0B61E05440883BA9A01ED00BA6ABD7806ED3B118CF\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"552F7BDCF1A7AF9E6CE672017F4F12ABF77240C78E761AC203D1D9D20AC89988\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"0687260331A72403D909F105E69BCF0D32E1BD2493FFC6D9206D11BCD6770739\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"9A73929A500F1A0BF49DCB046E8039169696557345E9F813F10FF9380DB22695\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"B0BFD52BB0D7D9BD92BF5D4DC13DA255C02C542F378365EA893911F55E55F23C\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"6639D13CAB85DF1AD9A23C443B3A60901E2B138D456FA71183578108884EC6BF\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"3E84BA4342908516E77573C0992F0979CA084E4685681FF195CCBA8A229B8A76\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"02ED0EB28C14DA45165C566791700D6451D7FB56F0B2AB1D3B8EB070E56EDFF5\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"43DF5774B03E7FEF5FE40D931A7BEDF1BB2E6B42738C4E6D3841103D3AA7F339\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"73C176434F1BC6D5ADF45B0E76E727287C8DE57616C1E6E6141A2B2CBC7D8E4C\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"D1C339EA2784EB870F934FC5634E4AA9AD5505016401F26465D37A574663359F\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"6DC47172E01CBCB0BF62580D895FE2B8AC9AD4F873801E0C10B9C837D21EB177\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"C0A6F4DC63A24BFDCF54EF2A6A082A0A72DE35803E2FF5FF527AE5D87206DFD5\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"894EBC0B23DA2A50C0186B7F8F25EF1F6B2935AF32A94584EF80AAF877A3A06E\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"FF856A2D251DCD88D36656F450126798CFABAADE40799C722DE4D2B5DB36A73A\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"5EDB7AC43B82A06A8761E8D7BE4979EBF2611F7DD79BF91C1C6B566A219ED766\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"B478B812250DF878635C2AA7EC7D155EAA625EE82916E2CD294361886CD1FBD4\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"37D51006C512EAAB626421F1EC8C92013FC5F82AE98EE533EB4619B8DEB4D06C\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"136335439334A7698016A0D324DE72284E079D7B5220BB8FBD747816EEBEBACA\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"EF3CB417FC8EBF6F97876C9E4ECE39DE1EA5FE649141D1028B7D11C0B2298CED\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"EBD41040E4BB3EC742C9E381D31EF2A41A48B6685C96E7CEF3C1DF6CD4331C99\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"BEC94911C2955676DB6C0A550986D76E3BA005667C442C9762B4FBB773DE228C\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"179FBC148A3DD00FD24EA13458CC43BFA7F59C8182D783A513F6EBEC100C8924\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"CA42DD41745FD0B81EB902362CF9D8BF719DA1BD1B1EFC946F5B4C99F42C1B9E\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"CBB522D7B7F127AD6A0113865BDF1CD4102E7D0759AF635A7CF4720DC963C53B\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"C3846BF24B9E93CA64274C0EC67C1ECC5E024FFCACD2D74019350E81FE546AE4\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"45140B3247EB9CC8C5B4F0D7B53091F73292089E6E5A63E2749DD3ACA9198EDA\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"70B922BFDA0E3F4A342E4EE22D579AE598D071CC5EC9C30F123680340388AEA5\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"BC104F15A48BE709DCA542A7E1D4B9DF6F054527E802EAA92D595444258AFE71\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"F9E67D336C51002AC054C632022D66DDA2E7E3FFF10AD061ED31D8BBB410CFB2\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"C0C05A8D8DA55EAF27AA9B910B0A6EF0D8BBDED346928DB872E182C2073E9802\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"5D56499BE4D2E08BCFCAD08A3E38723D50503BDE706948E42F55603019E528AE\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"30D0895A9A448A262091635522D1F52010B5867ACAE12C78EF958FD4F4389F2F\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"96BCEC06264976F37460779ACF28C5A7CFE8A3C0AAE11A8FFCEE05C0BDDF08C6\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"23804203CA45D8CDE716B8C13BF3B448457FA06CC10250997FA01458317C41E5\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"2530CC8E98321502BAD96F9B1FBA1B099E2D299E0F4548BB914F363BC0D4531F\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"6FDB3F76C8B801A75338D8A50A7C02879F6198B57E594D318D3832900FEDCD79\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"3C5F81FEA5FAB82C64BFA2EAECAFCDE8E077FC8620A7CAE537163DF36EDBF378\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"6C61DAC3A2DEF031506BE036D2A6FE401994FBD13DF9C8D466599274C446EC98\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"15F0BA00A3AC7AF3AC884C072B1011A077BD77C097F40164B2F8598ABD83860C\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"41C923866AB4CAD6B7AD578081582E020797A6CBDF4FFF78CE8396B38937D7F5\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"6B9C08E86EB0F767CFAD65CD98B62149E5494A67F5845E7BD1ED019F27B86BD6\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"56C77128D98C18D91B4CFDFFBC25EE9103D4758EA2ABAD826A90F3457D460EB4\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"27995829FE6A7515C1BFE848F9C4761DB16C225929257BF40D0894F29EA8BAF2\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"B7C36231706E81078C367CB896198F1E3208DD926949DD8F5709A410F75B6292\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"8A866FD1B276B57E578E921C65828A2BED58E9F2F288054134B7F1F4BFC9CC74\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"8FE4FB0AF93A4D0D67DB0BEBB23E37C71BF325DCBCDD240EA04DAF58B47E1840\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"85A0DD7DD720ADB7FF05F83D542B209DC7FF4528F7D677B18389FEA5E5C49E86\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"88EF81DE202EB018452E43F864725CEA5FBD1FC2D9D205730709C5D8B8690F46\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"18F1FC7F205DF8ADDDEB7FE007DD57E3AF375A9C4D8D73546BF4F1FED1E18D35\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"A45EDE3BBBF09C8AE15C72EFC07268D693A21C996FD51E67CA079460FD6D8873\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"4200F5043AC8590EBB527D209ED1503029FBCBD41CA1B506EC27F15ADE7DAC69\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"F1C1B50AE5A20DD8030EC9F6BC24823DD367B5255759B4E71B61FCE9F7375D73\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"A22DBA681E97376E2D397D728AAE3A9B6296B9FDBA60BC2E11F647F2C675FB37\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"E75E72ED9F560EEC6EB4800073A43FC3AD19195A392282017895974A99026B6C\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"513B2CECB810D4CDE5DD85391ADFC6C2DD60D87BB736D2B521484AA47A0EBEF6\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"7908B40314C138100B518D0735807FFBFCF8518A0095337105BA386B153DD927\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"4D2491414CFE956746EC4CEFA6CF6F72E28A1329432F9D8A907AC4CB5DADC15A\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"668C83947DA63B724BECE1743C31A0E6AED0DB8EC5B31BE377BB784F91B6716F\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"3C4FB0B95AB8B30032F432B86F535FE172C185D0FD39865837CF36187FA6F428\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"1465FA205397B876FAA6F0A9958E5590E40FCC7FAA4FB7C2C8677521FB5FB658\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"2CE1CB0BF9D2F9E102993FBE215152C3B2DD0CABDE1C68E5319B839154DBB7F5\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"568D6905A2C88708A4B3025190EDCFEDB1974A606A13C6E5290FCB2AE63EDAB5\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"C7BA6567DE93A798AE1FAA791E712D378FAE1F93C4397FEA441BB7CBE6FD5995\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"C766A9BEF2D4071C863A31AA4920E813B2D198608CB7B7CFE21143B836DF09EA\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"E17890EE09A3FBF4F48B9C414A17D637B7A50647E9BC752322727FCC1742A911\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"21DB20123660BB2ED418205DA11EE7A85A65E2BC6E55B5AF7E7899C8A266D92E\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"F09B122C7114F4A09BD4EA4F4A99D558B46E4C25CD81140D29C05613914C3841\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"D95FEA3CA4EEDCE74CD76E75FC6D1FF62C441F0FA8BC77F034B19E5DB258015D\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"62DD0BE9B9F50A163EA0F8E75C053B1ECA57EA55C8688F647C6881F2C8357B95\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"7AF6EA9F753A1E709BD64D0BEB867C11E8C295A56E24A6E0471459DCCDAA1558\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"3B222E566711E992300DC0B15AB9473DAFDEF8C84D0CEF7D3317B4C1821D1436\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"59B3829F1FF443344958FAE8BFF621B684C848CFBF7EAD6B63A6CA50F2794F89\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"BE6C4DA2BBB9BA59B6F3939768374246C3C005993FA98F020D1DEDBED48A81D5\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"1E49AC5DC69E86D0565DA2C1305C419330B0B781BFEC50E54A1B35AF7FDDD501\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"363F3C849EAB03B0A2A0F636D7B86D04D3AC7FCFE26A0A9121AB9795F6E176DF\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"9D190B2E314566685BE8A889E27AA8C7D7AE1D8AADDBA3C1ECF9D24863CD34B9\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"FE863D0822FE7A2353FA484D5924E875656D3DC9FB58771F6F616F9D571BC592\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"CB627D18B58AD56DDE331A30456BC65C601A4E9B18DEDCEA08E7DAAA07815FF0\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"53DFDFA4E297FCFE07594E8C62D5B8AB06B32C7549F38A163094FD6429D5DA43\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"B32396746453442F353E616292BB20BBAA5D23B546450FDB9C54B8386167D529\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"FABCF5197CDD7F458AC33832D3284021DB2425FD6BEA7A2E69B7486E8F51F9CC\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"91E2F5788D5810EBA7BA58737DE1548A8ECACD014598BC0B143E041B17052552\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"FD73DAD31C644FF1B43BEF0CCDDA96710B9CD9875ECA7E31707AF3E96D522BBD\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"DD6936FE21F8F077C123A1A521C12224F72255B73E03A7260693E8A24B0FA389\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"A4310D50AF18A6447190372A86AFAF8B951FFB431D837F1E5688B45971ED1557\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"4B03F45807AD70F21BFC2CAE71C9FDE4604C064CF5FFB686BAE5DBAAD7FDD34C\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"8D722F81A9C113C0791DF136A2966DB26C950A971DB46B4199F4EA54B78BFB9F\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"92D8092EE77BC9208F0897DC05271894E63EF27933AE537FB983EEF0EAE3EEC8\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"C1B48299ABA5208FE9630ACE55CA68A03EDA5A519C8802A0D3A673BE8F8E557D\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"59769007F7685D0FCD50872F9F95D5755A5B2B457D81F3692B610A98672F0E1B\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"BFD88FE1101C41AE3E801BF8BE56350EE9BAD1A6B9BD515EDC5C6D5B8711AC44\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"A1F05CCB80C2D710EC7D479ABDCBB879E58D7EDB7149FE78A87884E3D0BAD0F9\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"93E65EC762F055DC718A332582C41A04430D72E3CB87E8B897B67516F0D1AA39\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"4FF460D54B9C86DABFBCFC5712E0400D2BED3FBC4D4FBDAA86E06ADCD2A9AD7A\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"E793C9B02FD8AA13E21C31228ACCB08119643B749C898964B1746D46C3D4CBD2\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"85FB2F91DD12275A0145B636534F84024AD68B69B8EE88684FF711375805B348\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"43F257412D440D627476974F877DA8F1FC2444565A367AE60EDDC27A412531AE\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"6EA54741D004667EED1B4816634AA3A79E6E4B96950F8279DAFC8D9BD8812137\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"6FFF78E400A70C11011CD85977C459FB5AF96A3DF0540820D0F4B8607875E58F\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"CBB5AF185E942A2402F9EACBC0ED5BB876EEA3C1223623D00447E4F3BA554B65\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"92A9D9833FE1944DB366E8BFAE7A95B6480C2D6C6C2A1BE65D4236B608FCA1BB\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"EB04CF5EB1F39AFA762F2BB120F296CBA520C1B97DB1589565B81CB9A17B7244\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"69DDD7EA90BB57C93E135DC85EA6FCD5480B603239BDC454FC758B2A26CF7F79\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"9ACFAB7E43C8D880D06B262A94DEEEE4B4659989C3D0CAF19BAF6405E41AB7DF\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"2399561127A57125DE8CEFEA610DDF2FA078B5C8067F4E828290BFB860E84B3C\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"69FAC9BD55FB0AC78D53BBEE5CF1D597989FD0AAAB20A25151BDF1733EE7D122\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"C57A3ACBE8C06BA1988A83485BF326F2448775379849DE01CA43571AF357E74B\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"F008733EC500DC498763CC9264C6FCEA40EC22000E927D053CE9C90BFA046CB2\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"CECDDC905099D8DADFC5B1D209B737CBE2C18CFB2C10C0FF0BCF0D3286FC1AA2\"</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> list;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>简单介绍下数字签名、数字证书</p>","more":"<h3 id=\"前沿\"><a href=\"#前沿\" class=\"headerlink\" title=\"前沿\"></a>前沿</h3><p>开发过程中需要对app发起的API请求进行验签，防篡改处理</p>\n<h3 id=\"数字证书\"><a href=\"#数字证书\" class=\"headerlink\" title=\"数字证书\"></a>数字证书</h3><p>每个操作系统中会自带很多根证书(根证书即称为CA颁发机构)，这些默认是<code>隐士信任</code>的</p>\n<p>如下图为Mac自带的系统根证书<br><img src=\"/images/digital_1.png\" alt=\"\"></p>\n<p><a href=\"https://support.apple.com/zh-cn/HT204132\" target=\"_blank\" rel=\"noopener\">https://support.apple.com/zh-cn/HT204132</a> 这个链接是iPhone手机中内置的根证书</p>\n<p>也有的根证书，是 加到 操作系统里，让用户点击确认后，信任的( <code>显示信任</code> )，比如 抓包Charles的证书</p>\n<p>抓包，就是 抓包工具 伪装成 服务器，APP连接此服务器进行通讯，然后 此服务器再伪装成客户端，和 真实的服务器进行通讯，它就成了 中间人了，所有的数据 它都能拿到，并且可以进行篡改</p>\n<p>证书组成信息，包括主题名称、国家/地区、所在地、组织、组织单位、有效期、公共密钥信息、签发者信息</p>\n<p><img src=\"/images/digital_2.png\" alt=\"\"><br><img src=\"/images/digital_3.png\" alt=\"\"></p>\n<h3 id=\"证书链\"><a href=\"#证书链\" class=\"headerlink\" title=\"证书链\"></a>证书链</h3><p>证书链：从根证书一级一级向下颁发证书，进行签名</p>\n<p><img src=\"/images/digital_4.png\" alt=\"\"></p>\n<h2 id=\"验签\"><a href=\"#验签\" class=\"headerlink\" title=\"验签\"></a>验签</h2><p>验签目的是防止 <code>中间人攻击</code><br>所以要做 证书 检验，即 证书锁定 SSL Pinning</p>\n<ul>\n<li><p>一般有3个方向,从宽到严依次为</p>\n<ol>\n<li><p>叶节点证书 校验，在证书链上 校验 叶节点是否是 使用的证书，可以从证书的信息校验，比如 证书常用名称，证书序列号，证书指纹(证书的sha-256算法加密签名、 证书的sha-1算法加密签名)，AFNet里面提供了 证书public key信息校验，证书data信息校验 , 但如果服务器换证书了，这个就悲剧了</p>\n</li>\n<li><p>根节点证书 校验，在证书链上 校验 根节点 使用的证书 ，比如 根证书 publicKey是否和 预埋的一致，根证书的sha-256签名和预埋的是否一致，但这种情况下，如果服务器换了别家的 CA颁发机构 ，就悲剧了</p>\n</li>\n<li><p>验证 根证书 是否是 系统自带的内置的证书，校验方式，就是验证证书的信息，比如 证书常用名称，证书序列号，证书指纹(证书的sha-256算法加密签名、 证书的sha-1算法加密签名)，也就是 验证当前网络服务器的根证书的 sha-256算法签名 是否在 <a href=\"https://support.apple.com/zh-cn/HT204132\" target=\"_blank\" rel=\"noopener\">https://support.apple.com/zh-cn/HT204132</a> 这个列表里</p>\n</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取证书链</span></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)logDistrustCert:(SecTrustRef)serverTrust</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">NSMutableArray</span> *list = [[<span class=\"built_in\">NSMutableArray</span> alloc] init];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">CFIndex</span> certificateCount = SecTrustGetCertificateCount(serverTrust);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"built_in\">CFIndex</span> i = <span class=\"number\">0</span>; i &lt; certificateCount; i++) &#123;</span><br><span class=\"line\">        SecCertificateRef certificate = SecTrustGetCertificateAtIndex(serverTrust, i);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"built_in\">NSMutableDictionary</span> *certInfo = [[<span class=\"built_in\">NSMutableDictionary</span> alloc] init];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"built_in\">CFStringRef</span> subjectSummary = SecCertificateCopySubjectSummary(certificate);</span><br><span class=\"line\">        certInfo[<span class=\"string\">@\"subject_summary\"</span>] = [<span class=\"built_in\">NSString</span> stringWithFormat:<span class=\"string\">@\"%@\"</span>, subjectSummary];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (@available(iOS <span class=\"number\">11.0</span>, *)) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">NSData</span> *serialNum = (__bridge_transfer <span class=\"built_in\">NSData</span> *)SecCertificateCopySerialNumberData(certificate, <span class=\"literal\">nil</span>);</span><br><span class=\"line\">            certInfo[<span class=\"string\">@\"serial_number\"</span>] = [<span class=\"built_in\">NSString</span> stringWithFormat:<span class=\"string\">@\"%@\"</span>, serialNum];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"built_in\">NSData</span> *certData = (__bridge_transfer <span class=\"built_in\">NSData</span> *)SecCertificateCopyData(certificate);</span><br><span class=\"line\">        certInfo[<span class=\"string\">@\"sha256\"</span>] = [<span class=\"built_in\">NSString</span> stringWithFormat:<span class=\"string\">@\"%@\"</span>, AFSHA256(certData)];</span><br><span class=\"line\">        </span><br><span class=\"line\">        certInfo[<span class=\"string\">@\"time\"</span>] = @(<span class=\"built_in\">NSDate</span>.date.timeIntervalSince1970);</span><br><span class=\"line\">        </span><br><span class=\"line\">        [list addObject:certInfo];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    [<span class=\"keyword\">self</span> saveDistrustCert:list];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取证书的sha256</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"built_in\">NSString</span> *AFSHA256(<span class=\"built_in\">NSData</span> *data)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (data.length &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">@\"\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    uint8_t digest[CC_SHA256_DIGEST_LENGTH];</span><br><span class=\"line\">    </span><br><span class=\"line\">    CC_SHA256(data.bytes, (CC_LONG)data.length, digest);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSMutableString</span> *result = [<span class=\"built_in\">NSMutableString</span> stringWithCapacity:CC_SHA256_DIGEST_LENGTH * <span class=\"number\">3</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; CC_SHA256_DIGEST_LENGTH; i++) &#123;</span><br><span class=\"line\">        [result appendFormat:<span class=\"string\">@\"%02x\"</span>, digest[i]];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> [result stringByTrimmingCharactersInSet:[<span class=\"built_in\">NSCharacterSet</span> whitespaceCharacterSet]].uppercaseString;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这个list为iPhone中的系统自带的根证书的sha256</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"built_in\">NSArray</span> *systemInlayCertSha256()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">NSArray</span> *list =</span><br><span class=\"line\">    @[<span class=\"string\">@\"D7A7A0FB5D7E2731D771E9484EBCDEF71D5F0C3E0A2948782BC83EE0EA699EF4\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"55926084EC963A64B96E2ABE01CE0BA86A64FBFEBCC7AAB5AFC155B37FD76066\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"8C7209279AC04E275E16D07FD3B775E80154B5968046E31F52DD25766324E9A7\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"687FA451382278FFF0C8B11F8D43D576671C6EB2BCEAB413FB83D965D06D2FF2\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"A31F093053BD12C1F5C3C6EFD498023FD2914D7758D05D698CE084B50626E0E5\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"0376AB1D54C5F9803CE4B2E201A0EE7EEF7B57B636E8A93C9B8D4860C96F5FA7\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"0A81EC5A929777F145904AF38D5D509F66B5E2C58FCDB531058B0E17F3F0B41B\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"BD71FDF6DA97E4CF62D1647ADD2581B07D79ADF8397EB4ECBA9C5E8488821423\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"70A73F7F376B60074248904534B11482D5BF0E698ECC498DF52577EBF2E93B9A\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"8ECDE6884F3D87B1125BA31AC3FCB13D7016DE7F57CC904FE1CB97C6AE98196E\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"1BA5B2AA8C65401A82960118F80BEC4F62304D83CEC4713A19C39C011EA46DB4\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"18CE6CFE7BF14E60B2E347B8DFE868CB31D02EBB3ADA271569F50343B46DB3A4\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"E35D28419ED02025CFA69038CD623962458DA5C695FBDEA3C22B0BFB25897092\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"E3268F6106BA8B665A1A962DDEA1459D2A46972F1F2440329B390B895749AD45\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"C2B9B042DD57830E7D117DAC55AC8AE19407D38E41D88F3215BC3A890444A050\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"63343ABFB89A6A03EBB57E9B3F5FA7BE7C4F5C756F3017B3A8C488C3653E9179\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"B0B1730ECBC7FF4505142C49F1295E6EDA6BCAED7E2C68C5BE91B5A11001F024\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"0D83B611B648A1A75EB8558400795375CAD92E264ED8E9D7A757C1F5EE2BB22D\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"126BF01C1094D2F0CA2E352380B3C724294546CCC65597BEF7F12D8A171F1984\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"F356BEA244B7A91EB35D53CA9AD7864ACE018E2D35D5F8F96DDF68A6F41AA474\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"04048028BF1F2864D48F9AD4D83294366A828856553F3B14303F90147F5D40EF\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"0ED3FFAB6C149C8B4E71058E8668D429ABFDA681C2FFF508207641F0D751A3E5\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"16AF57A9F676B0AB126095AA5EBADEF22AB31119D644AC95CD4B93DBF3F26AEB\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"9F9744463BE13714754E1A3BECF98C08CC205E4AB32028F4E2830C4A1B2775B8\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"9A114025197C5BB95D94E63D55CD43790847B646B23CDF11ADA4A00EFF15FB48\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"EDF7EBBCA27A2A384D387B7D4010C666E2EDB4843E4C29B4AE1D5B9332E6B24D\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"F96F23F4C3E79C077A46988D5AF5900676A0F039CB645DD17549B216C82440CE\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"E23D4A036D7B70E9F595B1422079D2B91EDFBB1FB651A0633EAA8A9DC5F80703\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"E3B6A2DB2ED7CE48842F7AC53241C7B71D54144BFB40C11F3F1D0B42F5EEA12D\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"FCBFE2886206F72B27593C8B070297E12D769ED10ED7930705A8098EFFC14D17\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"2A99F5BC1174B73CBB1D620884E01C34E51CCB3978DA125F0E33268883BF4158\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"152A402BFCDF2CD548054D2275B39C7FCA3EC0978078B0F0EA76E561A6C7433E\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"6CC05041E6445E74696C4CFBC9F80F543B7EABBB44B4CE6F787C6A9971C42F17\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"EAA962C4FA4A6BAFEBE415196D351CCD888D4F53F3FA8AE6D7C466A94E6042BB\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"D8E0FEBC1DB2E38D00940F37D27D41344D993E734B99D5656D9778D4D8143624\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"B676F2EDDAE8775CD36CB0F63CD1D4603961F49E6265BA013A2F0307B6D0B804\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"5C58468D55F58E497E743982D2B50010B6D165374ACF83A7D4A32DB768C4408E\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"5CC3D78E4E1D5E45547A04E6873E64F90CF9536D1CCC2EF800F355C4C5FD70FD\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"063E4AFAC491DFD332F3089B8542E94617D893D7FE944E10A7937EE29D9693C0\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"0C258A12A5674AEF25F28BA7DCFAECEEA348E541E6F5CC4EE63B71B361606AC3\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"8327BC8C9D69947B3DE3C27511537267F59C21B9FA7B613FAFBCCD53B7024000\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"0F993C8AEF97BAAF5687140ED59AD1821BB4AFACF0AA9A58B5D57A338A3AFBCB\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"0C2CD63DF7806FA399EDE809116B575BF87989F06518F9808C860503178BAF66\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"1793927A0614549789ADCE2F8F34F7F0B66D0F3AE3A3B84D21EC15DBBA4FADC7\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"52F0E1C4E58EC629291B60317F074671B85D7EA80D5B07273463534B32B40234\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"AE4457B40D9EDA96677B0D3C92D57B5177ABD7AC1037958356D1E094518BE5F2\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"2605875AFCC176B2D66DD66A995D7F8D5EBB86CE120D0E7E9E7C6EF294A27D4C\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"507941C74460A0B47086220D4E9932572AB5D1B5BBCB8980AB1CB17651A844D2\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"A1A86D04121EB87F027C66F53303C28E5739F943FC84B38AD6AF009035DD9457\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"49E7A442ACF0EA6287050054B52564B650E4F49E42E348D6AA38E039E957B1C1\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"EEC5496B988CE98625B934092EEC2908BED0B0F316C2D4730C84EAF1F3D34881\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"B6191A50D0C3977F7DA99BCDAAC86A227DAEB9679EC70BA3B0C9D92271C170D3\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"3E9099B5015E8F486C00BCEA9D111EE721FABA355A89BCF1DF69561E3DC6325C\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"7D05EBB682339F8C9451EE094EEBFEFA7953A114EDB2F44949452FAB7D2FC185\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"7E37CB8B4C47090CAB36551BA6F45DB840680FBA166A952DB100717F43053FC2\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"4348A0E9444C78CB265E058D5E8944B4D84F9662BD26DB257F8934A443C70161\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"CB3CCBB76031E5E0138F8DD39A23F9DE47FFC35E43C1144CEA27D46A5AB1CB5F\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"31AD6648F8104138C738F39EA4320133393E3A18CC02296EF97C2AC9EF6731D0\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"7431E5F4C3C1CE4690774F0B61E05440883BA9A01ED00BA6ABD7806ED3B118CF\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"552F7BDCF1A7AF9E6CE672017F4F12ABF77240C78E761AC203D1D9D20AC89988\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"0687260331A72403D909F105E69BCF0D32E1BD2493FFC6D9206D11BCD6770739\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"9A73929A500F1A0BF49DCB046E8039169696557345E9F813F10FF9380DB22695\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"B0BFD52BB0D7D9BD92BF5D4DC13DA255C02C542F378365EA893911F55E55F23C\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"6639D13CAB85DF1AD9A23C443B3A60901E2B138D456FA71183578108884EC6BF\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"3E84BA4342908516E77573C0992F0979CA084E4685681FF195CCBA8A229B8A76\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"02ED0EB28C14DA45165C566791700D6451D7FB56F0B2AB1D3B8EB070E56EDFF5\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"43DF5774B03E7FEF5FE40D931A7BEDF1BB2E6B42738C4E6D3841103D3AA7F339\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"73C176434F1BC6D5ADF45B0E76E727287C8DE57616C1E6E6141A2B2CBC7D8E4C\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"D1C339EA2784EB870F934FC5634E4AA9AD5505016401F26465D37A574663359F\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"6DC47172E01CBCB0BF62580D895FE2B8AC9AD4F873801E0C10B9C837D21EB177\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"C0A6F4DC63A24BFDCF54EF2A6A082A0A72DE35803E2FF5FF527AE5D87206DFD5\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"894EBC0B23DA2A50C0186B7F8F25EF1F6B2935AF32A94584EF80AAF877A3A06E\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"FF856A2D251DCD88D36656F450126798CFABAADE40799C722DE4D2B5DB36A73A\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"5EDB7AC43B82A06A8761E8D7BE4979EBF2611F7DD79BF91C1C6B566A219ED766\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"B478B812250DF878635C2AA7EC7D155EAA625EE82916E2CD294361886CD1FBD4\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"37D51006C512EAAB626421F1EC8C92013FC5F82AE98EE533EB4619B8DEB4D06C\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"136335439334A7698016A0D324DE72284E079D7B5220BB8FBD747816EEBEBACA\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"EF3CB417FC8EBF6F97876C9E4ECE39DE1EA5FE649141D1028B7D11C0B2298CED\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"EBD41040E4BB3EC742C9E381D31EF2A41A48B6685C96E7CEF3C1DF6CD4331C99\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"BEC94911C2955676DB6C0A550986D76E3BA005667C442C9762B4FBB773DE228C\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"179FBC148A3DD00FD24EA13458CC43BFA7F59C8182D783A513F6EBEC100C8924\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"CA42DD41745FD0B81EB902362CF9D8BF719DA1BD1B1EFC946F5B4C99F42C1B9E\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"CBB522D7B7F127AD6A0113865BDF1CD4102E7D0759AF635A7CF4720DC963C53B\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"C3846BF24B9E93CA64274C0EC67C1ECC5E024FFCACD2D74019350E81FE546AE4\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"45140B3247EB9CC8C5B4F0D7B53091F73292089E6E5A63E2749DD3ACA9198EDA\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"70B922BFDA0E3F4A342E4EE22D579AE598D071CC5EC9C30F123680340388AEA5\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"BC104F15A48BE709DCA542A7E1D4B9DF6F054527E802EAA92D595444258AFE71\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"F9E67D336C51002AC054C632022D66DDA2E7E3FFF10AD061ED31D8BBB410CFB2\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"C0C05A8D8DA55EAF27AA9B910B0A6EF0D8BBDED346928DB872E182C2073E9802\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"5D56499BE4D2E08BCFCAD08A3E38723D50503BDE706948E42F55603019E528AE\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"30D0895A9A448A262091635522D1F52010B5867ACAE12C78EF958FD4F4389F2F\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"96BCEC06264976F37460779ACF28C5A7CFE8A3C0AAE11A8FFCEE05C0BDDF08C6\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"23804203CA45D8CDE716B8C13BF3B448457FA06CC10250997FA01458317C41E5\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"2530CC8E98321502BAD96F9B1FBA1B099E2D299E0F4548BB914F363BC0D4531F\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"6FDB3F76C8B801A75338D8A50A7C02879F6198B57E594D318D3832900FEDCD79\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"3C5F81FEA5FAB82C64BFA2EAECAFCDE8E077FC8620A7CAE537163DF36EDBF378\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"6C61DAC3A2DEF031506BE036D2A6FE401994FBD13DF9C8D466599274C446EC98\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"15F0BA00A3AC7AF3AC884C072B1011A077BD77C097F40164B2F8598ABD83860C\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"41C923866AB4CAD6B7AD578081582E020797A6CBDF4FFF78CE8396B38937D7F5\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"6B9C08E86EB0F767CFAD65CD98B62149E5494A67F5845E7BD1ED019F27B86BD6\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"56C77128D98C18D91B4CFDFFBC25EE9103D4758EA2ABAD826A90F3457D460EB4\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"27995829FE6A7515C1BFE848F9C4761DB16C225929257BF40D0894F29EA8BAF2\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"B7C36231706E81078C367CB896198F1E3208DD926949DD8F5709A410F75B6292\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"8A866FD1B276B57E578E921C65828A2BED58E9F2F288054134B7F1F4BFC9CC74\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"8FE4FB0AF93A4D0D67DB0BEBB23E37C71BF325DCBCDD240EA04DAF58B47E1840\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"85A0DD7DD720ADB7FF05F83D542B209DC7FF4528F7D677B18389FEA5E5C49E86\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"88EF81DE202EB018452E43F864725CEA5FBD1FC2D9D205730709C5D8B8690F46\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"18F1FC7F205DF8ADDDEB7FE007DD57E3AF375A9C4D8D73546BF4F1FED1E18D35\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"A45EDE3BBBF09C8AE15C72EFC07268D693A21C996FD51E67CA079460FD6D8873\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"4200F5043AC8590EBB527D209ED1503029FBCBD41CA1B506EC27F15ADE7DAC69\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"F1C1B50AE5A20DD8030EC9F6BC24823DD367B5255759B4E71B61FCE9F7375D73\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"A22DBA681E97376E2D397D728AAE3A9B6296B9FDBA60BC2E11F647F2C675FB37\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"E75E72ED9F560EEC6EB4800073A43FC3AD19195A392282017895974A99026B6C\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"513B2CECB810D4CDE5DD85391ADFC6C2DD60D87BB736D2B521484AA47A0EBEF6\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"7908B40314C138100B518D0735807FFBFCF8518A0095337105BA386B153DD927\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"4D2491414CFE956746EC4CEFA6CF6F72E28A1329432F9D8A907AC4CB5DADC15A\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"668C83947DA63B724BECE1743C31A0E6AED0DB8EC5B31BE377BB784F91B6716F\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"3C4FB0B95AB8B30032F432B86F535FE172C185D0FD39865837CF36187FA6F428\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"1465FA205397B876FAA6F0A9958E5590E40FCC7FAA4FB7C2C8677521FB5FB658\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"2CE1CB0BF9D2F9E102993FBE215152C3B2DD0CABDE1C68E5319B839154DBB7F5\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"568D6905A2C88708A4B3025190EDCFEDB1974A606A13C6E5290FCB2AE63EDAB5\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"C7BA6567DE93A798AE1FAA791E712D378FAE1F93C4397FEA441BB7CBE6FD5995\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"C766A9BEF2D4071C863A31AA4920E813B2D198608CB7B7CFE21143B836DF09EA\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"E17890EE09A3FBF4F48B9C414A17D637B7A50647E9BC752322727FCC1742A911\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"21DB20123660BB2ED418205DA11EE7A85A65E2BC6E55B5AF7E7899C8A266D92E\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"F09B122C7114F4A09BD4EA4F4A99D558B46E4C25CD81140D29C05613914C3841\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"D95FEA3CA4EEDCE74CD76E75FC6D1FF62C441F0FA8BC77F034B19E5DB258015D\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"62DD0BE9B9F50A163EA0F8E75C053B1ECA57EA55C8688F647C6881F2C8357B95\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"7AF6EA9F753A1E709BD64D0BEB867C11E8C295A56E24A6E0471459DCCDAA1558\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"3B222E566711E992300DC0B15AB9473DAFDEF8C84D0CEF7D3317B4C1821D1436\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"59B3829F1FF443344958FAE8BFF621B684C848CFBF7EAD6B63A6CA50F2794F89\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"BE6C4DA2BBB9BA59B6F3939768374246C3C005993FA98F020D1DEDBED48A81D5\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"1E49AC5DC69E86D0565DA2C1305C419330B0B781BFEC50E54A1B35AF7FDDD501\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"363F3C849EAB03B0A2A0F636D7B86D04D3AC7FCFE26A0A9121AB9795F6E176DF\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"9D190B2E314566685BE8A889E27AA8C7D7AE1D8AADDBA3C1ECF9D24863CD34B9\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"FE863D0822FE7A2353FA484D5924E875656D3DC9FB58771F6F616F9D571BC592\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"CB627D18B58AD56DDE331A30456BC65C601A4E9B18DEDCEA08E7DAAA07815FF0\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"53DFDFA4E297FCFE07594E8C62D5B8AB06B32C7549F38A163094FD6429D5DA43\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"B32396746453442F353E616292BB20BBAA5D23B546450FDB9C54B8386167D529\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"FABCF5197CDD7F458AC33832D3284021DB2425FD6BEA7A2E69B7486E8F51F9CC\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"91E2F5788D5810EBA7BA58737DE1548A8ECACD014598BC0B143E041B17052552\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"FD73DAD31C644FF1B43BEF0CCDDA96710B9CD9875ECA7E31707AF3E96D522BBD\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"DD6936FE21F8F077C123A1A521C12224F72255B73E03A7260693E8A24B0FA389\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"A4310D50AF18A6447190372A86AFAF8B951FFB431D837F1E5688B45971ED1557\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"4B03F45807AD70F21BFC2CAE71C9FDE4604C064CF5FFB686BAE5DBAAD7FDD34C\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"8D722F81A9C113C0791DF136A2966DB26C950A971DB46B4199F4EA54B78BFB9F\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"92D8092EE77BC9208F0897DC05271894E63EF27933AE537FB983EEF0EAE3EEC8\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"C1B48299ABA5208FE9630ACE55CA68A03EDA5A519C8802A0D3A673BE8F8E557D\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"59769007F7685D0FCD50872F9F95D5755A5B2B457D81F3692B610A98672F0E1B\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"BFD88FE1101C41AE3E801BF8BE56350EE9BAD1A6B9BD515EDC5C6D5B8711AC44\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"A1F05CCB80C2D710EC7D479ABDCBB879E58D7EDB7149FE78A87884E3D0BAD0F9\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"93E65EC762F055DC718A332582C41A04430D72E3CB87E8B897B67516F0D1AA39\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"4FF460D54B9C86DABFBCFC5712E0400D2BED3FBC4D4FBDAA86E06ADCD2A9AD7A\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"E793C9B02FD8AA13E21C31228ACCB08119643B749C898964B1746D46C3D4CBD2\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"85FB2F91DD12275A0145B636534F84024AD68B69B8EE88684FF711375805B348\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"43F257412D440D627476974F877DA8F1FC2444565A367AE60EDDC27A412531AE\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"6EA54741D004667EED1B4816634AA3A79E6E4B96950F8279DAFC8D9BD8812137\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"6FFF78E400A70C11011CD85977C459FB5AF96A3DF0540820D0F4B8607875E58F\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"CBB5AF185E942A2402F9EACBC0ED5BB876EEA3C1223623D00447E4F3BA554B65\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"92A9D9833FE1944DB366E8BFAE7A95B6480C2D6C6C2A1BE65D4236B608FCA1BB\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"EB04CF5EB1F39AFA762F2BB120F296CBA520C1B97DB1589565B81CB9A17B7244\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"69DDD7EA90BB57C93E135DC85EA6FCD5480B603239BDC454FC758B2A26CF7F79\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"9ACFAB7E43C8D880D06B262A94DEEEE4B4659989C3D0CAF19BAF6405E41AB7DF\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"2399561127A57125DE8CEFEA610DDF2FA078B5C8067F4E828290BFB860E84B3C\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"69FAC9BD55FB0AC78D53BBEE5CF1D597989FD0AAAB20A25151BDF1733EE7D122\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"C57A3ACBE8C06BA1988A83485BF326F2448775379849DE01CA43571AF357E74B\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"F008733EC500DC498763CC9264C6FCEA40EC22000E927D053CE9C90BFA046CB2\"</span>,</span><br><span class=\"line\">      <span class=\"string\">@\"CECDDC905099D8DADFC5B1D209B737CBE2C18CFB2C10C0FF0BCF0D3286FC1AA2\"</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> list;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"deeplinking(通用链接)","date":"2018-03-21T01:31:20.000Z","comments":1,"_content":"\n简单介绍下ios的deeplinking(通用链接)\n\n<!-- more -->\n\n## 前沿\n经常看到从Safari里面点击一个链接 直接跳转到指定APP，这个现象实现的方式就是使用deeplinking技术\n\n通用链接技术可以实现在安装APP的前提下，点击WAP页的相关链接，可以直接打开APP（通过APP代码的控制可以跳转到对应的视图）\n\n### 链接的控制\n可以通过访问https://www.app-domain.com/apple-app-site-association来了解目前拦截了哪些WAP页面\n如果需要访问WAP页面，可以在点击链接打开APP后，在屏幕的右上角会有个网页进入选项，点击即可进入WAP浏览模式（此操作为记忆模式，下次点开链接会在WAP中访问）。\n如果需要点击链接访问APP，可以下拉页面顶部可见一个操作条，点击操作条中的\"打开\"即可重新跳转至APP中。\n\n例如，知乎app的支持的deeplink为<https://www.zhihu.com/apple-app-site-association>\n\n### APP端配置\nAPP端需要做域名关联和URL的解析，即可完成通用链接的配置和使用。\n工程配置下支持Associated Domains\n\n```objc\n// deeplink在app里面的回调\n-(BOOL)application:(UIApplication *)application continueUserActivity:(NSUserActivity *)userActivity restorationHandler:(void (^)(NSArray * _Nullable))restorationHandler{\n\n    NSLog(@\"userActivity : %@\",userActivity.webpageURL.description);\n    return YES;\n}\n```\n\n关于通用链接的详细说明可参考官网：https://developer.apple.com/library/ios/documentation/General/Conceptual/AppSearch/UniversalLinks.html","source":"_posts/deeplinking.md","raw":"---\ntitle: \"deeplinking(通用链接)\"\ndate: 2018-03-21 9:31:20 +0800\ncomments: true\ntags:\n- deeplinking\n- 通用链接\ncategories:\n- [deeplinking]\n- [通用链接]\n---\n\n简单介绍下ios的deeplinking(通用链接)\n\n<!-- more -->\n\n## 前沿\n经常看到从Safari里面点击一个链接 直接跳转到指定APP，这个现象实现的方式就是使用deeplinking技术\n\n通用链接技术可以实现在安装APP的前提下，点击WAP页的相关链接，可以直接打开APP（通过APP代码的控制可以跳转到对应的视图）\n\n### 链接的控制\n可以通过访问https://www.app-domain.com/apple-app-site-association来了解目前拦截了哪些WAP页面\n如果需要访问WAP页面，可以在点击链接打开APP后，在屏幕的右上角会有个网页进入选项，点击即可进入WAP浏览模式（此操作为记忆模式，下次点开链接会在WAP中访问）。\n如果需要点击链接访问APP，可以下拉页面顶部可见一个操作条，点击操作条中的\"打开\"即可重新跳转至APP中。\n\n例如，知乎app的支持的deeplink为<https://www.zhihu.com/apple-app-site-association>\n\n### APP端配置\nAPP端需要做域名关联和URL的解析，即可完成通用链接的配置和使用。\n工程配置下支持Associated Domains\n\n```objc\n// deeplink在app里面的回调\n-(BOOL)application:(UIApplication *)application continueUserActivity:(NSUserActivity *)userActivity restorationHandler:(void (^)(NSArray * _Nullable))restorationHandler{\n\n    NSLog(@\"userActivity : %@\",userActivity.webpageURL.description);\n    return YES;\n}\n```\n\n关于通用链接的详细说明可参考官网：https://developer.apple.com/library/ios/documentation/General/Conceptual/AppSearch/UniversalLinks.html","slug":"deeplinking","published":1,"updated":"2020-06-23T09:10:18.336Z","layout":"post","photos":[],"link":"","_id":"ckbszw79a0000l73jglqodf9a","content":"<p>简单介绍下ios的deeplinking(通用链接)</p>\n<a id=\"more\"></a>\n\n<h2 id=\"前沿\"><a href=\"#前沿\" class=\"headerlink\" title=\"前沿\"></a>前沿</h2><p>经常看到从Safari里面点击一个链接 直接跳转到指定APP，这个现象实现的方式就是使用deeplinking技术</p>\n<p>通用链接技术可以实现在安装APP的前提下，点击WAP页的相关链接，可以直接打开APP（通过APP代码的控制可以跳转到对应的视图）</p>\n<h3 id=\"链接的控制\"><a href=\"#链接的控制\" class=\"headerlink\" title=\"链接的控制\"></a>链接的控制</h3><p>可以通过访问<a href=\"https://www.app-domain.com/apple-app-site-association来了解目前拦截了哪些WAP页面\" target=\"_blank\" rel=\"noopener\">https://www.app-domain.com/apple-app-site-association来了解目前拦截了哪些WAP页面</a><br>如果需要访问WAP页面，可以在点击链接打开APP后，在屏幕的右上角会有个网页进入选项，点击即可进入WAP浏览模式（此操作为记忆模式，下次点开链接会在WAP中访问）。<br>如果需要点击链接访问APP，可以下拉页面顶部可见一个操作条，点击操作条中的”打开”即可重新跳转至APP中。</p>\n<p>例如，知乎app的支持的deeplink为<a href=\"https://www.zhihu.com/apple-app-site-association\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/apple-app-site-association</a></p>\n<h3 id=\"APP端配置\"><a href=\"#APP端配置\" class=\"headerlink\" title=\"APP端配置\"></a>APP端配置</h3><p>APP端需要做域名关联和URL的解析，即可完成通用链接的配置和使用。<br>工程配置下支持Associated Domains</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// deeplink在app里面的回调</span></span><br><span class=\"line\">-(<span class=\"built_in\">BOOL</span>)application:(<span class=\"built_in\">UIApplication</span> *)application continueUserActivity:(<span class=\"built_in\">NSUserActivity</span> *)userActivity restorationHandler:(<span class=\"keyword\">void</span> (^)(<span class=\"built_in\">NSArray</span> * _Nullable))restorationHandler&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"userActivity : %@\"</span>,userActivity.webpageURL.description);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">YES</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>关于通用链接的详细说明可参考官网：<a href=\"https://developer.apple.com/library/ios/documentation/General/Conceptual/AppSearch/UniversalLinks.html\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/library/ios/documentation/General/Conceptual/AppSearch/UniversalLinks.html</a></p>\n","site":{"data":{}},"excerpt":"<p>简单介绍下ios的deeplinking(通用链接)</p>","more":"<h2 id=\"前沿\"><a href=\"#前沿\" class=\"headerlink\" title=\"前沿\"></a>前沿</h2><p>经常看到从Safari里面点击一个链接 直接跳转到指定APP，这个现象实现的方式就是使用deeplinking技术</p>\n<p>通用链接技术可以实现在安装APP的前提下，点击WAP页的相关链接，可以直接打开APP（通过APP代码的控制可以跳转到对应的视图）</p>\n<h3 id=\"链接的控制\"><a href=\"#链接的控制\" class=\"headerlink\" title=\"链接的控制\"></a>链接的控制</h3><p>可以通过访问<a href=\"https://www.app-domain.com/apple-app-site-association来了解目前拦截了哪些WAP页面\" target=\"_blank\" rel=\"noopener\">https://www.app-domain.com/apple-app-site-association来了解目前拦截了哪些WAP页面</a><br>如果需要访问WAP页面，可以在点击链接打开APP后，在屏幕的右上角会有个网页进入选项，点击即可进入WAP浏览模式（此操作为记忆模式，下次点开链接会在WAP中访问）。<br>如果需要点击链接访问APP，可以下拉页面顶部可见一个操作条，点击操作条中的”打开”即可重新跳转至APP中。</p>\n<p>例如，知乎app的支持的deeplink为<a href=\"https://www.zhihu.com/apple-app-site-association\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/apple-app-site-association</a></p>\n<h3 id=\"APP端配置\"><a href=\"#APP端配置\" class=\"headerlink\" title=\"APP端配置\"></a>APP端配置</h3><p>APP端需要做域名关联和URL的解析，即可完成通用链接的配置和使用。<br>工程配置下支持Associated Domains</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// deeplink在app里面的回调</span></span><br><span class=\"line\">-(<span class=\"built_in\">BOOL</span>)application:(<span class=\"built_in\">UIApplication</span> *)application continueUserActivity:(<span class=\"built_in\">NSUserActivity</span> *)userActivity restorationHandler:(<span class=\"keyword\">void</span> (^)(<span class=\"built_in\">NSArray</span> * _Nullable))restorationHandler&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"userActivity : %@\"</span>,userActivity.webpageURL.description);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">YES</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>关于通用链接的详细说明可参考官网：<a href=\"https://developer.apple.com/library/ios/documentation/General/Conceptual/AppSearch/UniversalLinks.html\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/library/ios/documentation/General/Conceptual/AppSearch/UniversalLinks.html</a></p>"},{"title":"热修复","date":"2018-07-22T03:31:32.000Z","comments":1,"_content":"\n介绍下ios平台实现的热修复\n\n<!-- more -->\n\n### 概念解释\n\n* 热修复(也称热补丁、热修复补丁 英文 : hotfix)\n  \n  `(通过接口)动态下发代码(文件)，通过热修复引擎运行下发的代码，达到更改运行中的程序结构`\n\n* 应用场景\n  1. `时效性需求`，即a、不发版的情况下实时修复bug,用户无感知；b、及时应对一些来自各方面的不确定性情况\n  2. `控制线上代码需求`，比如a、绕开apple审核，做apple不让做的内容；b、一些特殊需要，调用apple禁止的API\n\n* 潜在危险\n  1. 程序不可控(因为通过热修复可以调用和替换任意 OC 方法)\n  2. 生态不安全\n\n* 业界方案\n![](/images/hotfix_1.png)\n\n### 使用流程\n\nserver服务器端使用流程\n![](/images/hotfix_2.png)\n\napp端使用流程\n![](/images/hotfix_3.png)\n\n### 原理概述\n\n#### Objective-C是动态语言，通过Objective-C Runtime在运行时可以进行如下操作\n\n* 对类class可以进行`查找类`、`添加类`、`删除类`、`给类添加变量`、`给类添加方法`、`类名字符串反射到类` 等操作，也就是说 `通过字符串可以操作类`\n\n\t比如如下API都是操作类的方法：`super_class`、`class_name`、`class_var_list`、`class_method_list`、`class_protocol_list`、`class_info`、`class_isa`\n\n* 对变量variable可以进行`添加变量`、`获取变量类型/值`、`更改变量类型/值`、`查找变量`、`变量名字符串反射到变量` 等操作，也就是说 `通过字符串可以操作变量`\n\n\t比如如下API都是操作变量的方法：`var_name`、`var_value`、`var_type`\n\n* 对方法method可以进行`查找方法`、`获取方法`、`添加方法`、`判断方法是否存在`、`更改、替换方法实现hook`、`方法名字符串反射到方法` 等操作，也就是说 `通过字符串可以操作方法`\n\n   比如如下API都是操作方法的方法：`method_name`、`method_imp`、`method_type`\n\n* 对方法method进行调用,可从`target`、`method`、`argumentValue、returnValue`等方法组成部分进行拼装，可以使用\n  1. 显示调用 []\n  2. 隐士调用，如`performSelector`、`NSInvocation`、`objc_msgSend()`\n  \n  通过以上调用操作，也就是说 `通过字符串可以操作调用方法`\n\n* 对方法进行消息转发操作\n\n![](/images/hotfix_4.png)\n\n通过字符串按照一定的约定规则，进行识别转换，可以调用和替换OC方法，达到更改程序结构的目的\n\n#### JavaScript是解释型脚本语言，通过解释运行，边解释边执行，无需预先编译\n\n* 解释型：把字符串当代码来执行\nJavaScriptCore是一种JavaScript引擎，提供解释器环境\n能够“读懂”JavaScript代码，对 JavaScript 代码进行解释执行\n\n\t主要为webkit提供脚本处理能力，可以将JavaScript的能力更轻便地、高性能地带给原生的iOS应用\n可以实现OC和JavaScript两种语言的互转\n\n```\n•\tJSContext     \t\t为JavaScript提供运行环境 \n•\tJSValue        \t\t是JavaScript和Object-C之间互换的桥梁,方法调用和参数数据互相转换都是它\n•\tJSManagedValue    \t为开发人员提供对象内存管理 \n•\tJSVirtualMachine  \t为JavaScript的运行提供了底层资源 \n•\tJSExport         \t作为JavaScript和Objective-C两种语言的互通协议 \n```\n\n* 通过JavaScriptCore，Objective-C和JavaScript可以实现bridge通信，包括\n\t1. 参数转换\n\t![](/images/hotfix_5.png)\n\t2. 方法互通互调\n\t即，oc实现的方法，可以通过js去调用；js实现的方法，可以通过oc去调用\n\n### 源码分析(JSPatch)\n\n![](/images/hotfix-001.png)\n![](/images/hotfix-002.png)\n![](/images/hotfix-003.png)\n![](/images/hotfix-004.png)\n![](/images/hotfix-005.png)\n![](/images/hotfix-006.png)\n![](/images/hotfix-007.png)\n![](/images/hotfix-008.png)\n![](/images/hotfix-009.png)\n![](/images/hotfix-010.png)\n\n\n\n\n\n\n","source":"_posts/hot-fix.md","raw":"---\ntitle: \"热修复\"\ndate: 2018-07-22 11:31:32 +0800\ncomments: true\ntags:\n- 热修复\n- JSPatch\ncategories:\n- [热修复]\n- [JSPatch]\n---\n\n介绍下ios平台实现的热修复\n\n<!-- more -->\n\n### 概念解释\n\n* 热修复(也称热补丁、热修复补丁 英文 : hotfix)\n  \n  `(通过接口)动态下发代码(文件)，通过热修复引擎运行下发的代码，达到更改运行中的程序结构`\n\n* 应用场景\n  1. `时效性需求`，即a、不发版的情况下实时修复bug,用户无感知；b、及时应对一些来自各方面的不确定性情况\n  2. `控制线上代码需求`，比如a、绕开apple审核，做apple不让做的内容；b、一些特殊需要，调用apple禁止的API\n\n* 潜在危险\n  1. 程序不可控(因为通过热修复可以调用和替换任意 OC 方法)\n  2. 生态不安全\n\n* 业界方案\n![](/images/hotfix_1.png)\n\n### 使用流程\n\nserver服务器端使用流程\n![](/images/hotfix_2.png)\n\napp端使用流程\n![](/images/hotfix_3.png)\n\n### 原理概述\n\n#### Objective-C是动态语言，通过Objective-C Runtime在运行时可以进行如下操作\n\n* 对类class可以进行`查找类`、`添加类`、`删除类`、`给类添加变量`、`给类添加方法`、`类名字符串反射到类` 等操作，也就是说 `通过字符串可以操作类`\n\n\t比如如下API都是操作类的方法：`super_class`、`class_name`、`class_var_list`、`class_method_list`、`class_protocol_list`、`class_info`、`class_isa`\n\n* 对变量variable可以进行`添加变量`、`获取变量类型/值`、`更改变量类型/值`、`查找变量`、`变量名字符串反射到变量` 等操作，也就是说 `通过字符串可以操作变量`\n\n\t比如如下API都是操作变量的方法：`var_name`、`var_value`、`var_type`\n\n* 对方法method可以进行`查找方法`、`获取方法`、`添加方法`、`判断方法是否存在`、`更改、替换方法实现hook`、`方法名字符串反射到方法` 等操作，也就是说 `通过字符串可以操作方法`\n\n   比如如下API都是操作方法的方法：`method_name`、`method_imp`、`method_type`\n\n* 对方法method进行调用,可从`target`、`method`、`argumentValue、returnValue`等方法组成部分进行拼装，可以使用\n  1. 显示调用 []\n  2. 隐士调用，如`performSelector`、`NSInvocation`、`objc_msgSend()`\n  \n  通过以上调用操作，也就是说 `通过字符串可以操作调用方法`\n\n* 对方法进行消息转发操作\n\n![](/images/hotfix_4.png)\n\n通过字符串按照一定的约定规则，进行识别转换，可以调用和替换OC方法，达到更改程序结构的目的\n\n#### JavaScript是解释型脚本语言，通过解释运行，边解释边执行，无需预先编译\n\n* 解释型：把字符串当代码来执行\nJavaScriptCore是一种JavaScript引擎，提供解释器环境\n能够“读懂”JavaScript代码，对 JavaScript 代码进行解释执行\n\n\t主要为webkit提供脚本处理能力，可以将JavaScript的能力更轻便地、高性能地带给原生的iOS应用\n可以实现OC和JavaScript两种语言的互转\n\n```\n•\tJSContext     \t\t为JavaScript提供运行环境 \n•\tJSValue        \t\t是JavaScript和Object-C之间互换的桥梁,方法调用和参数数据互相转换都是它\n•\tJSManagedValue    \t为开发人员提供对象内存管理 \n•\tJSVirtualMachine  \t为JavaScript的运行提供了底层资源 \n•\tJSExport         \t作为JavaScript和Objective-C两种语言的互通协议 \n```\n\n* 通过JavaScriptCore，Objective-C和JavaScript可以实现bridge通信，包括\n\t1. 参数转换\n\t![](/images/hotfix_5.png)\n\t2. 方法互通互调\n\t即，oc实现的方法，可以通过js去调用；js实现的方法，可以通过oc去调用\n\n### 源码分析(JSPatch)\n\n![](/images/hotfix-001.png)\n![](/images/hotfix-002.png)\n![](/images/hotfix-003.png)\n![](/images/hotfix-004.png)\n![](/images/hotfix-005.png)\n![](/images/hotfix-006.png)\n![](/images/hotfix-007.png)\n![](/images/hotfix-008.png)\n![](/images/hotfix-009.png)\n![](/images/hotfix-010.png)\n\n\n\n\n\n\n","slug":"hot-fix","published":1,"updated":"2020-06-24T06:58:47.728Z","_id":"ckbszw79h0001l73j1us84m6i","layout":"post","photos":[],"link":"","content":"<p>介绍下ios平台实现的热修复</p>\n<a id=\"more\"></a>\n\n<h3 id=\"概念解释\"><a href=\"#概念解释\" class=\"headerlink\" title=\"概念解释\"></a>概念解释</h3><ul>\n<li><p>热修复(也称热补丁、热修复补丁 英文 : hotfix)</p>\n<p><code>(通过接口)动态下发代码(文件)，通过热修复引擎运行下发的代码，达到更改运行中的程序结构</code></p>\n</li>\n<li><p>应用场景</p>\n<ol>\n<li><code>时效性需求</code>，即a、不发版的情况下实时修复bug,用户无感知；b、及时应对一些来自各方面的不确定性情况</li>\n<li><code>控制线上代码需求</code>，比如a、绕开apple审核，做apple不让做的内容；b、一些特殊需要，调用apple禁止的API</li>\n</ol>\n</li>\n<li><p>潜在危险</p>\n<ol>\n<li>程序不可控(因为通过热修复可以调用和替换任意 OC 方法)</li>\n<li>生态不安全</li>\n</ol>\n</li>\n<li><p>业界方案<br><img src=\"/images/hotfix_1.png\" alt=\"\"></p>\n</li>\n</ul>\n<h3 id=\"使用流程\"><a href=\"#使用流程\" class=\"headerlink\" title=\"使用流程\"></a>使用流程</h3><p>server服务器端使用流程<br><img src=\"/images/hotfix_2.png\" alt=\"\"></p>\n<p>app端使用流程<br><img src=\"/images/hotfix_3.png\" alt=\"\"></p>\n<h3 id=\"原理概述\"><a href=\"#原理概述\" class=\"headerlink\" title=\"原理概述\"></a>原理概述</h3><h4 id=\"Objective-C是动态语言，通过Objective-C-Runtime在运行时可以进行如下操作\"><a href=\"#Objective-C是动态语言，通过Objective-C-Runtime在运行时可以进行如下操作\" class=\"headerlink\" title=\"Objective-C是动态语言，通过Objective-C Runtime在运行时可以进行如下操作\"></a>Objective-C是动态语言，通过Objective-C Runtime在运行时可以进行如下操作</h4><ul>\n<li><p>对类class可以进行<code>查找类</code>、<code>添加类</code>、<code>删除类</code>、<code>给类添加变量</code>、<code>给类添加方法</code>、<code>类名字符串反射到类</code> 等操作，也就是说 <code>通过字符串可以操作类</code></p>\n<p>  比如如下API都是操作类的方法：<code>super_class</code>、<code>class_name</code>、<code>class_var_list</code>、<code>class_method_list</code>、<code>class_protocol_list</code>、<code>class_info</code>、<code>class_isa</code></p>\n</li>\n<li><p>对变量variable可以进行<code>添加变量</code>、<code>获取变量类型/值</code>、<code>更改变量类型/值</code>、<code>查找变量</code>、<code>变量名字符串反射到变量</code> 等操作，也就是说 <code>通过字符串可以操作变量</code></p>\n<p>  比如如下API都是操作变量的方法：<code>var_name</code>、<code>var_value</code>、<code>var_type</code></p>\n</li>\n<li><p>对方法method可以进行<code>查找方法</code>、<code>获取方法</code>、<code>添加方法</code>、<code>判断方法是否存在</code>、<code>更改、替换方法实现hook</code>、<code>方法名字符串反射到方法</code> 等操作，也就是说 <code>通过字符串可以操作方法</code></p>\n<p> 比如如下API都是操作方法的方法：<code>method_name</code>、<code>method_imp</code>、<code>method_type</code></p>\n</li>\n<li><p>对方法method进行调用,可从<code>target</code>、<code>method</code>、<code>argumentValue、returnValue</code>等方法组成部分进行拼装，可以使用</p>\n<ol>\n<li>显示调用 []</li>\n<li>隐士调用，如<code>performSelector</code>、<code>NSInvocation</code>、<code>objc_msgSend()</code></li>\n</ol>\n<p>通过以上调用操作，也就是说 <code>通过字符串可以操作调用方法</code></p>\n</li>\n<li><p>对方法进行消息转发操作</p>\n</li>\n</ul>\n<p><img src=\"/images/hotfix_4.png\" alt=\"\"></p>\n<p>通过字符串按照一定的约定规则，进行识别转换，可以调用和替换OC方法，达到更改程序结构的目的</p>\n<h4 id=\"JavaScript是解释型脚本语言，通过解释运行，边解释边执行，无需预先编译\"><a href=\"#JavaScript是解释型脚本语言，通过解释运行，边解释边执行，无需预先编译\" class=\"headerlink\" title=\"JavaScript是解释型脚本语言，通过解释运行，边解释边执行，无需预先编译\"></a>JavaScript是解释型脚本语言，通过解释运行，边解释边执行，无需预先编译</h4><ul>\n<li><p>解释型：把字符串当代码来执行<br>JavaScriptCore是一种JavaScript引擎，提供解释器环境<br>能够“读懂”JavaScript代码，对 JavaScript 代码进行解释执行</p>\n<p>  主要为webkit提供脚本处理能力，可以将JavaScript的能力更轻便地、高性能地带给原生的iOS应用<br>可以实现OC和JavaScript两种语言的互转</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">•\tJSContext     \t\t为JavaScript提供运行环境 </span><br><span class=\"line\">•\tJSValue        \t\t是JavaScript和Object-C之间互换的桥梁,方法调用和参数数据互相转换都是它</span><br><span class=\"line\">•\tJSManagedValue    \t为开发人员提供对象内存管理 </span><br><span class=\"line\">•\tJSVirtualMachine  \t为JavaScript的运行提供了底层资源 </span><br><span class=\"line\">•\tJSExport         \t作为JavaScript和Objective-C两种语言的互通协议</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>通过JavaScriptCore，Objective-C和JavaScript可以实现bridge通信，包括<ol>\n<li>参数转换<br><img src=\"/images/hotfix_5.png\" alt=\"\"></li>\n<li>方法互通互调<br>即，oc实现的方法，可以通过js去调用；js实现的方法，可以通过oc去调用</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"源码分析-JSPatch\"><a href=\"#源码分析-JSPatch\" class=\"headerlink\" title=\"源码分析(JSPatch)\"></a>源码分析(JSPatch)</h3><p><img src=\"/images/hotfix-001.png\" alt=\"\"><br><img src=\"/images/hotfix-002.png\" alt=\"\"><br><img src=\"/images/hotfix-003.png\" alt=\"\"><br><img src=\"/images/hotfix-004.png\" alt=\"\"><br><img src=\"/images/hotfix-005.png\" alt=\"\"><br><img src=\"/images/hotfix-006.png\" alt=\"\"><br><img src=\"/images/hotfix-007.png\" alt=\"\"><br><img src=\"/images/hotfix-008.png\" alt=\"\"><br><img src=\"/images/hotfix-009.png\" alt=\"\"><br><img src=\"/images/hotfix-010.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p>介绍下ios平台实现的热修复</p>","more":"<h3 id=\"概念解释\"><a href=\"#概念解释\" class=\"headerlink\" title=\"概念解释\"></a>概念解释</h3><ul>\n<li><p>热修复(也称热补丁、热修复补丁 英文 : hotfix)</p>\n<p><code>(通过接口)动态下发代码(文件)，通过热修复引擎运行下发的代码，达到更改运行中的程序结构</code></p>\n</li>\n<li><p>应用场景</p>\n<ol>\n<li><code>时效性需求</code>，即a、不发版的情况下实时修复bug,用户无感知；b、及时应对一些来自各方面的不确定性情况</li>\n<li><code>控制线上代码需求</code>，比如a、绕开apple审核，做apple不让做的内容；b、一些特殊需要，调用apple禁止的API</li>\n</ol>\n</li>\n<li><p>潜在危险</p>\n<ol>\n<li>程序不可控(因为通过热修复可以调用和替换任意 OC 方法)</li>\n<li>生态不安全</li>\n</ol>\n</li>\n<li><p>业界方案<br><img src=\"/images/hotfix_1.png\" alt=\"\"></p>\n</li>\n</ul>\n<h3 id=\"使用流程\"><a href=\"#使用流程\" class=\"headerlink\" title=\"使用流程\"></a>使用流程</h3><p>server服务器端使用流程<br><img src=\"/images/hotfix_2.png\" alt=\"\"></p>\n<p>app端使用流程<br><img src=\"/images/hotfix_3.png\" alt=\"\"></p>\n<h3 id=\"原理概述\"><a href=\"#原理概述\" class=\"headerlink\" title=\"原理概述\"></a>原理概述</h3><h4 id=\"Objective-C是动态语言，通过Objective-C-Runtime在运行时可以进行如下操作\"><a href=\"#Objective-C是动态语言，通过Objective-C-Runtime在运行时可以进行如下操作\" class=\"headerlink\" title=\"Objective-C是动态语言，通过Objective-C Runtime在运行时可以进行如下操作\"></a>Objective-C是动态语言，通过Objective-C Runtime在运行时可以进行如下操作</h4><ul>\n<li><p>对类class可以进行<code>查找类</code>、<code>添加类</code>、<code>删除类</code>、<code>给类添加变量</code>、<code>给类添加方法</code>、<code>类名字符串反射到类</code> 等操作，也就是说 <code>通过字符串可以操作类</code></p>\n<p>  比如如下API都是操作类的方法：<code>super_class</code>、<code>class_name</code>、<code>class_var_list</code>、<code>class_method_list</code>、<code>class_protocol_list</code>、<code>class_info</code>、<code>class_isa</code></p>\n</li>\n<li><p>对变量variable可以进行<code>添加变量</code>、<code>获取变量类型/值</code>、<code>更改变量类型/值</code>、<code>查找变量</code>、<code>变量名字符串反射到变量</code> 等操作，也就是说 <code>通过字符串可以操作变量</code></p>\n<p>  比如如下API都是操作变量的方法：<code>var_name</code>、<code>var_value</code>、<code>var_type</code></p>\n</li>\n<li><p>对方法method可以进行<code>查找方法</code>、<code>获取方法</code>、<code>添加方法</code>、<code>判断方法是否存在</code>、<code>更改、替换方法实现hook</code>、<code>方法名字符串反射到方法</code> 等操作，也就是说 <code>通过字符串可以操作方法</code></p>\n<p> 比如如下API都是操作方法的方法：<code>method_name</code>、<code>method_imp</code>、<code>method_type</code></p>\n</li>\n<li><p>对方法method进行调用,可从<code>target</code>、<code>method</code>、<code>argumentValue、returnValue</code>等方法组成部分进行拼装，可以使用</p>\n<ol>\n<li>显示调用 []</li>\n<li>隐士调用，如<code>performSelector</code>、<code>NSInvocation</code>、<code>objc_msgSend()</code></li>\n</ol>\n<p>通过以上调用操作，也就是说 <code>通过字符串可以操作调用方法</code></p>\n</li>\n<li><p>对方法进行消息转发操作</p>\n</li>\n</ul>\n<p><img src=\"/images/hotfix_4.png\" alt=\"\"></p>\n<p>通过字符串按照一定的约定规则，进行识别转换，可以调用和替换OC方法，达到更改程序结构的目的</p>\n<h4 id=\"JavaScript是解释型脚本语言，通过解释运行，边解释边执行，无需预先编译\"><a href=\"#JavaScript是解释型脚本语言，通过解释运行，边解释边执行，无需预先编译\" class=\"headerlink\" title=\"JavaScript是解释型脚本语言，通过解释运行，边解释边执行，无需预先编译\"></a>JavaScript是解释型脚本语言，通过解释运行，边解释边执行，无需预先编译</h4><ul>\n<li><p>解释型：把字符串当代码来执行<br>JavaScriptCore是一种JavaScript引擎，提供解释器环境<br>能够“读懂”JavaScript代码，对 JavaScript 代码进行解释执行</p>\n<p>  主要为webkit提供脚本处理能力，可以将JavaScript的能力更轻便地、高性能地带给原生的iOS应用<br>可以实现OC和JavaScript两种语言的互转</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">•\tJSContext     \t\t为JavaScript提供运行环境 </span><br><span class=\"line\">•\tJSValue        \t\t是JavaScript和Object-C之间互换的桥梁,方法调用和参数数据互相转换都是它</span><br><span class=\"line\">•\tJSManagedValue    \t为开发人员提供对象内存管理 </span><br><span class=\"line\">•\tJSVirtualMachine  \t为JavaScript的运行提供了底层资源 </span><br><span class=\"line\">•\tJSExport         \t作为JavaScript和Objective-C两种语言的互通协议</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>通过JavaScriptCore，Objective-C和JavaScript可以实现bridge通信，包括<ol>\n<li>参数转换<br><img src=\"/images/hotfix_5.png\" alt=\"\"></li>\n<li>方法互通互调<br>即，oc实现的方法，可以通过js去调用；js实现的方法，可以通过oc去调用</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"源码分析-JSPatch\"><a href=\"#源码分析-JSPatch\" class=\"headerlink\" title=\"源码分析(JSPatch)\"></a>源码分析(JSPatch)</h3><p><img src=\"/images/hotfix-001.png\" alt=\"\"><br><img src=\"/images/hotfix-002.png\" alt=\"\"><br><img src=\"/images/hotfix-003.png\" alt=\"\"><br><img src=\"/images/hotfix-004.png\" alt=\"\"><br><img src=\"/images/hotfix-005.png\" alt=\"\"><br><img src=\"/images/hotfix-006.png\" alt=\"\"><br><img src=\"/images/hotfix-007.png\" alt=\"\"><br><img src=\"/images/hotfix-008.png\" alt=\"\"><br><img src=\"/images/hotfix-009.png\" alt=\"\"><br><img src=\"/images/hotfix-010.png\" alt=\"\"></p>"},{"title":"iOS的RunLoop简介","date":"2018-05-22T07:20:25.000Z","comments":1,"_content":"\n简单介绍下iOS的RunLoop\n\n<!-- more -->\n\n### who\nrunloop 是线程的基础设施，是线程的一部分，有一定的监听的功能\n\n### what\nEach NSThread object, including the application’s main thread, has an NSRunLoop object automatically created for it as needed.\n\n### why\nAn NSRunLoopobject processes input sources such as mouse and keyboard events from the window system,NSTimer events, NSPort objects, and NSConnection objects. \n\n### how\ndo{} while()  \n\nmode : `NSDefaultRunLoopMode`、`NSRunLoopCommonModes`、`NSEventTrackingRunLoopMode`\n\n例子 : 定时器add到defaultMode上，scroll会导致mode切到trackingMode，这样定时器就暂停了\nNSURLConnection 下载的时候，要开启runLoop\n\n`CFRunLoop` 是线程安全的，`NSRunLoop` 是线程不安全的\n\n![](/images/runloop.png)\n\n","source":"_posts/runloop.md","raw":"---\ntitle: \"iOS的RunLoop简介\"\ndate: 2018-05-22 15:20:25 +0800\ncomments: true\ntags:\n- iOS\n- RunLoop\ncategories:\n- [iOS]\n- [RunLoop]\n---\n\n简单介绍下iOS的RunLoop\n\n<!-- more -->\n\n### who\nrunloop 是线程的基础设施，是线程的一部分，有一定的监听的功能\n\n### what\nEach NSThread object, including the application’s main thread, has an NSRunLoop object automatically created for it as needed.\n\n### why\nAn NSRunLoopobject processes input sources such as mouse and keyboard events from the window system,NSTimer events, NSPort objects, and NSConnection objects. \n\n### how\ndo{} while()  \n\nmode : `NSDefaultRunLoopMode`、`NSRunLoopCommonModes`、`NSEventTrackingRunLoopMode`\n\n例子 : 定时器add到defaultMode上，scroll会导致mode切到trackingMode，这样定时器就暂停了\nNSURLConnection 下载的时候，要开启runLoop\n\n`CFRunLoop` 是线程安全的，`NSRunLoop` 是线程不安全的\n\n![](/images/runloop.png)\n\n","slug":"runloop","published":1,"updated":"2020-06-23T08:31:54.364Z","layout":"post","photos":[],"link":"","_id":"ckbszw79n0003l73j7apbcn2m","content":"<p>简单介绍下iOS的RunLoop</p>\n<a id=\"more\"></a>\n\n<h3 id=\"who\"><a href=\"#who\" class=\"headerlink\" title=\"who\"></a>who</h3><p>runloop 是线程的基础设施，是线程的一部分，有一定的监听的功能</p>\n<h3 id=\"what\"><a href=\"#what\" class=\"headerlink\" title=\"what\"></a>what</h3><p>Each NSThread object, including the application’s main thread, has an NSRunLoop object automatically created for it as needed.</p>\n<h3 id=\"why\"><a href=\"#why\" class=\"headerlink\" title=\"why\"></a>why</h3><p>An NSRunLoopobject processes input sources such as mouse and keyboard events from the window system,NSTimer events, NSPort objects, and NSConnection objects. </p>\n<h3 id=\"how\"><a href=\"#how\" class=\"headerlink\" title=\"how\"></a>how</h3><p>do{} while()  </p>\n<p>mode : <code>NSDefaultRunLoopMode</code>、<code>NSRunLoopCommonModes</code>、<code>NSEventTrackingRunLoopMode</code></p>\n<p>例子 : 定时器add到defaultMode上，scroll会导致mode切到trackingMode，这样定时器就暂停了<br>NSURLConnection 下载的时候，要开启runLoop</p>\n<p><code>CFRunLoop</code> 是线程安全的，<code>NSRunLoop</code> 是线程不安全的</p>\n<p><img src=\"/images/runloop.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p>简单介绍下iOS的RunLoop</p>","more":"<h3 id=\"who\"><a href=\"#who\" class=\"headerlink\" title=\"who\"></a>who</h3><p>runloop 是线程的基础设施，是线程的一部分，有一定的监听的功能</p>\n<h3 id=\"what\"><a href=\"#what\" class=\"headerlink\" title=\"what\"></a>what</h3><p>Each NSThread object, including the application’s main thread, has an NSRunLoop object automatically created for it as needed.</p>\n<h3 id=\"why\"><a href=\"#why\" class=\"headerlink\" title=\"why\"></a>why</h3><p>An NSRunLoopobject processes input sources such as mouse and keyboard events from the window system,NSTimer events, NSPort objects, and NSConnection objects. </p>\n<h3 id=\"how\"><a href=\"#how\" class=\"headerlink\" title=\"how\"></a>how</h3><p>do{} while()  </p>\n<p>mode : <code>NSDefaultRunLoopMode</code>、<code>NSRunLoopCommonModes</code>、<code>NSEventTrackingRunLoopMode</code></p>\n<p>例子 : 定时器add到defaultMode上，scroll会导致mode切到trackingMode，这样定时器就暂停了<br>NSURLConnection 下载的时候，要开启runLoop</p>\n<p><code>CFRunLoop</code> 是线程安全的，<code>NSRunLoop</code> 是线程不安全的</p>\n<p><img src=\"/images/runloop.png\" alt=\"\"></p>"},{"title":"iOS工程组件化过程中的资源文件处理","date":"2019-02-20T07:10:05.000Z","comments":1,"_content":"\n介绍下ios开发时候工程组件化过程中的资源文件处理\n\n<!-- more -->\n\n###资源文件都有哪些,以下为举例\n\n* .png  \n* .xib  \n* .nib  \n* .bundle \n* .model\n* .storyboard\n\n###UIImage api给出的推荐方式\n\n```objc\nimageNamed: 一个资源文件的名字\n\nimageNamed:  inBundle: 指定资源文件所在的bundle\n\nimageWithContentsOfFile: 指定资源文件的绝对路径\n\nimageWithData:资源文件的二进制数据\n```\n\n###spec.resources 和 spec.resource_bundle 区别\n\n```objc\nspec.resources就是把资源文件原封不动的放到工程结构下\n\nspec.resource_bundle 就是把资源文件统一捆绑打包成bundle形式的文件资源包放到工程结构下\n```\n\n###资源文件处理方式\n\n1. 使用data形式的资源文件，比如如果是image，可以将资源文件生成二进制，把其二进制data放到代码里面，使用imageWithData方式获取，缺点是可读性差些，因为资源文件使用的时候路径寻址方式，做的不够好\n\n2. 资源文件裸露在工程下，不放在xcasset里面，那么在ipa包里面是裸露放在根目录下，可以直接使用，缺点是没法统一管理\n\n3. 资源文件如果是放在xcasset下，那么在podspec里使用resource命令也没有将资源文件放到根目录的asset.car下，需要使用resource_bundle将其放到bundle下，在代码里指定更改获取资源的路径UIImage imageWithName inBundle 指定bundle资源文件\n\n是否使用use_framework!会对resource的物理路径造成不一样的结果，这个时候解决方法\n\n可以人工更改获取资源文件的bundle的路径，让它同时支持是否使用use_framework!两种状态下的资源路径\n\n也可以将资源文件放回根目录下，比如可以将功能模块拆分为2个子库，一个是代码库，一个是资源库，资源库的podspec里面设置成静态framework ( .static_library = true ) ，这样的话静态framework的话cocoapod会把其资源文件放在ipa包的根目录下，动态framework才会把资源文件嵌到framework里面","source":"_posts/cocoa-image-resource.md","raw":"---\ntitle: \"iOS工程组件化过程中的资源文件处理\"\ndate: 2019-02-20 15:10:05 +0800\ncomments: true\ntags:\n- 组件化\n- 资源文件\ncategories:\n- [组件化]\n- [资源文件]\n---\n\n介绍下ios开发时候工程组件化过程中的资源文件处理\n\n<!-- more -->\n\n###资源文件都有哪些,以下为举例\n\n* .png  \n* .xib  \n* .nib  \n* .bundle \n* .model\n* .storyboard\n\n###UIImage api给出的推荐方式\n\n```objc\nimageNamed: 一个资源文件的名字\n\nimageNamed:  inBundle: 指定资源文件所在的bundle\n\nimageWithContentsOfFile: 指定资源文件的绝对路径\n\nimageWithData:资源文件的二进制数据\n```\n\n###spec.resources 和 spec.resource_bundle 区别\n\n```objc\nspec.resources就是把资源文件原封不动的放到工程结构下\n\nspec.resource_bundle 就是把资源文件统一捆绑打包成bundle形式的文件资源包放到工程结构下\n```\n\n###资源文件处理方式\n\n1. 使用data形式的资源文件，比如如果是image，可以将资源文件生成二进制，把其二进制data放到代码里面，使用imageWithData方式获取，缺点是可读性差些，因为资源文件使用的时候路径寻址方式，做的不够好\n\n2. 资源文件裸露在工程下，不放在xcasset里面，那么在ipa包里面是裸露放在根目录下，可以直接使用，缺点是没法统一管理\n\n3. 资源文件如果是放在xcasset下，那么在podspec里使用resource命令也没有将资源文件放到根目录的asset.car下，需要使用resource_bundle将其放到bundle下，在代码里指定更改获取资源的路径UIImage imageWithName inBundle 指定bundle资源文件\n\n是否使用use_framework!会对resource的物理路径造成不一样的结果，这个时候解决方法\n\n可以人工更改获取资源文件的bundle的路径，让它同时支持是否使用use_framework!两种状态下的资源路径\n\n也可以将资源文件放回根目录下，比如可以将功能模块拆分为2个子库，一个是代码库，一个是资源库，资源库的podspec里面设置成静态framework ( .static_library = true ) ，这样的话静态framework的话cocoapod会把其资源文件放在ipa包的根目录下，动态framework才会把资源文件嵌到framework里面","slug":"cocoa-image-resource","published":1,"updated":"2020-06-27T08:53:56.220Z","layout":"post","photos":[],"link":"","_id":"ckbxmgp8n0000ty3jack2bgjw","content":"<p>介绍下ios开发时候工程组件化过程中的资源文件处理</p>\n<a id=\"more\"></a>\n\n<p>###资源文件都有哪些,以下为举例</p>\n<ul>\n<li>.png  </li>\n<li>.xib  </li>\n<li>.nib  </li>\n<li>.bundle </li>\n<li>.model</li>\n<li>.storyboard</li>\n</ul>\n<p>###UIImage api给出的推荐方式</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imageNamed: 一个资源文件的名字</span><br><span class=\"line\"></span><br><span class=\"line\">imageNamed:  inBundle: 指定资源文件所在的bundle</span><br><span class=\"line\"></span><br><span class=\"line\">imageWithContentsOfFile: 指定资源文件的绝对路径</span><br><span class=\"line\"></span><br><span class=\"line\">imageWithData:资源文件的二进制数据</span><br></pre></td></tr></table></figure>\n\n<p>###spec.resources 和 spec.resource_bundle 区别</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spec.resources就是把资源文件原封不动的放到工程结构下</span><br><span class=\"line\"></span><br><span class=\"line\">spec.resource_bundle 就是把资源文件统一捆绑打包成bundle形式的文件资源包放到工程结构下</span><br></pre></td></tr></table></figure>\n\n<p>###资源文件处理方式</p>\n<ol>\n<li><p>使用data形式的资源文件，比如如果是image，可以将资源文件生成二进制，把其二进制data放到代码里面，使用imageWithData方式获取，缺点是可读性差些，因为资源文件使用的时候路径寻址方式，做的不够好</p>\n</li>\n<li><p>资源文件裸露在工程下，不放在xcasset里面，那么在ipa包里面是裸露放在根目录下，可以直接使用，缺点是没法统一管理</p>\n</li>\n<li><p>资源文件如果是放在xcasset下，那么在podspec里使用resource命令也没有将资源文件放到根目录的asset.car下，需要使用resource_bundle将其放到bundle下，在代码里指定更改获取资源的路径UIImage imageWithName inBundle 指定bundle资源文件</p>\n</li>\n</ol>\n<p>是否使用use_framework!会对resource的物理路径造成不一样的结果，这个时候解决方法</p>\n<p>可以人工更改获取资源文件的bundle的路径，让它同时支持是否使用use_framework!两种状态下的资源路径</p>\n<p>也可以将资源文件放回根目录下，比如可以将功能模块拆分为2个子库，一个是代码库，一个是资源库，资源库的podspec里面设置成静态framework ( .static_library = true ) ，这样的话静态framework的话cocoapod会把其资源文件放在ipa包的根目录下，动态framework才会把资源文件嵌到framework里面</p>\n","site":{"data":{}},"excerpt":"<p>介绍下ios开发时候工程组件化过程中的资源文件处理</p>","more":"<p>###资源文件都有哪些,以下为举例</p>\n<ul>\n<li>.png  </li>\n<li>.xib  </li>\n<li>.nib  </li>\n<li>.bundle </li>\n<li>.model</li>\n<li>.storyboard</li>\n</ul>\n<p>###UIImage api给出的推荐方式</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imageNamed: 一个资源文件的名字</span><br><span class=\"line\"></span><br><span class=\"line\">imageNamed:  inBundle: 指定资源文件所在的bundle</span><br><span class=\"line\"></span><br><span class=\"line\">imageWithContentsOfFile: 指定资源文件的绝对路径</span><br><span class=\"line\"></span><br><span class=\"line\">imageWithData:资源文件的二进制数据</span><br></pre></td></tr></table></figure>\n\n<p>###spec.resources 和 spec.resource_bundle 区别</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spec.resources就是把资源文件原封不动的放到工程结构下</span><br><span class=\"line\"></span><br><span class=\"line\">spec.resource_bundle 就是把资源文件统一捆绑打包成bundle形式的文件资源包放到工程结构下</span><br></pre></td></tr></table></figure>\n\n<p>###资源文件处理方式</p>\n<ol>\n<li><p>使用data形式的资源文件，比如如果是image，可以将资源文件生成二进制，把其二进制data放到代码里面，使用imageWithData方式获取，缺点是可读性差些，因为资源文件使用的时候路径寻址方式，做的不够好</p>\n</li>\n<li><p>资源文件裸露在工程下，不放在xcasset里面，那么在ipa包里面是裸露放在根目录下，可以直接使用，缺点是没法统一管理</p>\n</li>\n<li><p>资源文件如果是放在xcasset下，那么在podspec里使用resource命令也没有将资源文件放到根目录的asset.car下，需要使用resource_bundle将其放到bundle下，在代码里指定更改获取资源的路径UIImage imageWithName inBundle 指定bundle资源文件</p>\n</li>\n</ol>\n<p>是否使用use_framework!会对resource的物理路径造成不一样的结果，这个时候解决方法</p>\n<p>可以人工更改获取资源文件的bundle的路径，让它同时支持是否使用use_framework!两种状态下的资源路径</p>\n<p>也可以将资源文件放回根目录下，比如可以将功能模块拆分为2个子库，一个是代码库，一个是资源库，资源库的podspec里面设置成静态framework ( .static_library = true ) ，这样的话静态framework的话cocoapod会把其资源文件放在ipa包的根目录下，动态framework才会把资源文件嵌到framework里面</p>"},{"title":"iOS app 开发模式","date":"2017-01-14T03:31:10.000Z","comments":1,"_content":"\n简单介绍下ios开发过程中app开发模式\n\n<!-- more -->\n\n1. native app\n\n2. web app\n\n3. Web Hybrid App\n\n4. React Native App、Weex app\n\n5. JSPatch vs wax vs rollout\n\n6. flutter\n\n","source":"_posts/app开发模式.md","raw":"---\ntitle: \"iOS app 开发模式\"\ndate: 2017-01-14 11:31:10 +0800\ncomments: true\ntags:\n- app\n- 开发模式\ncategories:\n- [app]\n- [开发模式]\n---\n\n简单介绍下ios开发过程中app开发模式\n\n<!-- more -->\n\n1. native app\n\n2. web app\n\n3. Web Hybrid App\n\n4. React Native App、Weex app\n\n5. JSPatch vs wax vs rollout\n\n6. flutter\n\n","slug":"app开发模式","published":1,"updated":"2020-06-28T10:27:42.641Z","_id":"ckbxmgp8t0001ty3j76769qjt","layout":"post","photos":[],"link":"","content":"<p>简单介绍下ios开发过程中app开发模式</p>\n<a id=\"more\"></a>\n\n<ol>\n<li><p>native app</p>\n</li>\n<li><p>web app</p>\n</li>\n<li><p>Web Hybrid App</p>\n</li>\n<li><p>React Native App、Weex app</p>\n</li>\n<li><p>JSPatch vs wax vs rollout</p>\n</li>\n<li><p>flutter</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>简单介绍下ios开发过程中app开发模式</p>","more":"<ol>\n<li><p>native app</p>\n</li>\n<li><p>web app</p>\n</li>\n<li><p>Web Hybrid App</p>\n</li>\n<li><p>React Native App、Weex app</p>\n</li>\n<li><p>JSPatch vs wax vs rollout</p>\n</li>\n<li><p>flutter</p>\n</li>\n</ol>"},{"title":"Jenkins平台介绍","date":"2019-10-20T01:21:03.000Z","comments":1,"_content":"\n介绍下Jenkins平台，平时经常都会用到\n\n<!-- more -->\n\n###Jenkins介绍\n\n一款由Java编写的持续集成工具\n\n<https://jenkins.io/zh/>\n\n<https://zh.wikipedia.org/wiki/Jenkins_(%E8%BD%AF%E4%BB%B6)>\n\n###Jenkins安装\n\n当前用户下，用war方式安装\n\n下载war包文件 (https://jenkins.io/zh/doc/book/installing/  -> WAR文件 -> http://mirrors.jenkins.io/war-stable/latest/jenkins.war)\n\n！！注意，千万不要用dmg、pkg等图形化方式安装，这会导致生成一个Jenkins用户，和当前用户并列，这个Jenkins用户权限很小，很多文件访问不了，其内部也是通过 java -jar jenkins.war —httpPort=9000方式开启的Jenkins服务,可参考library/Application Support/Jenkins/jenkins-runner.sh，这种安装方式坑太多\n\n###Jenkins服务启动\n\njava -jar /Users/liu/desktop/jenkins.war --httpPort=9000\n\n###Jenkins配置、使用\n\n![](/images/jenkins-1.png)\n\n配置过程中，支持execute shell脚本、支持文件夹分组、支持参数化构建\n\n###Jenkins支持设置远程节点\n\n因为iOS打包只能使用Mac电脑，所以一般电脑都是放公司，在内网下才能访问，没有固定IP，也没有对外域名，很不方便，导致Jenkins经常访问不了，所以需要 通过反向代理方式，将此Mac电脑的Jenkins服务可以通过外网的Jenkins访问到\n\n一个远程可以外网访问的Jenkins，一个联网但只有内网IP的Mac Jenkins，需要把后者 通过节点的形式 连到 外网Jenkins上，也就是 内网的Jenkins作为 外网Jenkins的 slave，外网Jenkins 是 内网Jenkins的 agent\n\n1. master Jenkins 新建 支持 slave Jenkins的 节点\n\n![](/images/jenkins-2.png)\n\n2. 在 slave Jenkins 上 运行脚本文件\n\njava -jar agent.jar -jnlpUrl http://ip:8080/computer/rdmac/slave-agent.jnlp // ip 为 master jenkins 的IP\n\n脚本运行正常后，代表 节点开启成功，可以去 master Jenkins的 节点管理里面查看 节点的状态是否 agent is connected\n\n3. 在 master Jenkins 上 新建 item，该配置的都配置下\n\nRestrict where this project can be run 选项，打对勾，label expression 里面 写 节点的 label\n\n至此，远程节点配置完成\n\n\n\n","source":"_posts/Jenkins.md","raw":"---\ntitle: \"Jenkins平台介绍\"\ndate: 2019-10-20 9:21:03 +0800\ncomments: true\ntags:\n- Jenkins\ncategories:\n- [Jenkins]\n---\n\n介绍下Jenkins平台，平时经常都会用到\n\n<!-- more -->\n\n###Jenkins介绍\n\n一款由Java编写的持续集成工具\n\n<https://jenkins.io/zh/>\n\n<https://zh.wikipedia.org/wiki/Jenkins_(%E8%BD%AF%E4%BB%B6)>\n\n###Jenkins安装\n\n当前用户下，用war方式安装\n\n下载war包文件 (https://jenkins.io/zh/doc/book/installing/  -> WAR文件 -> http://mirrors.jenkins.io/war-stable/latest/jenkins.war)\n\n！！注意，千万不要用dmg、pkg等图形化方式安装，这会导致生成一个Jenkins用户，和当前用户并列，这个Jenkins用户权限很小，很多文件访问不了，其内部也是通过 java -jar jenkins.war —httpPort=9000方式开启的Jenkins服务,可参考library/Application Support/Jenkins/jenkins-runner.sh，这种安装方式坑太多\n\n###Jenkins服务启动\n\njava -jar /Users/liu/desktop/jenkins.war --httpPort=9000\n\n###Jenkins配置、使用\n\n![](/images/jenkins-1.png)\n\n配置过程中，支持execute shell脚本、支持文件夹分组、支持参数化构建\n\n###Jenkins支持设置远程节点\n\n因为iOS打包只能使用Mac电脑，所以一般电脑都是放公司，在内网下才能访问，没有固定IP，也没有对外域名，很不方便，导致Jenkins经常访问不了，所以需要 通过反向代理方式，将此Mac电脑的Jenkins服务可以通过外网的Jenkins访问到\n\n一个远程可以外网访问的Jenkins，一个联网但只有内网IP的Mac Jenkins，需要把后者 通过节点的形式 连到 外网Jenkins上，也就是 内网的Jenkins作为 外网Jenkins的 slave，外网Jenkins 是 内网Jenkins的 agent\n\n1. master Jenkins 新建 支持 slave Jenkins的 节点\n\n![](/images/jenkins-2.png)\n\n2. 在 slave Jenkins 上 运行脚本文件\n\njava -jar agent.jar -jnlpUrl http://ip:8080/computer/rdmac/slave-agent.jnlp // ip 为 master jenkins 的IP\n\n脚本运行正常后，代表 节点开启成功，可以去 master Jenkins的 节点管理里面查看 节点的状态是否 agent is connected\n\n3. 在 master Jenkins 上 新建 item，该配置的都配置下\n\nRestrict where this project can be run 选项，打对勾，label expression 里面 写 节点的 label\n\n至此，远程节点配置完成\n\n\n\n","slug":"Jenkins","published":1,"updated":"2020-06-28T09:48:09.432Z","_id":"ckbxmgp900003ty3jen8pdigx","layout":"post","photos":[],"link":"","content":"<p>介绍下Jenkins平台，平时经常都会用到</p>\n<a id=\"more\"></a>\n\n<p>###Jenkins介绍</p>\n<p>一款由Java编写的持续集成工具</p>\n<p><a href=\"https://jenkins.io/zh/\" target=\"_blank\" rel=\"noopener\">https://jenkins.io/zh/</a></p>\n<p><a href=\"https://zh.wikipedia.org/wiki/Jenkins_(%E8%BD%AF%E4%BB%B6)\" target=\"_blank\" rel=\"noopener\">https://zh.wikipedia.org/wiki/Jenkins_(%E8%BD%AF%E4%BB%B6)</a></p>\n<p>###Jenkins安装</p>\n<p>当前用户下，用war方式安装</p>\n<p>下载war包文件 (<a href=\"https://jenkins.io/zh/doc/book/installing/\" target=\"_blank\" rel=\"noopener\">https://jenkins.io/zh/doc/book/installing/</a>  -&gt; WAR文件 -&gt; <a href=\"http://mirrors.jenkins.io/war-stable/latest/jenkins.war\" target=\"_blank\" rel=\"noopener\">http://mirrors.jenkins.io/war-stable/latest/jenkins.war</a>)</p>\n<p>！！注意，千万不要用dmg、pkg等图形化方式安装，这会导致生成一个Jenkins用户，和当前用户并列，这个Jenkins用户权限很小，很多文件访问不了，其内部也是通过 java -jar jenkins.war —httpPort=9000方式开启的Jenkins服务,可参考library/Application Support/Jenkins/jenkins-runner.sh，这种安装方式坑太多</p>\n<p>###Jenkins服务启动</p>\n<p>java -jar /Users/liu/desktop/jenkins.war –httpPort=9000</p>\n<p>###Jenkins配置、使用</p>\n<p><img src=\"/images/jenkins-1.png\" alt=\"\"></p>\n<p>配置过程中，支持execute shell脚本、支持文件夹分组、支持参数化构建</p>\n<p>###Jenkins支持设置远程节点</p>\n<p>因为iOS打包只能使用Mac电脑，所以一般电脑都是放公司，在内网下才能访问，没有固定IP，也没有对外域名，很不方便，导致Jenkins经常访问不了，所以需要 通过反向代理方式，将此Mac电脑的Jenkins服务可以通过外网的Jenkins访问到</p>\n<p>一个远程可以外网访问的Jenkins，一个联网但只有内网IP的Mac Jenkins，需要把后者 通过节点的形式 连到 外网Jenkins上，也就是 内网的Jenkins作为 外网Jenkins的 slave，外网Jenkins 是 内网Jenkins的 agent</p>\n<ol>\n<li>master Jenkins 新建 支持 slave Jenkins的 节点</li>\n</ol>\n<p><img src=\"/images/jenkins-2.png\" alt=\"\"></p>\n<ol start=\"2\">\n<li>在 slave Jenkins 上 运行脚本文件</li>\n</ol>\n<p>java -jar agent.jar -jnlpUrl <a href=\"http://ip:8080/computer/rdmac/slave-agent.jnlp\" target=\"_blank\" rel=\"noopener\">http://ip:8080/computer/rdmac/slave-agent.jnlp</a> // ip 为 master jenkins 的IP</p>\n<p>脚本运行正常后，代表 节点开启成功，可以去 master Jenkins的 节点管理里面查看 节点的状态是否 agent is connected</p>\n<ol start=\"3\">\n<li>在 master Jenkins 上 新建 item，该配置的都配置下</li>\n</ol>\n<p>Restrict where this project can be run 选项，打对勾，label expression 里面 写 节点的 label</p>\n<p>至此，远程节点配置完成</p>\n","site":{"data":{}},"excerpt":"<p>介绍下Jenkins平台，平时经常都会用到</p>","more":"<p>###Jenkins介绍</p>\n<p>一款由Java编写的持续集成工具</p>\n<p><a href=\"https://jenkins.io/zh/\" target=\"_blank\" rel=\"noopener\">https://jenkins.io/zh/</a></p>\n<p><a href=\"https://zh.wikipedia.org/wiki/Jenkins_(%E8%BD%AF%E4%BB%B6)\" target=\"_blank\" rel=\"noopener\">https://zh.wikipedia.org/wiki/Jenkins_(%E8%BD%AF%E4%BB%B6)</a></p>\n<p>###Jenkins安装</p>\n<p>当前用户下，用war方式安装</p>\n<p>下载war包文件 (<a href=\"https://jenkins.io/zh/doc/book/installing/\" target=\"_blank\" rel=\"noopener\">https://jenkins.io/zh/doc/book/installing/</a>  -&gt; WAR文件 -&gt; <a href=\"http://mirrors.jenkins.io/war-stable/latest/jenkins.war\" target=\"_blank\" rel=\"noopener\">http://mirrors.jenkins.io/war-stable/latest/jenkins.war</a>)</p>\n<p>！！注意，千万不要用dmg、pkg等图形化方式安装，这会导致生成一个Jenkins用户，和当前用户并列，这个Jenkins用户权限很小，很多文件访问不了，其内部也是通过 java -jar jenkins.war —httpPort=9000方式开启的Jenkins服务,可参考library/Application Support/Jenkins/jenkins-runner.sh，这种安装方式坑太多</p>\n<p>###Jenkins服务启动</p>\n<p>java -jar /Users/liu/desktop/jenkins.war –httpPort=9000</p>\n<p>###Jenkins配置、使用</p>\n<p><img src=\"/images/jenkins-1.png\" alt=\"\"></p>\n<p>配置过程中，支持execute shell脚本、支持文件夹分组、支持参数化构建</p>\n<p>###Jenkins支持设置远程节点</p>\n<p>因为iOS打包只能使用Mac电脑，所以一般电脑都是放公司，在内网下才能访问，没有固定IP，也没有对外域名，很不方便，导致Jenkins经常访问不了，所以需要 通过反向代理方式，将此Mac电脑的Jenkins服务可以通过外网的Jenkins访问到</p>\n<p>一个远程可以外网访问的Jenkins，一个联网但只有内网IP的Mac Jenkins，需要把后者 通过节点的形式 连到 外网Jenkins上，也就是 内网的Jenkins作为 外网Jenkins的 slave，外网Jenkins 是 内网Jenkins的 agent</p>\n<ol>\n<li>master Jenkins 新建 支持 slave Jenkins的 节点</li>\n</ol>\n<p><img src=\"/images/jenkins-2.png\" alt=\"\"></p>\n<ol start=\"2\">\n<li>在 slave Jenkins 上 运行脚本文件</li>\n</ol>\n<p>java -jar agent.jar -jnlpUrl <a href=\"http://ip:8080/computer/rdmac/slave-agent.jnlp\" target=\"_blank\" rel=\"noopener\">http://ip:8080/computer/rdmac/slave-agent.jnlp</a> // ip 为 master jenkins 的IP</p>\n<p>脚本运行正常后，代表 节点开启成功，可以去 master Jenkins的 节点管理里面查看 节点的状态是否 agent is connected</p>\n<ol start=\"3\">\n<li>在 master Jenkins 上 新建 item，该配置的都配置下</li>\n</ol>\n<p>Restrict where this project can be run 选项，打对勾，label expression 里面 写 节点的 label</p>\n<p>至此，远程节点配置完成</p>"},{"title":"常见的编程方式","date":"2018-07-22T03:31:32.000Z","comments":1,"_content":"\n介绍下开发过程中常见的编程方式\n\n<!-- more -->\n\n### 编程方式\n\n* AOP \n\t\n\tAOP 通过预编译方式和运行期动态代理实现在不修改源代码的情况下给程序动态统一添加功能的一种技术\n\t\n\t设计模式孜孜不倦追求的是调用者和被调用者之间的解耦,提高代码的灵活性和可扩展性，AOP可以说也是这种目标的一种实现。\n\n\tAOP则是针对业务处理过程中的切面进行提取，它所面对的是处理过程中的某个步骤或阶段，以获得逻辑过程中各部分之间低耦合性的隔离效果\n\t\n* OOP \n\t\n\tOOP（面向对象编程）针对业务处理过程的实体及其属性和行为进行抽象封装，以获得更加清晰高效的逻辑单元划分\n\n\n* POP\n\n\tPOP  面向协议编程  面向接口编程 protocol\n\n#### 介绍下AOP\n\n面向过程编程离我们已经有些遥远，面向对象编程正主宰着软件世界。当每个新的软件设计师都被要求掌握如何将需求功能转化成一个个类，并且定义它们的数据成员、行为，以及它们之间复杂的关系的时候，面向切面编程（Aspect-Oriented Programming，AOP）为我们带来了新的想法、新的思想、新的模式。\n\n如果说面向对象编程是关注将需求功能划分为不同的并且相对独立，封装良好的类，并让它们有着属于自己的行为，依靠继承和多态等来定义彼此的关系的话；那么面向切面编程则是希望能够将通用需求功能从不相关的类当中分离出来，能够使得很多类共享一个行为，一旦发生变化，不必修改很多类，而只需要修改这个行为即可。\n\n面向切面编程是一个令人兴奋不已的新模式。就开发软件系统而言，它的影响力必将会和有着数十年应用历史的面向对象编程一样巨大。面向切面编程和面向对象编程不但不是互相竞争的技术而且彼此还是很好的互补。面向对象编程主要用于为同一对象层次的公用行为建模。它的弱点是将公共行为应用于多个无关对象模型之间。而这恰恰是面向切面编程适合的地方。有了 AOP，我们可以定义交叉的关系，并将这些关系应用于跨模块的、彼此不同的对象模型。AOP 同时还可以让我们层次化功能性而不是嵌入功能性，从而使得代码有更好的可读性和易于维护。它会和面向对象编程合作得很好。\n\nAOP其实只是OOP的补充而已。OOP从横向上区分出一个个的类来，而AOP则从纵向上向对象中加入特定的代码。有了AOP，OOP变得立体了\n\n面向切面编程，纵向切面，一些和业务对象模型之间无关的公共行为，从切面的视角把这些动作片断从业务逻辑代码中划分出来,进行提取，单独统一处理\n\n比如所有对象数据读写的锁处理\n比如所有业务页面统计埋点\n对于一个信用卡应用程序来说，存款、取款、帐单管理是它的主关注点，日志和持久化将成为横切整个对象结构的横切关注点。\n比如在一个充值、购买、赎回、提现的业务流程中，Debugging 调试、Caching缓存、Error handling 错误处理、日志记录、性能监控、等等 这些动作片断形式的切面，是和业务对象无关的公共行为，可以单独进行提取\n\n![](/images/aop-1.png)\n\n","source":"_posts/code-mode.md","raw":"---\ntitle: \"常见的编程方式\"\ndate: 2018-07-22 11:31:32 +0800\ncomments: true\ntags:\n- 编程方式\ncategories:\n- [编程方式]\n---\n\n介绍下开发过程中常见的编程方式\n\n<!-- more -->\n\n### 编程方式\n\n* AOP \n\t\n\tAOP 通过预编译方式和运行期动态代理实现在不修改源代码的情况下给程序动态统一添加功能的一种技术\n\t\n\t设计模式孜孜不倦追求的是调用者和被调用者之间的解耦,提高代码的灵活性和可扩展性，AOP可以说也是这种目标的一种实现。\n\n\tAOP则是针对业务处理过程中的切面进行提取，它所面对的是处理过程中的某个步骤或阶段，以获得逻辑过程中各部分之间低耦合性的隔离效果\n\t\n* OOP \n\t\n\tOOP（面向对象编程）针对业务处理过程的实体及其属性和行为进行抽象封装，以获得更加清晰高效的逻辑单元划分\n\n\n* POP\n\n\tPOP  面向协议编程  面向接口编程 protocol\n\n#### 介绍下AOP\n\n面向过程编程离我们已经有些遥远，面向对象编程正主宰着软件世界。当每个新的软件设计师都被要求掌握如何将需求功能转化成一个个类，并且定义它们的数据成员、行为，以及它们之间复杂的关系的时候，面向切面编程（Aspect-Oriented Programming，AOP）为我们带来了新的想法、新的思想、新的模式。\n\n如果说面向对象编程是关注将需求功能划分为不同的并且相对独立，封装良好的类，并让它们有着属于自己的行为，依靠继承和多态等来定义彼此的关系的话；那么面向切面编程则是希望能够将通用需求功能从不相关的类当中分离出来，能够使得很多类共享一个行为，一旦发生变化，不必修改很多类，而只需要修改这个行为即可。\n\n面向切面编程是一个令人兴奋不已的新模式。就开发软件系统而言，它的影响力必将会和有着数十年应用历史的面向对象编程一样巨大。面向切面编程和面向对象编程不但不是互相竞争的技术而且彼此还是很好的互补。面向对象编程主要用于为同一对象层次的公用行为建模。它的弱点是将公共行为应用于多个无关对象模型之间。而这恰恰是面向切面编程适合的地方。有了 AOP，我们可以定义交叉的关系，并将这些关系应用于跨模块的、彼此不同的对象模型。AOP 同时还可以让我们层次化功能性而不是嵌入功能性，从而使得代码有更好的可读性和易于维护。它会和面向对象编程合作得很好。\n\nAOP其实只是OOP的补充而已。OOP从横向上区分出一个个的类来，而AOP则从纵向上向对象中加入特定的代码。有了AOP，OOP变得立体了\n\n面向切面编程，纵向切面，一些和业务对象模型之间无关的公共行为，从切面的视角把这些动作片断从业务逻辑代码中划分出来,进行提取，单独统一处理\n\n比如所有对象数据读写的锁处理\n比如所有业务页面统计埋点\n对于一个信用卡应用程序来说，存款、取款、帐单管理是它的主关注点，日志和持久化将成为横切整个对象结构的横切关注点。\n比如在一个充值、购买、赎回、提现的业务流程中，Debugging 调试、Caching缓存、Error handling 错误处理、日志记录、性能监控、等等 这些动作片断形式的切面，是和业务对象无关的公共行为，可以单独进行提取\n\n![](/images/aop-1.png)\n\n","slug":"code-mode","published":1,"updated":"2020-06-24T07:40:53.531Z","layout":"post","photos":[],"link":"","_id":"ckbxmgp910005ty3jhe0z55ym","content":"<p>介绍下开发过程中常见的编程方式</p>\n<a id=\"more\"></a>\n\n<h3 id=\"编程方式\"><a href=\"#编程方式\" class=\"headerlink\" title=\"编程方式\"></a>编程方式</h3><ul>\n<li><p>AOP </p>\n<p>  AOP 通过预编译方式和运行期动态代理实现在不修改源代码的情况下给程序动态统一添加功能的一种技术</p>\n<p>  设计模式孜孜不倦追求的是调用者和被调用者之间的解耦,提高代码的灵活性和可扩展性，AOP可以说也是这种目标的一种实现。</p>\n<p>  AOP则是针对业务处理过程中的切面进行提取，它所面对的是处理过程中的某个步骤或阶段，以获得逻辑过程中各部分之间低耦合性的隔离效果</p>\n</li>\n<li><p>OOP </p>\n<p>  OOP（面向对象编程）针对业务处理过程的实体及其属性和行为进行抽象封装，以获得更加清晰高效的逻辑单元划分</p>\n</li>\n</ul>\n<ul>\n<li><p>POP</p>\n<p>  POP  面向协议编程  面向接口编程 protocol</p>\n</li>\n</ul>\n<h4 id=\"介绍下AOP\"><a href=\"#介绍下AOP\" class=\"headerlink\" title=\"介绍下AOP\"></a>介绍下AOP</h4><p>面向过程编程离我们已经有些遥远，面向对象编程正主宰着软件世界。当每个新的软件设计师都被要求掌握如何将需求功能转化成一个个类，并且定义它们的数据成员、行为，以及它们之间复杂的关系的时候，面向切面编程（Aspect-Oriented Programming，AOP）为我们带来了新的想法、新的思想、新的模式。</p>\n<p>如果说面向对象编程是关注将需求功能划分为不同的并且相对独立，封装良好的类，并让它们有着属于自己的行为，依靠继承和多态等来定义彼此的关系的话；那么面向切面编程则是希望能够将通用需求功能从不相关的类当中分离出来，能够使得很多类共享一个行为，一旦发生变化，不必修改很多类，而只需要修改这个行为即可。</p>\n<p>面向切面编程是一个令人兴奋不已的新模式。就开发软件系统而言，它的影响力必将会和有着数十年应用历史的面向对象编程一样巨大。面向切面编程和面向对象编程不但不是互相竞争的技术而且彼此还是很好的互补。面向对象编程主要用于为同一对象层次的公用行为建模。它的弱点是将公共行为应用于多个无关对象模型之间。而这恰恰是面向切面编程适合的地方。有了 AOP，我们可以定义交叉的关系，并将这些关系应用于跨模块的、彼此不同的对象模型。AOP 同时还可以让我们层次化功能性而不是嵌入功能性，从而使得代码有更好的可读性和易于维护。它会和面向对象编程合作得很好。</p>\n<p>AOP其实只是OOP的补充而已。OOP从横向上区分出一个个的类来，而AOP则从纵向上向对象中加入特定的代码。有了AOP，OOP变得立体了</p>\n<p>面向切面编程，纵向切面，一些和业务对象模型之间无关的公共行为，从切面的视角把这些动作片断从业务逻辑代码中划分出来,进行提取，单独统一处理</p>\n<p>比如所有对象数据读写的锁处理<br>比如所有业务页面统计埋点<br>对于一个信用卡应用程序来说，存款、取款、帐单管理是它的主关注点，日志和持久化将成为横切整个对象结构的横切关注点。<br>比如在一个充值、购买、赎回、提现的业务流程中，Debugging 调试、Caching缓存、Error handling 错误处理、日志记录、性能监控、等等 这些动作片断形式的切面，是和业务对象无关的公共行为，可以单独进行提取</p>\n<p><img src=\"/images/aop-1.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p>介绍下开发过程中常见的编程方式</p>","more":"<h3 id=\"编程方式\"><a href=\"#编程方式\" class=\"headerlink\" title=\"编程方式\"></a>编程方式</h3><ul>\n<li><p>AOP </p>\n<p>  AOP 通过预编译方式和运行期动态代理实现在不修改源代码的情况下给程序动态统一添加功能的一种技术</p>\n<p>  设计模式孜孜不倦追求的是调用者和被调用者之间的解耦,提高代码的灵活性和可扩展性，AOP可以说也是这种目标的一种实现。</p>\n<p>  AOP则是针对业务处理过程中的切面进行提取，它所面对的是处理过程中的某个步骤或阶段，以获得逻辑过程中各部分之间低耦合性的隔离效果</p>\n</li>\n<li><p>OOP </p>\n<p>  OOP（面向对象编程）针对业务处理过程的实体及其属性和行为进行抽象封装，以获得更加清晰高效的逻辑单元划分</p>\n</li>\n</ul>\n<ul>\n<li><p>POP</p>\n<p>  POP  面向协议编程  面向接口编程 protocol</p>\n</li>\n</ul>\n<h4 id=\"介绍下AOP\"><a href=\"#介绍下AOP\" class=\"headerlink\" title=\"介绍下AOP\"></a>介绍下AOP</h4><p>面向过程编程离我们已经有些遥远，面向对象编程正主宰着软件世界。当每个新的软件设计师都被要求掌握如何将需求功能转化成一个个类，并且定义它们的数据成员、行为，以及它们之间复杂的关系的时候，面向切面编程（Aspect-Oriented Programming，AOP）为我们带来了新的想法、新的思想、新的模式。</p>\n<p>如果说面向对象编程是关注将需求功能划分为不同的并且相对独立，封装良好的类，并让它们有着属于自己的行为，依靠继承和多态等来定义彼此的关系的话；那么面向切面编程则是希望能够将通用需求功能从不相关的类当中分离出来，能够使得很多类共享一个行为，一旦发生变化，不必修改很多类，而只需要修改这个行为即可。</p>\n<p>面向切面编程是一个令人兴奋不已的新模式。就开发软件系统而言，它的影响力必将会和有着数十年应用历史的面向对象编程一样巨大。面向切面编程和面向对象编程不但不是互相竞争的技术而且彼此还是很好的互补。面向对象编程主要用于为同一对象层次的公用行为建模。它的弱点是将公共行为应用于多个无关对象模型之间。而这恰恰是面向切面编程适合的地方。有了 AOP，我们可以定义交叉的关系，并将这些关系应用于跨模块的、彼此不同的对象模型。AOP 同时还可以让我们层次化功能性而不是嵌入功能性，从而使得代码有更好的可读性和易于维护。它会和面向对象编程合作得很好。</p>\n<p>AOP其实只是OOP的补充而已。OOP从横向上区分出一个个的类来，而AOP则从纵向上向对象中加入特定的代码。有了AOP，OOP变得立体了</p>\n<p>面向切面编程，纵向切面，一些和业务对象模型之间无关的公共行为，从切面的视角把这些动作片断从业务逻辑代码中划分出来,进行提取，单独统一处理</p>\n<p>比如所有对象数据读写的锁处理<br>比如所有业务页面统计埋点<br>对于一个信用卡应用程序来说，存款、取款、帐单管理是它的主关注点，日志和持久化将成为横切整个对象结构的横切关注点。<br>比如在一个充值、购买、赎回、提现的业务流程中，Debugging 调试、Caching缓存、Error handling 错误处理、日志记录、性能监控、等等 这些动作片断形式的切面，是和业务对象无关的公共行为，可以单独进行提取</p>\n<p><img src=\"/images/aop-1.png\" alt=\"\"></p>"},{"title":"iOS工程组织结构(cocoapods管理私有化仓库)","date":"2019-02-19T09:50:10.000Z","comments":1,"_content":"\n介绍下ios开发过程中使用cocoapods管理私有化仓库的实现\n\n<!-- more -->\n\n###先看一个现成的工程组织结构事例\n\n![](/images/cocoapods_1.png)\n\n该工程组织形式，是2个xcodeproj ，一个是 app，一个是 pods；\napp target下只有 appdelegate的初始化工作，和 image的icon、启动图\n\npods里面有 Development Pods、Pods；Development Pods里面是开发的业务子仓库，Pods是成熟的第三方工具子仓库、私有工具子仓库\n\n所以，这个工程组织结构，物理上是 一个 主工程仓库，N 个 子仓库，子仓库的管理在podfile里面，如果是 在Development Pods下，则使用:path ,指明podspec，如果是在pods下，则使用 :git，指明 branch、subspecs等\n\n###工程子仓库\n\n* 分类\n\t1. 外部第三方工具库，开源\n\t2. 公司内部工具库，私有仓库\n\t3. 公司内部业务库，私有仓库\n\t\n* 创建\n\t原则：按照功能来建立，仓库内有耦合，仓库间无耦合\n\t\n\t实现：一个可以通过cocoapod来使用的仓库，最简单的就是在一个普通git仓库里加入一个.podspec文件就可以，在podspec里面配置该仓库的spec，name，dependency等等属性，比如参考afnet的podspec <https://github.com/AFNetworking/AFNetworking/blob/master/AFNetworking.podspec>\n\t以下为测试demo podspec\n\t\n\t![](/images/cocoapods_2.png)\n\t\n\t仓库的podspec创建好了后，就可以进行验证仓库的pod配置是否正确(终端cd到当前仓库，输入 pod lib lint)，正确结果如下\n\t\n\t![](/images/cocoapods_2.png)\n\t\n\t验证OK后，就可以将仓库提交到远程服务器了\n\t\n* 使用\n\t\n\tpodfile通过:path方式，可以给pod生成一个Development Pods文件夹，如下\n\t\n\t```objc\n\tpod 'module_login', :path => \"./Module/module_login.podspec”\n\t```\n\t\n\tpodfile也可以使用:git方式\n\t\n\t```objc\n\tpod 'module_login', :git => 'git@icode.app.com:app/module_login.git'\n\t```\n\t\n\t\n\t\n\t","source":"_posts/cocoaposd-pod.md","raw":"---\ntitle: \"iOS工程组织结构(cocoapods管理私有化仓库)\"\ndate: 2019-02-19 17:50:10 +0800\ncomments: true\ntags:\n- 私有化仓库\n- cocoapods\n- 工程组织结构\ncategories:\n- [私有化仓库]\n- [cocoapods]\n- [工程组织结构]\n---\n\n介绍下ios开发过程中使用cocoapods管理私有化仓库的实现\n\n<!-- more -->\n\n###先看一个现成的工程组织结构事例\n\n![](/images/cocoapods_1.png)\n\n该工程组织形式，是2个xcodeproj ，一个是 app，一个是 pods；\napp target下只有 appdelegate的初始化工作，和 image的icon、启动图\n\npods里面有 Development Pods、Pods；Development Pods里面是开发的业务子仓库，Pods是成熟的第三方工具子仓库、私有工具子仓库\n\n所以，这个工程组织结构，物理上是 一个 主工程仓库，N 个 子仓库，子仓库的管理在podfile里面，如果是 在Development Pods下，则使用:path ,指明podspec，如果是在pods下，则使用 :git，指明 branch、subspecs等\n\n###工程子仓库\n\n* 分类\n\t1. 外部第三方工具库，开源\n\t2. 公司内部工具库，私有仓库\n\t3. 公司内部业务库，私有仓库\n\t\n* 创建\n\t原则：按照功能来建立，仓库内有耦合，仓库间无耦合\n\t\n\t实现：一个可以通过cocoapod来使用的仓库，最简单的就是在一个普通git仓库里加入一个.podspec文件就可以，在podspec里面配置该仓库的spec，name，dependency等等属性，比如参考afnet的podspec <https://github.com/AFNetworking/AFNetworking/blob/master/AFNetworking.podspec>\n\t以下为测试demo podspec\n\t\n\t![](/images/cocoapods_2.png)\n\t\n\t仓库的podspec创建好了后，就可以进行验证仓库的pod配置是否正确(终端cd到当前仓库，输入 pod lib lint)，正确结果如下\n\t\n\t![](/images/cocoapods_2.png)\n\t\n\t验证OK后，就可以将仓库提交到远程服务器了\n\t\n* 使用\n\t\n\tpodfile通过:path方式，可以给pod生成一个Development Pods文件夹，如下\n\t\n\t```objc\n\tpod 'module_login', :path => \"./Module/module_login.podspec”\n\t```\n\t\n\tpodfile也可以使用:git方式\n\t\n\t```objc\n\tpod 'module_login', :git => 'git@icode.app.com:app/module_login.git'\n\t```\n\t\n\t\n\t\n\t","slug":"cocoaposd-pod","published":1,"updated":"2020-06-27T08:43:59.077Z","layout":"post","photos":[],"link":"","_id":"ckbxmgp920006ty3j0clu4ji2","content":"<p>介绍下ios开发过程中使用cocoapods管理私有化仓库的实现</p>\n<a id=\"more\"></a>\n\n<p>###先看一个现成的工程组织结构事例</p>\n<p><img src=\"/images/cocoapods_1.png\" alt=\"\"></p>\n<p>该工程组织形式，是2个xcodeproj ，一个是 app，一个是 pods；<br>app target下只有 appdelegate的初始化工作，和 image的icon、启动图</p>\n<p>pods里面有 Development Pods、Pods；Development Pods里面是开发的业务子仓库，Pods是成熟的第三方工具子仓库、私有工具子仓库</p>\n<p>所以，这个工程组织结构，物理上是 一个 主工程仓库，N 个 子仓库，子仓库的管理在podfile里面，如果是 在Development Pods下，则使用:path ,指明podspec，如果是在pods下，则使用 :git，指明 branch、subspecs等</p>\n<p>###工程子仓库</p>\n<ul>\n<li><p>分类</p>\n<ol>\n<li>外部第三方工具库，开源</li>\n<li>公司内部工具库，私有仓库</li>\n<li>公司内部业务库，私有仓库</li>\n</ol>\n</li>\n<li><p>创建<br>  原则：按照功能来建立，仓库内有耦合，仓库间无耦合</p>\n<p>  实现：一个可以通过cocoapod来使用的仓库，最简单的就是在一个普通git仓库里加入一个.podspec文件就可以，在podspec里面配置该仓库的spec，name，dependency等等属性，比如参考afnet的podspec <a href=\"https://github.com/AFNetworking/AFNetworking/blob/master/AFNetworking.podspec\" target=\"_blank\" rel=\"noopener\">https://github.com/AFNetworking/AFNetworking/blob/master/AFNetworking.podspec</a><br>  以下为测试demo podspec</p>\n<p>  <img src=\"/images/cocoapods_2.png\" alt=\"\"></p>\n<p>  仓库的podspec创建好了后，就可以进行验证仓库的pod配置是否正确(终端cd到当前仓库，输入 pod lib lint)，正确结果如下</p>\n<p>  <img src=\"/images/cocoapods_2.png\" alt=\"\"></p>\n<p>  验证OK后，就可以将仓库提交到远程服务器了</p>\n</li>\n<li><p>使用</p>\n<p>  podfile通过:path方式，可以给pod生成一个Development Pods文件夹，如下</p>\n  <figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pod <span class=\"string\">'module_login'</span>, :path =&gt; <span class=\"string\">\"./Module/module_login.podspec”</span></span><br></pre></td></tr></table></figure>\n\n<p>  podfile也可以使用:git方式</p>\n  <figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pod <span class=\"string\">'module_login'</span>, :git =&gt; <span class=\"string\">'git@icode.app.com:app/module_login.git'</span></span><br></pre></td></tr></table></figure>\n\n\n\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>介绍下ios开发过程中使用cocoapods管理私有化仓库的实现</p>","more":"<p>###先看一个现成的工程组织结构事例</p>\n<p><img src=\"/images/cocoapods_1.png\" alt=\"\"></p>\n<p>该工程组织形式，是2个xcodeproj ，一个是 app，一个是 pods；<br>app target下只有 appdelegate的初始化工作，和 image的icon、启动图</p>\n<p>pods里面有 Development Pods、Pods；Development Pods里面是开发的业务子仓库，Pods是成熟的第三方工具子仓库、私有工具子仓库</p>\n<p>所以，这个工程组织结构，物理上是 一个 主工程仓库，N 个 子仓库，子仓库的管理在podfile里面，如果是 在Development Pods下，则使用:path ,指明podspec，如果是在pods下，则使用 :git，指明 branch、subspecs等</p>\n<p>###工程子仓库</p>\n<ul>\n<li><p>分类</p>\n<ol>\n<li>外部第三方工具库，开源</li>\n<li>公司内部工具库，私有仓库</li>\n<li>公司内部业务库，私有仓库</li>\n</ol>\n</li>\n<li><p>创建<br>  原则：按照功能来建立，仓库内有耦合，仓库间无耦合</p>\n<p>  实现：一个可以通过cocoapod来使用的仓库，最简单的就是在一个普通git仓库里加入一个.podspec文件就可以，在podspec里面配置该仓库的spec，name，dependency等等属性，比如参考afnet的podspec <a href=\"https://github.com/AFNetworking/AFNetworking/blob/master/AFNetworking.podspec\" target=\"_blank\" rel=\"noopener\">https://github.com/AFNetworking/AFNetworking/blob/master/AFNetworking.podspec</a><br>  以下为测试demo podspec</p>\n<p>  <img src=\"/images/cocoapods_2.png\" alt=\"\"></p>\n<p>  仓库的podspec创建好了后，就可以进行验证仓库的pod配置是否正确(终端cd到当前仓库，输入 pod lib lint)，正确结果如下</p>\n<p>  <img src=\"/images/cocoapods_2.png\" alt=\"\"></p>\n<p>  验证OK后，就可以将仓库提交到远程服务器了</p>\n</li>\n<li><p>使用</p>\n<p>  podfile通过:path方式，可以给pod生成一个Development Pods文件夹，如下</p>\n  <figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pod <span class=\"string\">'module_login'</span>, :path =&gt; <span class=\"string\">\"./Module/module_login.podspec”</span></span><br></pre></td></tr></table></figure>\n\n<p>  podfile也可以使用:git方式</p>\n  <figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pod <span class=\"string\">'module_login'</span>, :git =&gt; <span class=\"string\">'git@icode.app.com:app/module_login.git'</span></span><br></pre></td></tr></table></figure>\n\n\n\n</li>\n</ul>"},{"title":"程序软件下载器","date":"2017-08-20T05:32:20.000Z","comments":1,"_content":"\n简单介绍下开发时候使用的程序软件下载器\n\n<!-- more -->\n\n程序软件套件管理器，程序软件包管理工具\n\n1. wget\n\t\n\twget是一个从网络上自动下载文件的自由工具\n\n2. homebrew\n\n\tMac OS平台下的软件包管理工具，拥有安装、卸载、更新、查看、搜索等很多实用的功能\n\n3. yum\n\t\n\tYellow dog Updater, Modifier，是一个自由、开源的命令行软件包管理工具\n\n4. nvm\n\t\n\tnode version manager , node的版本管理器\n\n5. npm\n\n\tNode Package Manager，即“node包管理器”\n\t\n6. rvm\n\t\n\truby-version-manager,ruby的版本管理器\n\t\n7. gem\n\t\n\trubyGems ，是 ruby 的 包管理器\n\t\n8. pip\n\t\n\tpip是python库管理工具, 在使用python编程的时候, 使用pip可以方便对库的更新\n\t\n9. cocoapods\n\t\n\tios开发使用的包管理\n\n\n\n\n\n","source":"_posts/downloader.md","raw":"---\ntitle: \"程序软件下载器\"\ndate: 2017-08-20 13:32:20 +0800\ncomments: true\ntags:\n- 程序软件下载器\ncategories:\n- [程序软件下载器]\n---\n\n简单介绍下开发时候使用的程序软件下载器\n\n<!-- more -->\n\n程序软件套件管理器，程序软件包管理工具\n\n1. wget\n\t\n\twget是一个从网络上自动下载文件的自由工具\n\n2. homebrew\n\n\tMac OS平台下的软件包管理工具，拥有安装、卸载、更新、查看、搜索等很多实用的功能\n\n3. yum\n\t\n\tYellow dog Updater, Modifier，是一个自由、开源的命令行软件包管理工具\n\n4. nvm\n\t\n\tnode version manager , node的版本管理器\n\n5. npm\n\n\tNode Package Manager，即“node包管理器”\n\t\n6. rvm\n\t\n\truby-version-manager,ruby的版本管理器\n\t\n7. gem\n\t\n\trubyGems ，是 ruby 的 包管理器\n\t\n8. pip\n\t\n\tpip是python库管理工具, 在使用python编程的时候, 使用pip可以方便对库的更新\n\t\n9. cocoapods\n\t\n\tios开发使用的包管理\n\n\n\n\n\n","slug":"downloader","published":1,"updated":"2020-06-28T10:28:29.523Z","_id":"ckbxmgp940009ty3jgquqg2n8","layout":"post","photos":[],"link":"","content":"<p>简单介绍下开发时候使用的程序软件下载器</p>\n<a id=\"more\"></a>\n\n<p>程序软件套件管理器，程序软件包管理工具</p>\n<ol>\n<li><p>wget</p>\n<p> wget是一个从网络上自动下载文件的自由工具</p>\n</li>\n<li><p>homebrew</p>\n<p> Mac OS平台下的软件包管理工具，拥有安装、卸载、更新、查看、搜索等很多实用的功能</p>\n</li>\n<li><p>yum</p>\n<p> Yellow dog Updater, Modifier，是一个自由、开源的命令行软件包管理工具</p>\n</li>\n<li><p>nvm</p>\n<p> node version manager , node的版本管理器</p>\n</li>\n<li><p>npm</p>\n<p> Node Package Manager，即“node包管理器”</p>\n</li>\n<li><p>rvm</p>\n<p> ruby-version-manager,ruby的版本管理器</p>\n</li>\n<li><p>gem</p>\n<p> rubyGems ，是 ruby 的 包管理器</p>\n</li>\n<li><p>pip</p>\n<p> pip是python库管理工具, 在使用python编程的时候, 使用pip可以方便对库的更新</p>\n</li>\n<li><p>cocoapods</p>\n<p> ios开发使用的包管理</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>简单介绍下开发时候使用的程序软件下载器</p>","more":"<p>程序软件套件管理器，程序软件包管理工具</p>\n<ol>\n<li><p>wget</p>\n<p> wget是一个从网络上自动下载文件的自由工具</p>\n</li>\n<li><p>homebrew</p>\n<p> Mac OS平台下的软件包管理工具，拥有安装、卸载、更新、查看、搜索等很多实用的功能</p>\n</li>\n<li><p>yum</p>\n<p> Yellow dog Updater, Modifier，是一个自由、开源的命令行软件包管理工具</p>\n</li>\n<li><p>nvm</p>\n<p> node version manager , node的版本管理器</p>\n</li>\n<li><p>npm</p>\n<p> Node Package Manager，即“node包管理器”</p>\n</li>\n<li><p>rvm</p>\n<p> ruby-version-manager,ruby的版本管理器</p>\n</li>\n<li><p>gem</p>\n<p> rubyGems ，是 ruby 的 包管理器</p>\n</li>\n<li><p>pip</p>\n<p> pip是python库管理工具, 在使用python编程的时候, 使用pip可以方便对库的更新</p>\n</li>\n<li><p>cocoapods</p>\n<p> ios开发使用的包管理</p>\n</li>\n</ol>"},{"title":"iOS framework 制作","date":"2017-01-15T04:30:20.000Z","comments":1,"_content":"\n简单介绍下ios开发过程中framework的制作\n\n<!-- more -->\n\n###概念解释\n\nframework 路径更优雅些，结构清晰(对library的封装，同时封装了对应的header文件、以及引用的资源文件(如果有))\n\nframework也分为 静态framework 、动态framework\n\n查看是静态还是动态 在终端里面 file framework就可以显示\n\n.a 文件 即 static library 是经过 compile linked 后的可执行代码，链接时完整地拷贝至可执行文件中，被多次使用就有多份冗余拷贝\n\n###制作流程简要记录\n\n1. Xcode new一个 framework类型的的 project\n\n2. project下新建podfile，配置好podfile后，进行pod install (podfile 里面使用 use_frameworks!)\n\n3. install完成后，workspace下的目标target配置更改(Mach-O Type要选择Dynamic Library(也可以使用 Static Library 看需求，最好是 Static Library )、Buld Setting中Other Linker Flags要加上-all_load、Buld Setting中Build Active Architecture Only选No)\n查看是否是动态库、静态库参考 https://www.jianshu.com/p/77343def4574\n\n4. 目标target配置支持bitcode(Enable Bitcode = Yes、Other C Flags中添加-fembed-bitcode、Other Linker Flags 中加入 -fembed-bitcode)\n\n5. workspace里面的scheme选项里面把目标scheme new出来，点击Edit Scheme 把Run Build 等命令的Build Configuration 都改成 Release ，完后进行进行build\n\n6. product文件夹下的目标framework既是结果，此时需要此framework同时支持模拟器和真机，所以需要对 device 和 simulator 分别 build一次，将两次产生的framework合并，查看是否支持真机、模拟器 ，以及合并命令\n\n","source":"_posts/framework.md","raw":"---\ntitle: \"iOS framework 制作\"\ndate: 2017-01-15 12:30:20 +0800\ncomments: true\ntags:\n- framework\n- static library\ncategories:\n- [framework]\n- [static library]\n---\n\n简单介绍下ios开发过程中framework的制作\n\n<!-- more -->\n\n###概念解释\n\nframework 路径更优雅些，结构清晰(对library的封装，同时封装了对应的header文件、以及引用的资源文件(如果有))\n\nframework也分为 静态framework 、动态framework\n\n查看是静态还是动态 在终端里面 file framework就可以显示\n\n.a 文件 即 static library 是经过 compile linked 后的可执行代码，链接时完整地拷贝至可执行文件中，被多次使用就有多份冗余拷贝\n\n###制作流程简要记录\n\n1. Xcode new一个 framework类型的的 project\n\n2. project下新建podfile，配置好podfile后，进行pod install (podfile 里面使用 use_frameworks!)\n\n3. install完成后，workspace下的目标target配置更改(Mach-O Type要选择Dynamic Library(也可以使用 Static Library 看需求，最好是 Static Library )、Buld Setting中Other Linker Flags要加上-all_load、Buld Setting中Build Active Architecture Only选No)\n查看是否是动态库、静态库参考 https://www.jianshu.com/p/77343def4574\n\n4. 目标target配置支持bitcode(Enable Bitcode = Yes、Other C Flags中添加-fembed-bitcode、Other Linker Flags 中加入 -fembed-bitcode)\n\n5. workspace里面的scheme选项里面把目标scheme new出来，点击Edit Scheme 把Run Build 等命令的Build Configuration 都改成 Release ，完后进行进行build\n\n6. product文件夹下的目标framework既是结果，此时需要此framework同时支持模拟器和真机，所以需要对 device 和 simulator 分别 build一次，将两次产生的framework合并，查看是否支持真机、模拟器 ，以及合并命令\n\n","slug":"framework","published":1,"updated":"2020-06-27T07:50:53.611Z","layout":"post","photos":[],"link":"","_id":"ckbxmgp95000aty3j6inkb491","content":"<p>简单介绍下ios开发过程中framework的制作</p>\n<a id=\"more\"></a>\n\n<p>###概念解释</p>\n<p>framework 路径更优雅些，结构清晰(对library的封装，同时封装了对应的header文件、以及引用的资源文件(如果有))</p>\n<p>framework也分为 静态framework 、动态framework</p>\n<p>查看是静态还是动态 在终端里面 file framework就可以显示</p>\n<p>.a 文件 即 static library 是经过 compile linked 后的可执行代码，链接时完整地拷贝至可执行文件中，被多次使用就有多份冗余拷贝</p>\n<p>###制作流程简要记录</p>\n<ol>\n<li><p>Xcode new一个 framework类型的的 project</p>\n</li>\n<li><p>project下新建podfile，配置好podfile后，进行pod install (podfile 里面使用 use_frameworks!)</p>\n</li>\n<li><p>install完成后，workspace下的目标target配置更改(Mach-O Type要选择Dynamic Library(也可以使用 Static Library 看需求，最好是 Static Library )、Buld Setting中Other Linker Flags要加上-all_load、Buld Setting中Build Active Architecture Only选No)<br>查看是否是动态库、静态库参考 <a href=\"https://www.jianshu.com/p/77343def4574\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/77343def4574</a></p>\n</li>\n<li><p>目标target配置支持bitcode(Enable Bitcode = Yes、Other C Flags中添加-fembed-bitcode、Other Linker Flags 中加入 -fembed-bitcode)</p>\n</li>\n<li><p>workspace里面的scheme选项里面把目标scheme new出来，点击Edit Scheme 把Run Build 等命令的Build Configuration 都改成 Release ，完后进行进行build</p>\n</li>\n<li><p>product文件夹下的目标framework既是结果，此时需要此framework同时支持模拟器和真机，所以需要对 device 和 simulator 分别 build一次，将两次产生的framework合并，查看是否支持真机、模拟器 ，以及合并命令</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>简单介绍下ios开发过程中framework的制作</p>","more":"<p>###概念解释</p>\n<p>framework 路径更优雅些，结构清晰(对library的封装，同时封装了对应的header文件、以及引用的资源文件(如果有))</p>\n<p>framework也分为 静态framework 、动态framework</p>\n<p>查看是静态还是动态 在终端里面 file framework就可以显示</p>\n<p>.a 文件 即 static library 是经过 compile linked 后的可执行代码，链接时完整地拷贝至可执行文件中，被多次使用就有多份冗余拷贝</p>\n<p>###制作流程简要记录</p>\n<ol>\n<li><p>Xcode new一个 framework类型的的 project</p>\n</li>\n<li><p>project下新建podfile，配置好podfile后，进行pod install (podfile 里面使用 use_frameworks!)</p>\n</li>\n<li><p>install完成后，workspace下的目标target配置更改(Mach-O Type要选择Dynamic Library(也可以使用 Static Library 看需求，最好是 Static Library )、Buld Setting中Other Linker Flags要加上-all_load、Buld Setting中Build Active Architecture Only选No)<br>查看是否是动态库、静态库参考 <a href=\"https://www.jianshu.com/p/77343def4574\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/77343def4574</a></p>\n</li>\n<li><p>目标target配置支持bitcode(Enable Bitcode = Yes、Other C Flags中添加-fembed-bitcode、Other Linker Flags 中加入 -fembed-bitcode)</p>\n</li>\n<li><p>workspace里面的scheme选项里面把目标scheme new出来，点击Edit Scheme 把Run Build 等命令的Build Configuration 都改成 Release ，完后进行进行build</p>\n</li>\n<li><p>product文件夹下的目标framework既是结果，此时需要此framework同时支持模拟器和真机，所以需要对 device 和 simulator 分别 build一次，将两次产生的framework合并，查看是否支持真机、模拟器 ，以及合并命令</p>\n</li>\n</ol>"},{"title":"函数响应式编程","date":"2018-07-13T02:13:34.000Z","comments":1,"_content":"\n介绍下编程中的函数响应式编程\n\n<!-- more -->\n\n##函数响应式编程作用\n\n数据源驱动UI视图变化，面向数据流的变化传播，实时响应\n\n逻辑、UI 拆分开，比如如下图\n\n![](/images/frp-01.png)\n\n### 以下为分享的ppt\n\n![](/images/frp-001.png)\n![](/images/frp-002.png)\n![](/images/frp-003.png)\n![](/images/frp-004.png)\n![](/images/frp-005.png)\n![](/images/frp-006.png)\n![](/images/frp-007.png)\n![](/images/frp-008.png)\n![](/images/frp-009.png)\n![](/images/frp-010.png)\n![](/images/frp-011.png)\n![](/images/frp-012.png)\n![](/images/frp-013.png)\n![](/images/frp-014.png)\n![](/images/frp-015.png)\n![](/images/frp-016.png)\n![](/images/frp-017.png)\n![](/images/frp-018.png)\n\n\n\n\n","source":"_posts/frp.md","raw":"---\ntitle: \"函数响应式编程\"\ndate: 2018-07-13 10:13:34 +0800\ncomments: true\ntags:\n- 函数响应式编程\n- FRP\ncategories:\n- [函数响应式编程]\n- [FRP]\n---\n\n介绍下编程中的函数响应式编程\n\n<!-- more -->\n\n##函数响应式编程作用\n\n数据源驱动UI视图变化，面向数据流的变化传播，实时响应\n\n逻辑、UI 拆分开，比如如下图\n\n![](/images/frp-01.png)\n\n### 以下为分享的ppt\n\n![](/images/frp-001.png)\n![](/images/frp-002.png)\n![](/images/frp-003.png)\n![](/images/frp-004.png)\n![](/images/frp-005.png)\n![](/images/frp-006.png)\n![](/images/frp-007.png)\n![](/images/frp-008.png)\n![](/images/frp-009.png)\n![](/images/frp-010.png)\n![](/images/frp-011.png)\n![](/images/frp-012.png)\n![](/images/frp-013.png)\n![](/images/frp-014.png)\n![](/images/frp-015.png)\n![](/images/frp-016.png)\n![](/images/frp-017.png)\n![](/images/frp-018.png)\n\n\n\n\n","slug":"frp","published":1,"updated":"2020-06-27T08:57:15.566Z","layout":"post","photos":[],"link":"","_id":"ckbxmgp96000dty3j0ktw36pm","content":"<p>介绍下编程中的函数响应式编程</p>\n<a id=\"more\"></a>\n\n<p>##函数响应式编程作用</p>\n<p>数据源驱动UI视图变化，面向数据流的变化传播，实时响应</p>\n<p>逻辑、UI 拆分开，比如如下图</p>\n<p><img src=\"/images/frp-01.png\" alt=\"\"></p>\n<h3 id=\"以下为分享的ppt\"><a href=\"#以下为分享的ppt\" class=\"headerlink\" title=\"以下为分享的ppt\"></a>以下为分享的ppt</h3><p><img src=\"/images/frp-001.png\" alt=\"\"><br><img src=\"/images/frp-002.png\" alt=\"\"><br><img src=\"/images/frp-003.png\" alt=\"\"><br><img src=\"/images/frp-004.png\" alt=\"\"><br><img src=\"/images/frp-005.png\" alt=\"\"><br><img src=\"/images/frp-006.png\" alt=\"\"><br><img src=\"/images/frp-007.png\" alt=\"\"><br><img src=\"/images/frp-008.png\" alt=\"\"><br><img src=\"/images/frp-009.png\" alt=\"\"><br><img src=\"/images/frp-010.png\" alt=\"\"><br><img src=\"/images/frp-011.png\" alt=\"\"><br><img src=\"/images/frp-012.png\" alt=\"\"><br><img src=\"/images/frp-013.png\" alt=\"\"><br><img src=\"/images/frp-014.png\" alt=\"\"><br><img src=\"/images/frp-015.png\" alt=\"\"><br><img src=\"/images/frp-016.png\" alt=\"\"><br><img src=\"/images/frp-017.png\" alt=\"\"><br><img src=\"/images/frp-018.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p>介绍下编程中的函数响应式编程</p>","more":"<p>##函数响应式编程作用</p>\n<p>数据源驱动UI视图变化，面向数据流的变化传播，实时响应</p>\n<p>逻辑、UI 拆分开，比如如下图</p>\n<p><img src=\"/images/frp-01.png\" alt=\"\"></p>\n<h3 id=\"以下为分享的ppt\"><a href=\"#以下为分享的ppt\" class=\"headerlink\" title=\"以下为分享的ppt\"></a>以下为分享的ppt</h3><p><img src=\"/images/frp-001.png\" alt=\"\"><br><img src=\"/images/frp-002.png\" alt=\"\"><br><img src=\"/images/frp-003.png\" alt=\"\"><br><img src=\"/images/frp-004.png\" alt=\"\"><br><img src=\"/images/frp-005.png\" alt=\"\"><br><img src=\"/images/frp-006.png\" alt=\"\"><br><img src=\"/images/frp-007.png\" alt=\"\"><br><img src=\"/images/frp-008.png\" alt=\"\"><br><img src=\"/images/frp-009.png\" alt=\"\"><br><img src=\"/images/frp-010.png\" alt=\"\"><br><img src=\"/images/frp-011.png\" alt=\"\"><br><img src=\"/images/frp-012.png\" alt=\"\"><br><img src=\"/images/frp-013.png\" alt=\"\"><br><img src=\"/images/frp-014.png\" alt=\"\"><br><img src=\"/images/frp-015.png\" alt=\"\"><br><img src=\"/images/frp-016.png\" alt=\"\"><br><img src=\"/images/frp-017.png\" alt=\"\"><br><img src=\"/images/frp-018.png\" alt=\"\"></p>"},{"title":"iOS学习图谱","date":"2016-01-14T03:31:10.000Z","comments":1,"_content":"\nios学习图谱\n\n<!-- more -->\n\n###ios学习图谱\n\n![](/images/iOS-1.png)","source":"_posts/ios.md","raw":"---\ntitle: \"iOS学习图谱\"\ndate: 2016-01-14 11:31:10 +0800\ncomments: true\ntags:\ncategories:\n---\n\nios学习图谱\n\n<!-- more -->\n\n###ios学习图谱\n\n![](/images/iOS-1.png)","slug":"ios","published":1,"updated":"2020-06-27T09:12:26.578Z","layout":"post","photos":[],"link":"","_id":"ckbxmgp97000fty3jhjnh0l6q","content":"<p>ios学习图谱</p>\n<a id=\"more\"></a>\n\n<p>###ios学习图谱</p>\n<p><img src=\"/images/iOS-1.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p>ios学习图谱</p>","more":"<p>###ios学习图谱</p>\n<p><img src=\"/images/iOS-1.png\" alt=\"\"></p>"},{"title":"页面布局自动化、页面跳转自动化","date":"2017-03-04T08:32:34.000Z","comments":1,"_content":"\n简单介绍下ios开发过程中实现的页面布局自动化、页面跳转自动化\n\n<!-- more -->\n\n* VIPER页面布局自动化\n\n\t通过预定义的json实现，可参考  https://github.com/andyyhope/nemo\n\t\n\t轻量级的可以参考下https://wiki.open.qq.com/index.php?title=mobile/SDK%E4%B8%8B%E8%BD%BD&oldid=47795\n\t\n\t都是通过json的配置，来进行ui的布局，需要app预埋支持\n\t\n* 页面跳转自动化\n\n\t页面跳转都可以通过 scheme://的方式，也就是router方式来实现，包括参数的传递都在scheme://的query部分，比如 izrb://www.domain.com/product?pid=10，页面scheme配置好后，跳转可通过路由URLSchemeCenter来实现\n\n以下为参考实现\n\n```objc\n\ntypedef void (^CodeBlock)(id para);\n\n@interface URLSchemeCenter : NSObject\n\n- (BOOL)registerURL:(NSURL *)url forCodeBlock:(CodeBlock)codeBlock;\n\n- (BOOL)executeURL:(NSURL *)url;\n\n@end\n\n@implementation URLSchemeCenter\n\n- (instancetype)init\n{\n    self = [super init];\n    \n    if (self) {\n        _selMap = [[NSMutableDictionary alloc] init];\n        \n        self.schemeMap = [[NSMutableDictionary alloc] init];\n    }\n    \n    return self;\n}\n\n- (BOOL)registerURL:(NSURL *)url forCodeBlock:(CodeBlock)codeBlock\n{\n    if (![url isKindOfClass:NSURL.class]) {\n        return NO;\n    }\n    \n    if (!codeBlock) {\n        return NO;\n    }\n    \n    NSString *key = url.absoluteString.lowercaseString;\n    CodeBlock value = [codeBlock copy];\n    \n    [self.schemeMap setObject:value forKey:key];\n    \n    return YES;\n}\n\n- (BOOL)executeURL:(NSURL *)url\n{\n    if (![url isKindOfClass:NSURL.class]) {\n        return NO;\n    }\n    \n    NSString *key = [url.absoluteString componentsSeparatedByString:@\"?\"].firstObject.lowercaseString;\n    \n    CodeBlock value = [self.schemeMap objectForKey:key];\n    \n    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.1f * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{\n        NSDictionary *params = [self getQueryObj:url.query];\n        value(params);\n    });\n    \n    return YES;\n}\n\n- (NSDictionary *)getQueryObj:(NSString *)string\n{\n    if (![string isKindOfClass: [NSString class]]) {\n        return nil;\n    }\n    \n    NSMutableDictionary *params = [NSMutableDictionary dictionaryWithCapacity:0];\n    \n    NSArray *queryStringPairs = [string componentsSeparatedByString:@\"&\"];\n    \n    [queryStringPairs enumerateObjectsUsingBlock:^(NSString *queryStringPair, NSUInteger idx, BOOL *stop) {\n        NSRange range = [queryStringPair rangeOfString:@\"=\"];\n        if (range.location != NSNotFound) {\n            NSString *key = [queryStringPair substringToIndex:range.location];\n            NSString *value = [queryStringPair substringFromIndex:range.location + 1];\n            [params setValue:value forKey:key];\n        }\n    }];\n    \n    return params;\n}\n\n@end\n\n```\n","source":"_posts/page-auto.md","raw":"---\ntitle: \"页面布局自动化、页面跳转自动化\"\ndate: 2017-03-04 16:32:34 +0800\ncomments: true\ntags:\n- 页面布局自动化\n- 页面跳转自动化\ncategories:\n- [页面布局自动化]\n- [页面跳转自动化]\n---\n\n简单介绍下ios开发过程中实现的页面布局自动化、页面跳转自动化\n\n<!-- more -->\n\n* VIPER页面布局自动化\n\n\t通过预定义的json实现，可参考  https://github.com/andyyhope/nemo\n\t\n\t轻量级的可以参考下https://wiki.open.qq.com/index.php?title=mobile/SDK%E4%B8%8B%E8%BD%BD&oldid=47795\n\t\n\t都是通过json的配置，来进行ui的布局，需要app预埋支持\n\t\n* 页面跳转自动化\n\n\t页面跳转都可以通过 scheme://的方式，也就是router方式来实现，包括参数的传递都在scheme://的query部分，比如 izrb://www.domain.com/product?pid=10，页面scheme配置好后，跳转可通过路由URLSchemeCenter来实现\n\n以下为参考实现\n\n```objc\n\ntypedef void (^CodeBlock)(id para);\n\n@interface URLSchemeCenter : NSObject\n\n- (BOOL)registerURL:(NSURL *)url forCodeBlock:(CodeBlock)codeBlock;\n\n- (BOOL)executeURL:(NSURL *)url;\n\n@end\n\n@implementation URLSchemeCenter\n\n- (instancetype)init\n{\n    self = [super init];\n    \n    if (self) {\n        _selMap = [[NSMutableDictionary alloc] init];\n        \n        self.schemeMap = [[NSMutableDictionary alloc] init];\n    }\n    \n    return self;\n}\n\n- (BOOL)registerURL:(NSURL *)url forCodeBlock:(CodeBlock)codeBlock\n{\n    if (![url isKindOfClass:NSURL.class]) {\n        return NO;\n    }\n    \n    if (!codeBlock) {\n        return NO;\n    }\n    \n    NSString *key = url.absoluteString.lowercaseString;\n    CodeBlock value = [codeBlock copy];\n    \n    [self.schemeMap setObject:value forKey:key];\n    \n    return YES;\n}\n\n- (BOOL)executeURL:(NSURL *)url\n{\n    if (![url isKindOfClass:NSURL.class]) {\n        return NO;\n    }\n    \n    NSString *key = [url.absoluteString componentsSeparatedByString:@\"?\"].firstObject.lowercaseString;\n    \n    CodeBlock value = [self.schemeMap objectForKey:key];\n    \n    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.1f * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{\n        NSDictionary *params = [self getQueryObj:url.query];\n        value(params);\n    });\n    \n    return YES;\n}\n\n- (NSDictionary *)getQueryObj:(NSString *)string\n{\n    if (![string isKindOfClass: [NSString class]]) {\n        return nil;\n    }\n    \n    NSMutableDictionary *params = [NSMutableDictionary dictionaryWithCapacity:0];\n    \n    NSArray *queryStringPairs = [string componentsSeparatedByString:@\"&\"];\n    \n    [queryStringPairs enumerateObjectsUsingBlock:^(NSString *queryStringPair, NSUInteger idx, BOOL *stop) {\n        NSRange range = [queryStringPair rangeOfString:@\"=\"];\n        if (range.location != NSNotFound) {\n            NSString *key = [queryStringPair substringToIndex:range.location];\n            NSString *value = [queryStringPair substringFromIndex:range.location + 1];\n            [params setValue:value forKey:key];\n        }\n    }];\n    \n    return params;\n}\n\n@end\n\n```\n","slug":"page-auto","published":1,"updated":"2020-06-24T08:39:54.029Z","layout":"post","photos":[],"link":"","_id":"ckbxmgp98000jty3jeluydn7u","content":"<p>简单介绍下ios开发过程中实现的页面布局自动化、页面跳转自动化</p>\n<a id=\"more\"></a>\n\n<ul>\n<li><p>VIPER页面布局自动化</p>\n<p>  通过预定义的json实现，可参考  <a href=\"https://github.com/andyyhope/nemo\" target=\"_blank\" rel=\"noopener\">https://github.com/andyyhope/nemo</a></p>\n<p>  轻量级的可以参考下<a href=\"https://wiki.open.qq.com/index.php?title=mobile/SDK%E4%B8%8B%E8%BD%BD&amp;oldid=47795\" target=\"_blank\" rel=\"noopener\">https://wiki.open.qq.com/index.php?title=mobile/SDK%E4%B8%8B%E8%BD%BD&amp;oldid=47795</a></p>\n<p>  都是通过json的配置，来进行ui的布局，需要app预埋支持</p>\n</li>\n<li><p>页面跳转自动化</p>\n<p>  页面跳转都可以通过 scheme://的方式，也就是router方式来实现，包括参数的传递都在scheme://的query部分，比如 izrb://<a href=\"http://www.domain.com/product?pid=10，页面scheme配置好后，跳转可通过路由URLSchemeCenter来实现\" target=\"_blank\" rel=\"noopener\">www.domain.com/product?pid=10，页面scheme配置好后，跳转可通过路由URLSchemeCenter来实现</a></p>\n</li>\n</ul>\n<p>以下为参考实现</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">void</span> (^CodeBlock)(<span class=\"keyword\">id</span> para);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@interface</span> <span class=\"title\">URLSchemeCenter</span> : <span class=\"title\">NSObject</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)registerURL:(<span class=\"built_in\">NSURL</span> *)url forCodeBlock:(CodeBlock)codeBlock;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)executeURL:(<span class=\"built_in\">NSURL</span> *)url;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@implementation</span> <span class=\"title\">URLSchemeCenter</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">instancetype</span>)init</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">self</span> = [<span class=\"keyword\">super</span> init];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">self</span>) &#123;</span><br><span class=\"line\">        _selMap = [[<span class=\"built_in\">NSMutableDictionary</span> alloc] init];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">self</span>.schemeMap = [[<span class=\"built_in\">NSMutableDictionary</span> alloc] init];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)registerURL:(<span class=\"built_in\">NSURL</span> *)url forCodeBlock:(CodeBlock)codeBlock</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (![url isKindOfClass:<span class=\"built_in\">NSURL</span>.class]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">NO</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!codeBlock) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">NO</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSString</span> *key = url.absoluteString.lowercaseString;</span><br><span class=\"line\">    CodeBlock value = [codeBlock <span class=\"keyword\">copy</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    [<span class=\"keyword\">self</span>.schemeMap setObject:value forKey:key];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">YES</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)executeURL:(<span class=\"built_in\">NSURL</span> *)url</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (![url isKindOfClass:<span class=\"built_in\">NSURL</span>.class]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">NO</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSString</span> *key = [url.absoluteString componentsSeparatedByString:<span class=\"string\">@\"?\"</span>].firstObject.lowercaseString;</span><br><span class=\"line\">    </span><br><span class=\"line\">    CodeBlock value = [<span class=\"keyword\">self</span>.schemeMap objectForKey:key];</span><br><span class=\"line\">    </span><br><span class=\"line\">    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(<span class=\"number\">0.1</span>f * <span class=\"built_in\">NSEC_PER_SEC</span>)), dispatch_get_main_queue(), ^&#123;</span><br><span class=\"line\">        <span class=\"built_in\">NSDictionary</span> *params = [<span class=\"keyword\">self</span> getQueryObj:url.query];</span><br><span class=\"line\">        value(params);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">YES</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">NSDictionary</span> *)getQueryObj:(<span class=\"built_in\">NSString</span> *)string</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (![string isKindOfClass: [<span class=\"built_in\">NSString</span> <span class=\"keyword\">class</span>]]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">nil</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSMutableDictionary</span> *params = [<span class=\"built_in\">NSMutableDictionary</span> dictionaryWithCapacity:<span class=\"number\">0</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSArray</span> *queryStringPairs = [string componentsSeparatedByString:<span class=\"string\">@\"&amp;\"</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    [queryStringPairs enumerateObjectsUsingBlock:^(<span class=\"built_in\">NSString</span> *queryStringPair, <span class=\"built_in\">NSUInteger</span> idx, <span class=\"built_in\">BOOL</span> *stop) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">NSRange</span> range = [queryStringPair rangeOfString:<span class=\"string\">@\"=\"</span>];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (range.location != <span class=\"built_in\">NSNotFound</span>) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">NSString</span> *key = [queryStringPair substringToIndex:range.location];</span><br><span class=\"line\">            <span class=\"built_in\">NSString</span> *value = [queryStringPair substringFromIndex:range.location + <span class=\"number\">1</span>];</span><br><span class=\"line\">            [params setValue:value forKey:key];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> params;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>简单介绍下ios开发过程中实现的页面布局自动化、页面跳转自动化</p>","more":"<ul>\n<li><p>VIPER页面布局自动化</p>\n<p>  通过预定义的json实现，可参考  <a href=\"https://github.com/andyyhope/nemo\" target=\"_blank\" rel=\"noopener\">https://github.com/andyyhope/nemo</a></p>\n<p>  轻量级的可以参考下<a href=\"https://wiki.open.qq.com/index.php?title=mobile/SDK%E4%B8%8B%E8%BD%BD&amp;oldid=47795\" target=\"_blank\" rel=\"noopener\">https://wiki.open.qq.com/index.php?title=mobile/SDK%E4%B8%8B%E8%BD%BD&amp;oldid=47795</a></p>\n<p>  都是通过json的配置，来进行ui的布局，需要app预埋支持</p>\n</li>\n<li><p>页面跳转自动化</p>\n<p>  页面跳转都可以通过 scheme://的方式，也就是router方式来实现，包括参数的传递都在scheme://的query部分，比如 izrb://<a href=\"http://www.domain.com/product?pid=10，页面scheme配置好后，跳转可通过路由URLSchemeCenter来实现\" target=\"_blank\" rel=\"noopener\">www.domain.com/product?pid=10，页面scheme配置好后，跳转可通过路由URLSchemeCenter来实现</a></p>\n</li>\n</ul>\n<p>以下为参考实现</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">void</span> (^CodeBlock)(<span class=\"keyword\">id</span> para);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@interface</span> <span class=\"title\">URLSchemeCenter</span> : <span class=\"title\">NSObject</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)registerURL:(<span class=\"built_in\">NSURL</span> *)url forCodeBlock:(CodeBlock)codeBlock;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)executeURL:(<span class=\"built_in\">NSURL</span> *)url;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@implementation</span> <span class=\"title\">URLSchemeCenter</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">instancetype</span>)init</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">self</span> = [<span class=\"keyword\">super</span> init];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">self</span>) &#123;</span><br><span class=\"line\">        _selMap = [[<span class=\"built_in\">NSMutableDictionary</span> alloc] init];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">self</span>.schemeMap = [[<span class=\"built_in\">NSMutableDictionary</span> alloc] init];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)registerURL:(<span class=\"built_in\">NSURL</span> *)url forCodeBlock:(CodeBlock)codeBlock</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (![url isKindOfClass:<span class=\"built_in\">NSURL</span>.class]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">NO</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!codeBlock) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">NO</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSString</span> *key = url.absoluteString.lowercaseString;</span><br><span class=\"line\">    CodeBlock value = [codeBlock <span class=\"keyword\">copy</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    [<span class=\"keyword\">self</span>.schemeMap setObject:value forKey:key];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">YES</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)executeURL:(<span class=\"built_in\">NSURL</span> *)url</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (![url isKindOfClass:<span class=\"built_in\">NSURL</span>.class]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">NO</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSString</span> *key = [url.absoluteString componentsSeparatedByString:<span class=\"string\">@\"?\"</span>].firstObject.lowercaseString;</span><br><span class=\"line\">    </span><br><span class=\"line\">    CodeBlock value = [<span class=\"keyword\">self</span>.schemeMap objectForKey:key];</span><br><span class=\"line\">    </span><br><span class=\"line\">    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(<span class=\"number\">0.1</span>f * <span class=\"built_in\">NSEC_PER_SEC</span>)), dispatch_get_main_queue(), ^&#123;</span><br><span class=\"line\">        <span class=\"built_in\">NSDictionary</span> *params = [<span class=\"keyword\">self</span> getQueryObj:url.query];</span><br><span class=\"line\">        value(params);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">YES</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">NSDictionary</span> *)getQueryObj:(<span class=\"built_in\">NSString</span> *)string</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (![string isKindOfClass: [<span class=\"built_in\">NSString</span> <span class=\"keyword\">class</span>]]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">nil</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSMutableDictionary</span> *params = [<span class=\"built_in\">NSMutableDictionary</span> dictionaryWithCapacity:<span class=\"number\">0</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSArray</span> *queryStringPairs = [string componentsSeparatedByString:<span class=\"string\">@\"&amp;\"</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    [queryStringPairs enumerateObjectsUsingBlock:^(<span class=\"built_in\">NSString</span> *queryStringPair, <span class=\"built_in\">NSUInteger</span> idx, <span class=\"built_in\">BOOL</span> *stop) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">NSRange</span> range = [queryStringPair rangeOfString:<span class=\"string\">@\"=\"</span>];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (range.location != <span class=\"built_in\">NSNotFound</span>) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">NSString</span> *key = [queryStringPair substringToIndex:range.location];</span><br><span class=\"line\">            <span class=\"built_in\">NSString</span> *value = [queryStringPair substringFromIndex:range.location + <span class=\"number\">1</span>];</span><br><span class=\"line\">            [params setValue:value forKey:key];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> params;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br></pre></td></tr></table></figure>"},{"title":"iOS模块化去耦合实现","date":"2017-01-14T07:33:31.000Z","comments":1,"_content":"\n简单介绍下ios开发过程中实现的模块化去耦合，随着业务增长，这个是需要实现的\n\n<!-- more -->\n\n###模块介绍\n  \n  根据业务功能，拆分的相对独立的业务板块，比如 支付模块、 common模块、账号模块、产品模块、交易模块、运营模块、资产OK\n\n###模块去耦合\n\t\n  就是模块间没有直接的互相import，比如 产品模块，有个按钮，点击需要判断，如果登陆用户，则去购买页面，否则去登陆页面；这种情况下，如果不做去耦合，那么产品模块的controller需要持有购买页面的controller.h、登陆页面的controller.h、是否登陆的model.h ，这样就相当于 产品模块、账号模块、交易模块都重度耦合了，去耦合就是实现 产品模块里面 不持有 其它业务模块的class，达到即便其他业务模块的代码从工程remove掉，也可以 build success的效果\n  \n###实现方式\n\n* URL scheme，open URL 方式，缺点是只能单向传递，反向回馈处理不友好\n\n* 模块通信路由器利用protocol协议方式,runtime映射,面向接口编程POP，只声明方法，不实现方法，以接口依赖的方式取代对象依赖，双向通信，可以提供所有需求服务\n  \n  1. 简单介绍下路由器实现，2个API，一个是 负责register module，一个是负责获取module的instance\n  \n```objc\n@interface ModuleServiceCenter : NSObject\n\n- (void)registerService:(Protocol *)service forProvider:(Class)provider;\n\n- (id)getProviderByService:(Protocol *)service;\n\n@end\n\n@implementation ModuleServiceCenter\n\n- (void)registerService:(Protocol *)service forProvider:(Class)provider\n{\n    NSString *serviceStr = [NSString stringWithCString:protocol_getName(service) encoding:NSUTF8StringEncoding];\n    \n    NSString *providerStr = [NSString stringWithCString:class_getName(provider) encoding:NSUTF8StringEncoding];\n    \n    [_serviceProviderMap setObject:providerStr forKey:serviceStr];\n}\n\n- (id)getProviderByService:(Protocol *)service\n{\n    Class class = [self getClassByService:service];\n    \n    SEL sel = @selector(getModuleInstance);\n    \n    Method method = class_getClassMethod(class, sel);\n    \n    if (method) {\n        id (*typed_msgSend)(id, SEL) = (void *)objc_msgSend;\n        return typed_msgSend(class, sel);\n    }\n    \n    return class;\n}\n\n@end\n\n```\n  \n2. 接入方面，每个业务模块都有一份protocol文件，该文件代表了本模块能提供的所有的服务，比如如下是account模块的protocol文件,提供了5个API服务\n\n```objc\n@protocol AccountServiceProtocol\n\n- (UIViewController *)getSettingController;\n\n- (id)getLoginViewController;\n\n- (void)refreshUserBaseInfo;\n\n-(BOOL)isLogin;\n-(BOOL)isBankCard;\n\n@end\n\n```\n\n同时，业务模块还要有一份能实现业务模块protocol的provider类，比如\n\n```objc\n@interface AccountServiceProvider : NSObject <AccountServiceProtocol>\n\n@end\n\n@implementation AccountServiceProvider\n\n- (UIViewController *)getSettingController;\n{\n    SettingViewController *vc = [[SettingViewController alloc] init];\n    return vc;\n}\n\n- (id)getLoginViewController\n{\n    LoginViewController *vc = [[LoginViewController alloc] init];\n    \n    return vc;\n}\n\n- (void)refreshUserBaseInfo\n{\n    [[UserService service] refreshInfo];\n}\n\n-(BOOL)isLogin\n{\n    return UserInfo.share.login;\n}\n\n-(BOOL)isBankCard\n{\n    return isValid(UserInfo.share.bankName);\n}\n\n@end\n\n```\n\n3. 这样在+load方法里，对 account模块进行 register，注册完成后，其他业务模块就可以利用protocol路由来使用account模块提供的上述5个API\n\n```objc\n+ (void)load\n{\n    [[ModuleServiceCenter shareCenter] registerService:@protocol(AccountServiceProtocol) forProvider:[AccountServiceProvider class]];\n}\n```\n\n4. 使用API是如下方式\n\n```OBJC\n// 在产品模块里\nid<AccountServiceProtocol> accountProvider = [ModuleServiceCenter.shareCenter getProviderByService:@protocol(AccountServiceProtocol)];\n\nif (!accountProvider.isLogin) {\n\tUIViewController *vc = [accountProvider getLoginViewController];\n\t[self.navigationController presentViewController:vc animated:YES completion:nil];\n}\n```\n\nend，经过这个protocol router的方式，产品模块里面使用 account的服务，就可以不需要import account模块的类了，这样实现了代码逻辑去耦合\n\n\n\n\n\n","source":"_posts/module.md","raw":"---\ntitle: \"iOS模块化去耦合实现\"\ndate: 2017-01-14 15:33:31 +0800\ncomments: true\ntags:\n- 模块化\n- 去耦合\ncategories:\n- [模块化]\n- [去耦合]\n---\n\n简单介绍下ios开发过程中实现的模块化去耦合，随着业务增长，这个是需要实现的\n\n<!-- more -->\n\n###模块介绍\n  \n  根据业务功能，拆分的相对独立的业务板块，比如 支付模块、 common模块、账号模块、产品模块、交易模块、运营模块、资产OK\n\n###模块去耦合\n\t\n  就是模块间没有直接的互相import，比如 产品模块，有个按钮，点击需要判断，如果登陆用户，则去购买页面，否则去登陆页面；这种情况下，如果不做去耦合，那么产品模块的controller需要持有购买页面的controller.h、登陆页面的controller.h、是否登陆的model.h ，这样就相当于 产品模块、账号模块、交易模块都重度耦合了，去耦合就是实现 产品模块里面 不持有 其它业务模块的class，达到即便其他业务模块的代码从工程remove掉，也可以 build success的效果\n  \n###实现方式\n\n* URL scheme，open URL 方式，缺点是只能单向传递，反向回馈处理不友好\n\n* 模块通信路由器利用protocol协议方式,runtime映射,面向接口编程POP，只声明方法，不实现方法，以接口依赖的方式取代对象依赖，双向通信，可以提供所有需求服务\n  \n  1. 简单介绍下路由器实现，2个API，一个是 负责register module，一个是负责获取module的instance\n  \n```objc\n@interface ModuleServiceCenter : NSObject\n\n- (void)registerService:(Protocol *)service forProvider:(Class)provider;\n\n- (id)getProviderByService:(Protocol *)service;\n\n@end\n\n@implementation ModuleServiceCenter\n\n- (void)registerService:(Protocol *)service forProvider:(Class)provider\n{\n    NSString *serviceStr = [NSString stringWithCString:protocol_getName(service) encoding:NSUTF8StringEncoding];\n    \n    NSString *providerStr = [NSString stringWithCString:class_getName(provider) encoding:NSUTF8StringEncoding];\n    \n    [_serviceProviderMap setObject:providerStr forKey:serviceStr];\n}\n\n- (id)getProviderByService:(Protocol *)service\n{\n    Class class = [self getClassByService:service];\n    \n    SEL sel = @selector(getModuleInstance);\n    \n    Method method = class_getClassMethod(class, sel);\n    \n    if (method) {\n        id (*typed_msgSend)(id, SEL) = (void *)objc_msgSend;\n        return typed_msgSend(class, sel);\n    }\n    \n    return class;\n}\n\n@end\n\n```\n  \n2. 接入方面，每个业务模块都有一份protocol文件，该文件代表了本模块能提供的所有的服务，比如如下是account模块的protocol文件,提供了5个API服务\n\n```objc\n@protocol AccountServiceProtocol\n\n- (UIViewController *)getSettingController;\n\n- (id)getLoginViewController;\n\n- (void)refreshUserBaseInfo;\n\n-(BOOL)isLogin;\n-(BOOL)isBankCard;\n\n@end\n\n```\n\n同时，业务模块还要有一份能实现业务模块protocol的provider类，比如\n\n```objc\n@interface AccountServiceProvider : NSObject <AccountServiceProtocol>\n\n@end\n\n@implementation AccountServiceProvider\n\n- (UIViewController *)getSettingController;\n{\n    SettingViewController *vc = [[SettingViewController alloc] init];\n    return vc;\n}\n\n- (id)getLoginViewController\n{\n    LoginViewController *vc = [[LoginViewController alloc] init];\n    \n    return vc;\n}\n\n- (void)refreshUserBaseInfo\n{\n    [[UserService service] refreshInfo];\n}\n\n-(BOOL)isLogin\n{\n    return UserInfo.share.login;\n}\n\n-(BOOL)isBankCard\n{\n    return isValid(UserInfo.share.bankName);\n}\n\n@end\n\n```\n\n3. 这样在+load方法里，对 account模块进行 register，注册完成后，其他业务模块就可以利用protocol路由来使用account模块提供的上述5个API\n\n```objc\n+ (void)load\n{\n    [[ModuleServiceCenter shareCenter] registerService:@protocol(AccountServiceProtocol) forProvider:[AccountServiceProvider class]];\n}\n```\n\n4. 使用API是如下方式\n\n```OBJC\n// 在产品模块里\nid<AccountServiceProtocol> accountProvider = [ModuleServiceCenter.shareCenter getProviderByService:@protocol(AccountServiceProtocol)];\n\nif (!accountProvider.isLogin) {\n\tUIViewController *vc = [accountProvider getLoginViewController];\n\t[self.navigationController presentViewController:vc animated:YES completion:nil];\n}\n```\n\nend，经过这个protocol router的方式，产品模块里面使用 account的服务，就可以不需要import account模块的类了，这样实现了代码逻辑去耦合\n\n\n\n\n\n","slug":"module","published":1,"updated":"2020-06-27T07:48:51.745Z","layout":"post","photos":[],"link":"","_id":"ckbxmgp9a000kty3jacdlbr4x","content":"<p>简单介绍下ios开发过程中实现的模块化去耦合，随着业务增长，这个是需要实现的</p>\n<a id=\"more\"></a>\n\n<p>###模块介绍</p>\n<p>  根据业务功能，拆分的相对独立的业务板块，比如 支付模块、 common模块、账号模块、产品模块、交易模块、运营模块、资产OK</p>\n<p>###模块去耦合</p>\n<p>  就是模块间没有直接的互相import，比如 产品模块，有个按钮，点击需要判断，如果登陆用户，则去购买页面，否则去登陆页面；这种情况下，如果不做去耦合，那么产品模块的controller需要持有购买页面的controller.h、登陆页面的controller.h、是否登陆的model.h ，这样就相当于 产品模块、账号模块、交易模块都重度耦合了，去耦合就是实现 产品模块里面 不持有 其它业务模块的class，达到即便其他业务模块的代码从工程remove掉，也可以 build success的效果</p>\n<p>###实现方式</p>\n<ul>\n<li><p>URL scheme，open URL 方式，缺点是只能单向传递，反向回馈处理不友好</p>\n</li>\n<li><p>模块通信路由器利用protocol协议方式,runtime映射,面向接口编程POP，只声明方法，不实现方法，以接口依赖的方式取代对象依赖，双向通信，可以提供所有需求服务</p>\n<ol>\n<li>简单介绍下路由器实现，2个API，一个是 负责register module，一个是负责获取module的instance</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@interface</span> <span class=\"title\">ModuleServiceCenter</span> : <span class=\"title\">NSObject</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)registerService:(Protocol *)service forProvider:(Class)provider;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">id</span>)getProviderByService:(Protocol *)service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@implementation</span> <span class=\"title\">ModuleServiceCenter</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)registerService:(Protocol *)service forProvider:(Class)provider</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">NSString</span> *serviceStr = [<span class=\"built_in\">NSString</span> stringWithCString:protocol_getName(service) encoding:<span class=\"built_in\">NSUTF8StringEncoding</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSString</span> *providerStr = [<span class=\"built_in\">NSString</span> stringWithCString:class_getName(provider) encoding:<span class=\"built_in\">NSUTF8StringEncoding</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    [_serviceProviderMap setObject:providerStr forKey:serviceStr];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">id</span>)getProviderByService:(Protocol *)service</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Class <span class=\"keyword\">class</span> = [<span class=\"keyword\">self</span> getClassByService:service];</span><br><span class=\"line\">    </span><br><span class=\"line\">    SEL sel = <span class=\"keyword\">@selector</span>(getModuleInstance);</span><br><span class=\"line\">    </span><br><span class=\"line\">    Method method = class_getClassMethod(<span class=\"keyword\">class</span>, sel);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (method) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">id</span> (*typed_msgSend)(<span class=\"keyword\">id</span>, SEL) = (<span class=\"keyword\">void</span> *)objc_msgSend;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> typed_msgSend(<span class=\"keyword\">class</span>, sel);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">class</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>接入方面，每个业务模块都有一份protocol文件，该文件代表了本模块能提供的所有的服务，比如如下是account模块的protocol文件,提供了5个API服务</li>\n</ol>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@protocol</span> <span class=\"title\">AccountServiceProtocol</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">UIViewController</span> *)getSettingController;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">id</span>)getLoginViewController;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)refreshUserBaseInfo;</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"built_in\">BOOL</span>)isLogin;</span><br><span class=\"line\">-(<span class=\"built_in\">BOOL</span>)isBankCard;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br></pre></td></tr></table></figure>\n\n<p>同时，业务模块还要有一份能实现业务模块protocol的provider类，比如</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@interface</span> <span class=\"title\">AccountServiceProvider</span> : <span class=\"title\">NSObject</span> &lt;<span class=\"title\">AccountServiceProtocol</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@implementation</span> <span class=\"title\">AccountServiceProvider</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">UIViewController</span> *)getSettingController;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    SettingViewController *vc = [[SettingViewController alloc] init];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> vc;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">id</span>)getLoginViewController</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    LoginViewController *vc = [[LoginViewController alloc] init];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> vc;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)refreshUserBaseInfo</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [[UserService service] refreshInfo];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"built_in\">BOOL</span>)isLogin</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> UserInfo.share.login;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"built_in\">BOOL</span>)isBankCard</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> isValid(UserInfo.share.bankName);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>这样在+load方法里，对 account模块进行 register，注册完成后，其他业务模块就可以利用protocol路由来使用account模块提供的上述5个API</li>\n</ol>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ (<span class=\"keyword\">void</span>)load</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [[ModuleServiceCenter shareCenter] registerService:<span class=\"class\"><span class=\"keyword\">@protocol</span>(<span class=\"title\">AccountServiceProtocol</span>) <span class=\"title\">forProvider</span>:[<span class=\"title\">AccountServiceProvider</span> <span class=\"title\">class</span>]];</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>使用API是如下方式</li>\n</ol>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在产品模块里</span></span><br><span class=\"line\"><span class=\"keyword\">id</span>&lt;AccountServiceProtocol&gt; accountProvider = [ModuleServiceCenter.shareCenter getProviderByService:<span class=\"class\"><span class=\"keyword\">@protocol</span>(<span class=\"title\">AccountServiceProtocol</span>)];</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!accountProvider.isLogin) &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">UIViewController</span> *vc = [accountProvider getLoginViewController];</span><br><span class=\"line\">\t[<span class=\"keyword\">self</span>.navigationController presentViewController:vc animated:<span class=\"literal\">YES</span> completion:<span class=\"literal\">nil</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>end，经过这个protocol router的方式，产品模块里面使用 account的服务，就可以不需要import account模块的类了，这样实现了代码逻辑去耦合</p>\n","site":{"data":{}},"excerpt":"<p>简单介绍下ios开发过程中实现的模块化去耦合，随着业务增长，这个是需要实现的</p>","more":"<p>###模块介绍</p>\n<p>  根据业务功能，拆分的相对独立的业务板块，比如 支付模块、 common模块、账号模块、产品模块、交易模块、运营模块、资产OK</p>\n<p>###模块去耦合</p>\n<p>  就是模块间没有直接的互相import，比如 产品模块，有个按钮，点击需要判断，如果登陆用户，则去购买页面，否则去登陆页面；这种情况下，如果不做去耦合，那么产品模块的controller需要持有购买页面的controller.h、登陆页面的controller.h、是否登陆的model.h ，这样就相当于 产品模块、账号模块、交易模块都重度耦合了，去耦合就是实现 产品模块里面 不持有 其它业务模块的class，达到即便其他业务模块的代码从工程remove掉，也可以 build success的效果</p>\n<p>###实现方式</p>\n<ul>\n<li><p>URL scheme，open URL 方式，缺点是只能单向传递，反向回馈处理不友好</p>\n</li>\n<li><p>模块通信路由器利用protocol协议方式,runtime映射,面向接口编程POP，只声明方法，不实现方法，以接口依赖的方式取代对象依赖，双向通信，可以提供所有需求服务</p>\n<ol>\n<li>简单介绍下路由器实现，2个API，一个是 负责register module，一个是负责获取module的instance</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@interface</span> <span class=\"title\">ModuleServiceCenter</span> : <span class=\"title\">NSObject</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)registerService:(Protocol *)service forProvider:(Class)provider;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">id</span>)getProviderByService:(Protocol *)service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@implementation</span> <span class=\"title\">ModuleServiceCenter</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)registerService:(Protocol *)service forProvider:(Class)provider</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">NSString</span> *serviceStr = [<span class=\"built_in\">NSString</span> stringWithCString:protocol_getName(service) encoding:<span class=\"built_in\">NSUTF8StringEncoding</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">NSString</span> *providerStr = [<span class=\"built_in\">NSString</span> stringWithCString:class_getName(provider) encoding:<span class=\"built_in\">NSUTF8StringEncoding</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    [_serviceProviderMap setObject:providerStr forKey:serviceStr];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">id</span>)getProviderByService:(Protocol *)service</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Class <span class=\"keyword\">class</span> = [<span class=\"keyword\">self</span> getClassByService:service];</span><br><span class=\"line\">    </span><br><span class=\"line\">    SEL sel = <span class=\"keyword\">@selector</span>(getModuleInstance);</span><br><span class=\"line\">    </span><br><span class=\"line\">    Method method = class_getClassMethod(<span class=\"keyword\">class</span>, sel);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (method) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">id</span> (*typed_msgSend)(<span class=\"keyword\">id</span>, SEL) = (<span class=\"keyword\">void</span> *)objc_msgSend;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> typed_msgSend(<span class=\"keyword\">class</span>, sel);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">class</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>接入方面，每个业务模块都有一份protocol文件，该文件代表了本模块能提供的所有的服务，比如如下是account模块的protocol文件,提供了5个API服务</li>\n</ol>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@protocol</span> <span class=\"title\">AccountServiceProtocol</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">UIViewController</span> *)getSettingController;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">id</span>)getLoginViewController;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)refreshUserBaseInfo;</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"built_in\">BOOL</span>)isLogin;</span><br><span class=\"line\">-(<span class=\"built_in\">BOOL</span>)isBankCard;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br></pre></td></tr></table></figure>\n\n<p>同时，业务模块还要有一份能实现业务模块protocol的provider类，比如</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@interface</span> <span class=\"title\">AccountServiceProvider</span> : <span class=\"title\">NSObject</span> &lt;<span class=\"title\">AccountServiceProtocol</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@implementation</span> <span class=\"title\">AccountServiceProvider</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">UIViewController</span> *)getSettingController;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    SettingViewController *vc = [[SettingViewController alloc] init];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> vc;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">id</span>)getLoginViewController</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    LoginViewController *vc = [[LoginViewController alloc] init];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> vc;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)refreshUserBaseInfo</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [[UserService service] refreshInfo];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"built_in\">BOOL</span>)isLogin</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> UserInfo.share.login;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"built_in\">BOOL</span>)isBankCard</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> isValid(UserInfo.share.bankName);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>这样在+load方法里，对 account模块进行 register，注册完成后，其他业务模块就可以利用protocol路由来使用account模块提供的上述5个API</li>\n</ol>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ (<span class=\"keyword\">void</span>)load</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [[ModuleServiceCenter shareCenter] registerService:<span class=\"class\"><span class=\"keyword\">@protocol</span>(<span class=\"title\">AccountServiceProtocol</span>) <span class=\"title\">forProvider</span>:[<span class=\"title\">AccountServiceProvider</span> <span class=\"title\">class</span>]];</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>使用API是如下方式</li>\n</ol>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在产品模块里</span></span><br><span class=\"line\"><span class=\"keyword\">id</span>&lt;AccountServiceProtocol&gt; accountProvider = [ModuleServiceCenter.shareCenter getProviderByService:<span class=\"class\"><span class=\"keyword\">@protocol</span>(<span class=\"title\">AccountServiceProtocol</span>)];</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!accountProvider.isLogin) &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">UIViewController</span> *vc = [accountProvider getLoginViewController];</span><br><span class=\"line\">\t[<span class=\"keyword\">self</span>.navigationController presentViewController:vc animated:<span class=\"literal\">YES</span> completion:<span class=\"literal\">nil</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>end，经过这个protocol router的方式，产品模块里面使用 account的服务，就可以不需要import account模块的类了，这样实现了代码逻辑去耦合</p>"},{"title":"ios 自动化打包部署","date":"2019-12-01T11:00:07.000Z","comments":1,"_content":"\n介绍下iOS 自动化打包部署\n\n<!-- more -->\n\n###前沿\n\napp开发完成提测后，受到打包给测试太麻烦，占用开发者时间和电脑，现在都是使用Jenkins平台完成iOS 自动化打包，并自动部署到 分发平台，如蒲公英，appstore等平台\n\n###自动化打包部署shell脚本内容\n\n1. 拉取代码\n\n```shell\n// 强制使用远程代码覆盖本地，保证本地代码和服务器的一致性\ngit fetch —-all \ngit reset —-hard\n\n// 拉取代码\ngit pull\n```\n\n2. 打包生成ipa包\n\n```shell\n// xcodebuild 是 Xcode的命令行工具\n\nxcodebuild clean\n\nxcodebuild -workspace *.xcwork*  -scheme 'app' -destination generic/platform=iOS -archivePath /Users/Desktop/app/project/archive/app.xcarchive archive\n\nxcodebuild -exportArchive -exportOptionsPlist /Users/Desktop/app/cmd/exportOptions.plist -archivePath /Users/Desktop/app/project/archive/app.xcarchive -exportPath /Users/Desktop/ipa/app${DATE}  -allowProvisioningUpdates\n\n其中 exportOptions.plist 里面指明了 签名方式 (ad-hoc 、app-store、devemlopment)\n\n```\n\n3. 上传至 fir 、appstore 等平台\n\n使用xcrun altool上传AppStore方式 (altool 是 application loader 的命令行工具)\n\n```shell\nalias altool='/Applications/Xcode.app/Contents/Applications/Application\\ Loader.app/Contents/Frameworks/ITunesSoftwareService.framework/Versions/A/Support/altool'\n```\n\n验证\n\n```shell\naltool --validate-app -f /Users/Desktop/app/ipa/app${DATE}/app.ipa -u email -p password --output-format xml\n```\n\n上传\n\n```shell\naltool --upload-app -f /Users/Desktop/app/ipa/app${DATE}/app.ipa -u email -p password --output-format xml\n\nxcrun altool --validate-app -f xxx/xxx/xxx.ipa -t ios --apiKey xxxxxxxx --apiIssuer xxxxxx --verbose --output-format xml\n\nxcrun altool --upload-app -f xxx/xxx/xxx.ipa -t ios --apiKey xxxxxxxx --apiIssuer xxxxxx --verbose  --output-format xml \n```\n\n使用fir上传fir.im网站 (fir 命令 是 fir.im网站开发的，需要去官网下载支持)\n\n```shell\nfir login token\n\nfir p /Users/Desktop/app/ipa/app${DATE}/app.ipa\n```\n","source":"_posts/package.md","raw":"---\ntitle: \"ios 自动化打包部署\"\ndate: 2019-12-1 19:00:07 +0800\ncomments: true\ntags:\n- 自动化打包部署\ncategories:\n- [自动化打包部署]\n---\n\n介绍下iOS 自动化打包部署\n\n<!-- more -->\n\n###前沿\n\napp开发完成提测后，受到打包给测试太麻烦，占用开发者时间和电脑，现在都是使用Jenkins平台完成iOS 自动化打包，并自动部署到 分发平台，如蒲公英，appstore等平台\n\n###自动化打包部署shell脚本内容\n\n1. 拉取代码\n\n```shell\n// 强制使用远程代码覆盖本地，保证本地代码和服务器的一致性\ngit fetch —-all \ngit reset —-hard\n\n// 拉取代码\ngit pull\n```\n\n2. 打包生成ipa包\n\n```shell\n// xcodebuild 是 Xcode的命令行工具\n\nxcodebuild clean\n\nxcodebuild -workspace *.xcwork*  -scheme 'app' -destination generic/platform=iOS -archivePath /Users/Desktop/app/project/archive/app.xcarchive archive\n\nxcodebuild -exportArchive -exportOptionsPlist /Users/Desktop/app/cmd/exportOptions.plist -archivePath /Users/Desktop/app/project/archive/app.xcarchive -exportPath /Users/Desktop/ipa/app${DATE}  -allowProvisioningUpdates\n\n其中 exportOptions.plist 里面指明了 签名方式 (ad-hoc 、app-store、devemlopment)\n\n```\n\n3. 上传至 fir 、appstore 等平台\n\n使用xcrun altool上传AppStore方式 (altool 是 application loader 的命令行工具)\n\n```shell\nalias altool='/Applications/Xcode.app/Contents/Applications/Application\\ Loader.app/Contents/Frameworks/ITunesSoftwareService.framework/Versions/A/Support/altool'\n```\n\n验证\n\n```shell\naltool --validate-app -f /Users/Desktop/app/ipa/app${DATE}/app.ipa -u email -p password --output-format xml\n```\n\n上传\n\n```shell\naltool --upload-app -f /Users/Desktop/app/ipa/app${DATE}/app.ipa -u email -p password --output-format xml\n\nxcrun altool --validate-app -f xxx/xxx/xxx.ipa -t ios --apiKey xxxxxxxx --apiIssuer xxxxxx --verbose --output-format xml\n\nxcrun altool --upload-app -f xxx/xxx/xxx.ipa -t ios --apiKey xxxxxxxx --apiIssuer xxxxxx --verbose  --output-format xml \n```\n\n使用fir上传fir.im网站 (fir 命令 是 fir.im网站开发的，需要去官网下载支持)\n\n```shell\nfir login token\n\nfir p /Users/Desktop/app/ipa/app${DATE}/app.ipa\n```\n","slug":"package","published":1,"updated":"2020-06-28T09:48:39.740Z","_id":"ckbxmgp9b000mty3j30lcfqz2","layout":"post","photos":[],"link":"","content":"<p>介绍下iOS 自动化打包部署</p>\n<a id=\"more\"></a>\n\n<p>###前沿</p>\n<p>app开发完成提测后，受到打包给测试太麻烦，占用开发者时间和电脑，现在都是使用Jenkins平台完成iOS 自动化打包，并自动部署到 分发平台，如蒲公英，appstore等平台</p>\n<p>###自动化打包部署shell脚本内容</p>\n<ol>\n<li>拉取代码</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 强制使用远程代码覆盖本地，保证本地代码和服务器的一致性</span><br><span class=\"line\">git fetch —-all </span><br><span class=\"line\">git reset —-hard</span><br><span class=\"line\"></span><br><span class=\"line\">// 拉取代码</span><br><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>打包生成ipa包</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// xcodebuild 是 Xcode的命令行工具</span><br><span class=\"line\"></span><br><span class=\"line\">xcodebuild clean</span><br><span class=\"line\"></span><br><span class=\"line\">xcodebuild -workspace *.xcwork*  -scheme 'app' -destination generic/platform=iOS -archivePath /Users/Desktop/app/project/archive/app.xcarchive archive</span><br><span class=\"line\"></span><br><span class=\"line\">xcodebuild -exportArchive -exportOptionsPlist /Users/Desktop/app/cmd/exportOptions.plist -archivePath /Users/Desktop/app/project/archive/app.xcarchive -exportPath /Users/Desktop/ipa/app$&#123;DATE&#125;  -allowProvisioningUpdates</span><br><span class=\"line\"></span><br><span class=\"line\">其中 exportOptions.plist 里面指明了 签名方式 (ad-hoc 、app-store、devemlopment)</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>上传至 fir 、appstore 等平台</li>\n</ol>\n<p>使用xcrun altool上传AppStore方式 (altool 是 application loader 的命令行工具)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alias altool='/Applications/Xcode.app/Contents/Applications/Application\\ Loader.app/Contents/Frameworks/ITunesSoftwareService.framework/Versions/A/Support/altool'</span><br></pre></td></tr></table></figure>\n\n<p>验证</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">altool --validate-app -f /Users/Desktop/app/ipa/app$&#123;DATE&#125;/app.ipa -u email -p password --output-format xml</span><br></pre></td></tr></table></figure>\n\n<p>上传</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">altool --upload-app -f /Users/Desktop/app/ipa/app$&#123;DATE&#125;/app.ipa -u email -p password --output-format xml</span><br><span class=\"line\"></span><br><span class=\"line\">xcrun altool --validate-app -f xxx/xxx/xxx.ipa -t ios --apiKey xxxxxxxx --apiIssuer xxxxxx --verbose --output-format xml</span><br><span class=\"line\"></span><br><span class=\"line\">xcrun altool --upload-app -f xxx/xxx/xxx.ipa -t ios --apiKey xxxxxxxx --apiIssuer xxxxxx --verbose  --output-format xml</span><br></pre></td></tr></table></figure>\n\n<p>使用fir上传fir.im网站 (fir 命令 是 fir.im网站开发的，需要去官网下载支持)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fir login token</span><br><span class=\"line\"></span><br><span class=\"line\">fir p /Users/Desktop/app/ipa/app$&#123;DATE&#125;/app.ipa</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>介绍下iOS 自动化打包部署</p>","more":"<p>###前沿</p>\n<p>app开发完成提测后，受到打包给测试太麻烦，占用开发者时间和电脑，现在都是使用Jenkins平台完成iOS 自动化打包，并自动部署到 分发平台，如蒲公英，appstore等平台</p>\n<p>###自动化打包部署shell脚本内容</p>\n<ol>\n<li>拉取代码</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 强制使用远程代码覆盖本地，保证本地代码和服务器的一致性</span><br><span class=\"line\">git fetch —-all </span><br><span class=\"line\">git reset —-hard</span><br><span class=\"line\"></span><br><span class=\"line\">// 拉取代码</span><br><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>打包生成ipa包</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// xcodebuild 是 Xcode的命令行工具</span><br><span class=\"line\"></span><br><span class=\"line\">xcodebuild clean</span><br><span class=\"line\"></span><br><span class=\"line\">xcodebuild -workspace *.xcwork*  -scheme 'app' -destination generic/platform=iOS -archivePath /Users/Desktop/app/project/archive/app.xcarchive archive</span><br><span class=\"line\"></span><br><span class=\"line\">xcodebuild -exportArchive -exportOptionsPlist /Users/Desktop/app/cmd/exportOptions.plist -archivePath /Users/Desktop/app/project/archive/app.xcarchive -exportPath /Users/Desktop/ipa/app$&#123;DATE&#125;  -allowProvisioningUpdates</span><br><span class=\"line\"></span><br><span class=\"line\">其中 exportOptions.plist 里面指明了 签名方式 (ad-hoc 、app-store、devemlopment)</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>上传至 fir 、appstore 等平台</li>\n</ol>\n<p>使用xcrun altool上传AppStore方式 (altool 是 application loader 的命令行工具)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alias altool='/Applications/Xcode.app/Contents/Applications/Application\\ Loader.app/Contents/Frameworks/ITunesSoftwareService.framework/Versions/A/Support/altool'</span><br></pre></td></tr></table></figure>\n\n<p>验证</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">altool --validate-app -f /Users/Desktop/app/ipa/app$&#123;DATE&#125;/app.ipa -u email -p password --output-format xml</span><br></pre></td></tr></table></figure>\n\n<p>上传</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">altool --upload-app -f /Users/Desktop/app/ipa/app$&#123;DATE&#125;/app.ipa -u email -p password --output-format xml</span><br><span class=\"line\"></span><br><span class=\"line\">xcrun altool --validate-app -f xxx/xxx/xxx.ipa -t ios --apiKey xxxxxxxx --apiIssuer xxxxxx --verbose --output-format xml</span><br><span class=\"line\"></span><br><span class=\"line\">xcrun altool --upload-app -f xxx/xxx/xxx.ipa -t ios --apiKey xxxxxxxx --apiIssuer xxxxxx --verbose  --output-format xml</span><br></pre></td></tr></table></figure>\n\n<p>使用fir上传fir.im网站 (fir 命令 是 fir.im网站开发的，需要去官网下载支持)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fir login token</span><br><span class=\"line\"></span><br><span class=\"line\">fir p /Users/Desktop/app/ipa/app$&#123;DATE&#125;/app.ipa</span><br></pre></td></tr></table></figure>"},{"title":"app无痕埋点","date":"2020-01-11T12:31:00.000Z","comments":1,"_content":"\n介绍下app客户端实现的无痕埋点的实现方案\n\n<!-- more -->\n\n###无痕埋点实现指标\n\n1. APP启动指标 \n\n2. 页面浏览指标\n\n3. 元素点击指标\n\n4. 元素曝光指标\n\n###无痕埋点实现厂商\n\n![](/images/track-1.png)\n\n###无痕埋点实现方案\n\n1. 采集原始数据\n\n利用oc的动态语言特性，runtime来实现关键方法API的hook，面向aop编程\n\n* APP启动(热启动、冷启动)数据采集\n\t\n```objc\n+(void)load\n{\n    [NSNotificationCenter.defaultCenter addObserver:self selector:@selector(coldLaunchingNoti:) name:UIApplicationDidFinishLaunchingNotification object:nil];\n    [NSNotificationCenter.defaultCenter addObserver:self selector:@selector(hotLaunchingNoti:) name:UIApplicationWillEnterForegroundNotification object:nil];\n}\n\n// 冷启动：打开APP\n+(void)coldLaunchingNoti:(NSNotification *)noti\n{\n\t// todo \n\t// 记录record\n}\n\n// 热启动：APP从后台近前台\n+(void)hotLaunchingNoti:(NSNotification *)noti\n{\n\t// todo \n\t// 记录record\n}\n\n```\n\n* 页面浏览数据采集\n\n```objc\n+(void)load\n{\n    [self swizzleInstanceMethodWithOriginSel:@selector(viewDidAppear:) swizzledSel:@selector(tracklog_viewDidAppear:)];\n    [self swizzleInstanceMethodWithOriginSel:@selector(viewDidDisappear:) swizzledSel:@selector(tracklog_viewDidDisappear:)];\n}\n\n- (void)tracklog_viewDidAppear:(BOOL)animated\n{\n    [self tracklog_viewDidAppear:animated];\n    \n\t// todo 获取 pagename、pagetitle \n\t\n\t// 记录record\n}\n\n- (void)tracklog_viewDidDisappear:(BOOL)animated\n{\n    [self tracklog_viewDidDisappear:animated];\n    \n\t// todo 获取 pagename、pagetitle \n\t\n\t// 记录record\n}\n```\n\n* 元素点击数据采集\n\n```objc\n+(void)load\n{\n    [self swizzleInstanceMethodWithOriginSel:@selector(sendEvent:) swizzledSel:@selector(tracklog_sendEvent:)];\n}\n\n- (void)tracklog_sendEvent:(UIEvent *)event\n{\n    [self tracklog_sendEvent:event];\n    \n    // 找到点击的view\n    \n    // 获取该view的text、xpath、所在页面pagename、pagetitle、子children的信息\n    \n    // 记录 record\n}\n```\n\n* 元素曝光数据采集\n\n以UIScrollView为例\n\n```objc\n+(void)load\n{\n    [self swizzleInstanceMethodWithOriginSel:@selector(layoutSubviews) swizzledSel:@selector(tracklog_layoutSubviews)];\n}\n\n-(void)tracklog_layoutSubviews\n{\n    [self tracklog_layoutSubviews];\n    \n    CGRect visibleRect = CGRectMake(self.contentOffset.x, self.contentOffset.y, self.frame.size.width, self.frame.size.height);\n    \n    // 逐个比较，看该view是否在可视区域，如果在，dictionary中记录view可见性为1，并记录record\n    for (int i = 0; i < self.userEnableSubViewTree.count; i++) {\n        NSNumber *value = [self.tracklogDisplayMark objectForKey:item];\n        BOOL contains = CGRectContainsRect(visibleRect, itemRect);\n        BOOL intersects = CGRectIntersectsRect(visibleRect, itemRect);\n        \n        if (contains) {\n\n\t\t\t  // 记录 record\n            \n            [self.tracklogDisplayMark setObject:@(1) forKey:key];\n        }\n    }\n}\n\n-(void)viewDidLayoutSubviewsNoti:(NSNotification *)noti\n{\n\t// 逐个遍历所有子view， 用一个dictionary记录该view的可见性，初始化时候可见效默认为0\n\t// 简略代码如下\n    for (int i = 0; i < self.userEnableSubViewTree.count; i++) {\n        self.tracklogDisplayMark setObject:@(0) forKey: item];\n    }\n}\n\n```\n\n2. 原始数据入库\n\n将上面的环节采集到的数据，写入sqlite，并表明事件类型，时间、平台，用户、版本、等等 手机环境信息、app 信息等都记录下来\n\n3. 上传数据\n\n根据需要，可以实时上传，也可以 攒够10条上传，可以打开app时候上传，也可以进后台时候上传\n\n需要密上传\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/track.md","raw":"---\ntitle: \"app无痕埋点\"\ndate: 2020-1-11 20:31:00 +0800\ncomments: true\ntags:\n- 无痕埋点\ncategories:\n- [无痕埋点]\n---\n\n介绍下app客户端实现的无痕埋点的实现方案\n\n<!-- more -->\n\n###无痕埋点实现指标\n\n1. APP启动指标 \n\n2. 页面浏览指标\n\n3. 元素点击指标\n\n4. 元素曝光指标\n\n###无痕埋点实现厂商\n\n![](/images/track-1.png)\n\n###无痕埋点实现方案\n\n1. 采集原始数据\n\n利用oc的动态语言特性，runtime来实现关键方法API的hook，面向aop编程\n\n* APP启动(热启动、冷启动)数据采集\n\t\n```objc\n+(void)load\n{\n    [NSNotificationCenter.defaultCenter addObserver:self selector:@selector(coldLaunchingNoti:) name:UIApplicationDidFinishLaunchingNotification object:nil];\n    [NSNotificationCenter.defaultCenter addObserver:self selector:@selector(hotLaunchingNoti:) name:UIApplicationWillEnterForegroundNotification object:nil];\n}\n\n// 冷启动：打开APP\n+(void)coldLaunchingNoti:(NSNotification *)noti\n{\n\t// todo \n\t// 记录record\n}\n\n// 热启动：APP从后台近前台\n+(void)hotLaunchingNoti:(NSNotification *)noti\n{\n\t// todo \n\t// 记录record\n}\n\n```\n\n* 页面浏览数据采集\n\n```objc\n+(void)load\n{\n    [self swizzleInstanceMethodWithOriginSel:@selector(viewDidAppear:) swizzledSel:@selector(tracklog_viewDidAppear:)];\n    [self swizzleInstanceMethodWithOriginSel:@selector(viewDidDisappear:) swizzledSel:@selector(tracklog_viewDidDisappear:)];\n}\n\n- (void)tracklog_viewDidAppear:(BOOL)animated\n{\n    [self tracklog_viewDidAppear:animated];\n    \n\t// todo 获取 pagename、pagetitle \n\t\n\t// 记录record\n}\n\n- (void)tracklog_viewDidDisappear:(BOOL)animated\n{\n    [self tracklog_viewDidDisappear:animated];\n    \n\t// todo 获取 pagename、pagetitle \n\t\n\t// 记录record\n}\n```\n\n* 元素点击数据采集\n\n```objc\n+(void)load\n{\n    [self swizzleInstanceMethodWithOriginSel:@selector(sendEvent:) swizzledSel:@selector(tracklog_sendEvent:)];\n}\n\n- (void)tracklog_sendEvent:(UIEvent *)event\n{\n    [self tracklog_sendEvent:event];\n    \n    // 找到点击的view\n    \n    // 获取该view的text、xpath、所在页面pagename、pagetitle、子children的信息\n    \n    // 记录 record\n}\n```\n\n* 元素曝光数据采集\n\n以UIScrollView为例\n\n```objc\n+(void)load\n{\n    [self swizzleInstanceMethodWithOriginSel:@selector(layoutSubviews) swizzledSel:@selector(tracklog_layoutSubviews)];\n}\n\n-(void)tracklog_layoutSubviews\n{\n    [self tracklog_layoutSubviews];\n    \n    CGRect visibleRect = CGRectMake(self.contentOffset.x, self.contentOffset.y, self.frame.size.width, self.frame.size.height);\n    \n    // 逐个比较，看该view是否在可视区域，如果在，dictionary中记录view可见性为1，并记录record\n    for (int i = 0; i < self.userEnableSubViewTree.count; i++) {\n        NSNumber *value = [self.tracklogDisplayMark objectForKey:item];\n        BOOL contains = CGRectContainsRect(visibleRect, itemRect);\n        BOOL intersects = CGRectIntersectsRect(visibleRect, itemRect);\n        \n        if (contains) {\n\n\t\t\t  // 记录 record\n            \n            [self.tracklogDisplayMark setObject:@(1) forKey:key];\n        }\n    }\n}\n\n-(void)viewDidLayoutSubviewsNoti:(NSNotification *)noti\n{\n\t// 逐个遍历所有子view， 用一个dictionary记录该view的可见性，初始化时候可见效默认为0\n\t// 简略代码如下\n    for (int i = 0; i < self.userEnableSubViewTree.count; i++) {\n        self.tracklogDisplayMark setObject:@(0) forKey: item];\n    }\n}\n\n```\n\n2. 原始数据入库\n\n将上面的环节采集到的数据，写入sqlite，并表明事件类型，时间、平台，用户、版本、等等 手机环境信息、app 信息等都记录下来\n\n3. 上传数据\n\n根据需要，可以实时上传，也可以 攒够10条上传，可以打开app时候上传，也可以进后台时候上传\n\n需要密上传\n\n\n\n\n\n\n\n\n\n\n","slug":"track","published":1,"updated":"2020-06-28T03:57:10.065Z","_id":"ckbxmgp9c000qty3j43wg43w9","layout":"post","photos":[],"link":"","content":"<p>介绍下app客户端实现的无痕埋点的实现方案</p>\n<a id=\"more\"></a>\n\n<p>###无痕埋点实现指标</p>\n<ol>\n<li><p>APP启动指标 </p>\n</li>\n<li><p>页面浏览指标</p>\n</li>\n<li><p>元素点击指标</p>\n</li>\n<li><p>元素曝光指标</p>\n</li>\n</ol>\n<p>###无痕埋点实现厂商</p>\n<p><img src=\"/images/track-1.png\" alt=\"\"></p>\n<p>###无痕埋点实现方案</p>\n<ol>\n<li>采集原始数据</li>\n</ol>\n<p>利用oc的动态语言特性，runtime来实现关键方法API的hook，面向aop编程</p>\n<ul>\n<li>APP启动(热启动、冷启动)数据采集</li>\n</ul>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+(<span class=\"keyword\">void</span>)load</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"built_in\">NSNotificationCenter</span>.defaultCenter addObserver:<span class=\"keyword\">self</span> selector:<span class=\"keyword\">@selector</span>(coldLaunchingNoti:) name:<span class=\"built_in\">UIApplicationDidFinishLaunchingNotification</span> object:<span class=\"literal\">nil</span>];</span><br><span class=\"line\">    [<span class=\"built_in\">NSNotificationCenter</span>.defaultCenter addObserver:<span class=\"keyword\">self</span> selector:<span class=\"keyword\">@selector</span>(hotLaunchingNoti:) name:<span class=\"built_in\">UIApplicationWillEnterForegroundNotification</span> object:<span class=\"literal\">nil</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 冷启动：打开APP</span></span><br><span class=\"line\">+(<span class=\"keyword\">void</span>)coldLaunchingNoti:(<span class=\"built_in\">NSNotification</span> *)noti</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// todo </span></span><br><span class=\"line\">\t<span class=\"comment\">// 记录record</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 热启动：APP从后台近前台</span></span><br><span class=\"line\">+(<span class=\"keyword\">void</span>)hotLaunchingNoti:(<span class=\"built_in\">NSNotification</span> *)noti</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// todo </span></span><br><span class=\"line\">\t<span class=\"comment\">// 记录record</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>页面浏览数据采集</li>\n</ul>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+(<span class=\"keyword\">void</span>)load</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"keyword\">self</span> swizzleInstanceMethodWithOriginSel:<span class=\"keyword\">@selector</span>(viewDidAppear:) swizzledSel:<span class=\"keyword\">@selector</span>(tracklog_viewDidAppear:)];</span><br><span class=\"line\">    [<span class=\"keyword\">self</span> swizzleInstanceMethodWithOriginSel:<span class=\"keyword\">@selector</span>(viewDidDisappear:) swizzledSel:<span class=\"keyword\">@selector</span>(tracklog_viewDidDisappear:)];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)tracklog_viewDidAppear:(<span class=\"built_in\">BOOL</span>)animated</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"keyword\">self</span> tracklog_viewDidAppear:animated];</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"comment\">// todo 获取 pagename、pagetitle </span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 记录record</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)tracklog_viewDidDisappear:(<span class=\"built_in\">BOOL</span>)animated</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"keyword\">self</span> tracklog_viewDidDisappear:animated];</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"comment\">// todo 获取 pagename、pagetitle </span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 记录record</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>元素点击数据采集</li>\n</ul>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+(<span class=\"keyword\">void</span>)load</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"keyword\">self</span> swizzleInstanceMethodWithOriginSel:<span class=\"keyword\">@selector</span>(sendEvent:) swizzledSel:<span class=\"keyword\">@selector</span>(tracklog_sendEvent:)];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)tracklog_sendEvent:(<span class=\"built_in\">UIEvent</span> *)event</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"keyword\">self</span> tracklog_sendEvent:event];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 找到点击的view</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 获取该view的text、xpath、所在页面pagename、pagetitle、子children的信息</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 记录 record</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>元素曝光数据采集</li>\n</ul>\n<p>以UIScrollView为例</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+(<span class=\"keyword\">void</span>)load</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"keyword\">self</span> swizzleInstanceMethodWithOriginSel:<span class=\"keyword\">@selector</span>(layoutSubviews) swizzledSel:<span class=\"keyword\">@selector</span>(tracklog_layoutSubviews)];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>)tracklog_layoutSubviews</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"keyword\">self</span> tracklog_layoutSubviews];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">CGRect</span> visibleRect = <span class=\"built_in\">CGRectMake</span>(<span class=\"keyword\">self</span>.contentOffset.x, <span class=\"keyword\">self</span>.contentOffset.y, <span class=\"keyword\">self</span>.frame.size.width, <span class=\"keyword\">self</span>.frame.size.height);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 逐个比较，看该view是否在可视区域，如果在，dictionary中记录view可见性为1，并记录record</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">self</span>.userEnableSubViewTree.count; i++) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">NSNumber</span> *value = [<span class=\"keyword\">self</span>.tracklogDisplayMark objectForKey:item];</span><br><span class=\"line\">        <span class=\"built_in\">BOOL</span> contains = <span class=\"built_in\">CGRectContainsRect</span>(visibleRect, itemRect);</span><br><span class=\"line\">        <span class=\"built_in\">BOOL</span> intersects = <span class=\"built_in\">CGRectIntersectsRect</span>(visibleRect, itemRect);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (contains) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t  <span class=\"comment\">// 记录 record</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            [<span class=\"keyword\">self</span>.tracklogDisplayMark setObject:@(<span class=\"number\">1</span>) forKey:key];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>)viewDidLayoutSubviewsNoti:(<span class=\"built_in\">NSNotification</span> *)noti</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 逐个遍历所有子view， 用一个dictionary记录该view的可见性，初始化时候可见效默认为0</span></span><br><span class=\"line\">\t<span class=\"comment\">// 简略代码如下</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">self</span>.userEnableSubViewTree.count; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.tracklogDisplayMark setObject:@(<span class=\"number\">0</span>) forKey: item];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>原始数据入库</li>\n</ol>\n<p>将上面的环节采集到的数据，写入sqlite，并表明事件类型，时间、平台，用户、版本、等等 手机环境信息、app 信息等都记录下来</p>\n<ol start=\"3\">\n<li>上传数据</li>\n</ol>\n<p>根据需要，可以实时上传，也可以 攒够10条上传，可以打开app时候上传，也可以进后台时候上传</p>\n<p>需要密上传</p>\n","site":{"data":{}},"excerpt":"<p>介绍下app客户端实现的无痕埋点的实现方案</p>","more":"<p>###无痕埋点实现指标</p>\n<ol>\n<li><p>APP启动指标 </p>\n</li>\n<li><p>页面浏览指标</p>\n</li>\n<li><p>元素点击指标</p>\n</li>\n<li><p>元素曝光指标</p>\n</li>\n</ol>\n<p>###无痕埋点实现厂商</p>\n<p><img src=\"/images/track-1.png\" alt=\"\"></p>\n<p>###无痕埋点实现方案</p>\n<ol>\n<li>采集原始数据</li>\n</ol>\n<p>利用oc的动态语言特性，runtime来实现关键方法API的hook，面向aop编程</p>\n<ul>\n<li>APP启动(热启动、冷启动)数据采集</li>\n</ul>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+(<span class=\"keyword\">void</span>)load</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"built_in\">NSNotificationCenter</span>.defaultCenter addObserver:<span class=\"keyword\">self</span> selector:<span class=\"keyword\">@selector</span>(coldLaunchingNoti:) name:<span class=\"built_in\">UIApplicationDidFinishLaunchingNotification</span> object:<span class=\"literal\">nil</span>];</span><br><span class=\"line\">    [<span class=\"built_in\">NSNotificationCenter</span>.defaultCenter addObserver:<span class=\"keyword\">self</span> selector:<span class=\"keyword\">@selector</span>(hotLaunchingNoti:) name:<span class=\"built_in\">UIApplicationWillEnterForegroundNotification</span> object:<span class=\"literal\">nil</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 冷启动：打开APP</span></span><br><span class=\"line\">+(<span class=\"keyword\">void</span>)coldLaunchingNoti:(<span class=\"built_in\">NSNotification</span> *)noti</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// todo </span></span><br><span class=\"line\">\t<span class=\"comment\">// 记录record</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 热启动：APP从后台近前台</span></span><br><span class=\"line\">+(<span class=\"keyword\">void</span>)hotLaunchingNoti:(<span class=\"built_in\">NSNotification</span> *)noti</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// todo </span></span><br><span class=\"line\">\t<span class=\"comment\">// 记录record</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>页面浏览数据采集</li>\n</ul>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+(<span class=\"keyword\">void</span>)load</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"keyword\">self</span> swizzleInstanceMethodWithOriginSel:<span class=\"keyword\">@selector</span>(viewDidAppear:) swizzledSel:<span class=\"keyword\">@selector</span>(tracklog_viewDidAppear:)];</span><br><span class=\"line\">    [<span class=\"keyword\">self</span> swizzleInstanceMethodWithOriginSel:<span class=\"keyword\">@selector</span>(viewDidDisappear:) swizzledSel:<span class=\"keyword\">@selector</span>(tracklog_viewDidDisappear:)];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)tracklog_viewDidAppear:(<span class=\"built_in\">BOOL</span>)animated</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"keyword\">self</span> tracklog_viewDidAppear:animated];</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"comment\">// todo 获取 pagename、pagetitle </span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 记录record</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)tracklog_viewDidDisappear:(<span class=\"built_in\">BOOL</span>)animated</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"keyword\">self</span> tracklog_viewDidDisappear:animated];</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"comment\">// todo 获取 pagename、pagetitle </span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 记录record</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>元素点击数据采集</li>\n</ul>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+(<span class=\"keyword\">void</span>)load</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"keyword\">self</span> swizzleInstanceMethodWithOriginSel:<span class=\"keyword\">@selector</span>(sendEvent:) swizzledSel:<span class=\"keyword\">@selector</span>(tracklog_sendEvent:)];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)tracklog_sendEvent:(<span class=\"built_in\">UIEvent</span> *)event</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"keyword\">self</span> tracklog_sendEvent:event];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 找到点击的view</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 获取该view的text、xpath、所在页面pagename、pagetitle、子children的信息</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 记录 record</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>元素曝光数据采集</li>\n</ul>\n<p>以UIScrollView为例</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+(<span class=\"keyword\">void</span>)load</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"keyword\">self</span> swizzleInstanceMethodWithOriginSel:<span class=\"keyword\">@selector</span>(layoutSubviews) swizzledSel:<span class=\"keyword\">@selector</span>(tracklog_layoutSubviews)];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>)tracklog_layoutSubviews</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"keyword\">self</span> tracklog_layoutSubviews];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">CGRect</span> visibleRect = <span class=\"built_in\">CGRectMake</span>(<span class=\"keyword\">self</span>.contentOffset.x, <span class=\"keyword\">self</span>.contentOffset.y, <span class=\"keyword\">self</span>.frame.size.width, <span class=\"keyword\">self</span>.frame.size.height);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 逐个比较，看该view是否在可视区域，如果在，dictionary中记录view可见性为1，并记录record</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">self</span>.userEnableSubViewTree.count; i++) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">NSNumber</span> *value = [<span class=\"keyword\">self</span>.tracklogDisplayMark objectForKey:item];</span><br><span class=\"line\">        <span class=\"built_in\">BOOL</span> contains = <span class=\"built_in\">CGRectContainsRect</span>(visibleRect, itemRect);</span><br><span class=\"line\">        <span class=\"built_in\">BOOL</span> intersects = <span class=\"built_in\">CGRectIntersectsRect</span>(visibleRect, itemRect);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (contains) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t  <span class=\"comment\">// 记录 record</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            [<span class=\"keyword\">self</span>.tracklogDisplayMark setObject:@(<span class=\"number\">1</span>) forKey:key];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>)viewDidLayoutSubviewsNoti:(<span class=\"built_in\">NSNotification</span> *)noti</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 逐个遍历所有子view， 用一个dictionary记录该view的可见性，初始化时候可见效默认为0</span></span><br><span class=\"line\">\t<span class=\"comment\">// 简略代码如下</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">self</span>.userEnableSubViewTree.count; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.tracklogDisplayMark setObject:@(<span class=\"number\">0</span>) forKey: item];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>原始数据入库</li>\n</ol>\n<p>将上面的环节采集到的数据，写入sqlite，并表明事件类型，时间、平台，用户、版本、等等 手机环境信息、app 信息等都记录下来</p>\n<ol start=\"3\">\n<li>上传数据</li>\n</ol>\n<p>根据需要，可以实时上传，也可以 攒够10条上传，可以打开app时候上传，也可以进后台时候上传</p>\n<p>需要密上传</p>"},{"title":"iOS 马甲包","date":"2018-01-14T03:31:10.000Z","comments":1,"_content":"\n简单介绍下ios的马甲包\n\n<!-- more -->\n\n###何为 马甲包 ？ \n代码基本一模一样，功能也是一模一样，就是 名字 和 图标 等 部分 元素不一样\n代码重复率很高很高\nGuideline4.3\n\n###如何制作马甲包？\n这种马甲包 可以通过 shell 脚本 更改 工程里面的 config.plist 配置文件 进行 高效量产，工程里面的 入参都是 来源于 config.plist文件，运行下 shell脚本，更改下 APP名称 ，包名，图标 ，APP一些参数 等信息\n\n###如何保证马甲包的审核通过\n通过 代码混淆，加固等方式 解决马甲包审核不通过问题\n\n1. 代码层(解决机审)\n操作对象: 文件、类、变量、方法、资源\n操作方式: 改、加\n操作目的: 更改运行中的程序结构、二进制代码、地址符号表\na) 文件(夹) -> 名称修改,路径修改\n b) 类名称、变量名称、方法名称 -> 修改\nc) 增加混淆代码覆盖率，把实际代码打散打碎(类之间增加垃圾类，变量之间增加垃圾变量，方法内增加垃圾代码，方法间增加垃圾方法)\nd) 打乱方法代码位置顺序\ne) 图片 bundle等其他资源(路径修改，名称修改，增加垃圾图片资源)\n\n2. UI层(解决人审)\na) APP结构改动(如 底部tab结构改动,页面层级改动)\nb) 页面显示主要控件文案内容改动\nc) UI视觉(皮肤，图标)改动，文案字号，色值改动\nd) 版权改动\ne) 壳子和内容的UI尽量复用同一套页面布局,后端配置控件的文案等属性\n\n3. 环境层\na) Apple账号不同，iTunesConnect上面的所有信息不同(比如商店图，演示账号，联系人 等等)\nb) 提交的电脑设备不同，网络IP不同","source":"_posts/马甲包.md","raw":"---\ntitle: \"iOS 马甲包\"\ndate: 2018-01-14 11:31:10 +0800\ncomments: true\ntags:\n- 马甲包\ncategories:\n- [马甲包]\n---\n\n简单介绍下ios的马甲包\n\n<!-- more -->\n\n###何为 马甲包 ？ \n代码基本一模一样，功能也是一模一样，就是 名字 和 图标 等 部分 元素不一样\n代码重复率很高很高\nGuideline4.3\n\n###如何制作马甲包？\n这种马甲包 可以通过 shell 脚本 更改 工程里面的 config.plist 配置文件 进行 高效量产，工程里面的 入参都是 来源于 config.plist文件，运行下 shell脚本，更改下 APP名称 ，包名，图标 ，APP一些参数 等信息\n\n###如何保证马甲包的审核通过\n通过 代码混淆，加固等方式 解决马甲包审核不通过问题\n\n1. 代码层(解决机审)\n操作对象: 文件、类、变量、方法、资源\n操作方式: 改、加\n操作目的: 更改运行中的程序结构、二进制代码、地址符号表\na) 文件(夹) -> 名称修改,路径修改\n b) 类名称、变量名称、方法名称 -> 修改\nc) 增加混淆代码覆盖率，把实际代码打散打碎(类之间增加垃圾类，变量之间增加垃圾变量，方法内增加垃圾代码，方法间增加垃圾方法)\nd) 打乱方法代码位置顺序\ne) 图片 bundle等其他资源(路径修改，名称修改，增加垃圾图片资源)\n\n2. UI层(解决人审)\na) APP结构改动(如 底部tab结构改动,页面层级改动)\nb) 页面显示主要控件文案内容改动\nc) UI视觉(皮肤，图标)改动，文案字号，色值改动\nd) 版权改动\ne) 壳子和内容的UI尽量复用同一套页面布局,后端配置控件的文案等属性\n\n3. 环境层\na) Apple账号不同，iTunesConnect上面的所有信息不同(比如商店图，演示账号，联系人 等等)\nb) 提交的电脑设备不同，网络IP不同","slug":"马甲包","published":1,"updated":"2020-06-27T09:10:34.386Z","layout":"post","photos":[],"link":"","_id":"ckbxmgp9d000sty3j2cg3141d","content":"<p>简单介绍下ios的马甲包</p>\n<a id=\"more\"></a>\n\n<p>###何为 马甲包 ？<br>代码基本一模一样，功能也是一模一样，就是 名字 和 图标 等 部分 元素不一样<br>代码重复率很高很高<br>Guideline4.3</p>\n<p>###如何制作马甲包？<br>这种马甲包 可以通过 shell 脚本 更改 工程里面的 config.plist 配置文件 进行 高效量产，工程里面的 入参都是 来源于 config.plist文件，运行下 shell脚本，更改下 APP名称 ，包名，图标 ，APP一些参数 等信息</p>\n<p>###如何保证马甲包的审核通过<br>通过 代码混淆，加固等方式 解决马甲包审核不通过问题</p>\n<ol>\n<li><p>代码层(解决机审)<br>操作对象: 文件、类、变量、方法、资源<br>操作方式: 改、加<br>操作目的: 更改运行中的程序结构、二进制代码、地址符号表<br>a) 文件(夹) -&gt; 名称修改,路径修改<br>b) 类名称、变量名称、方法名称 -&gt; 修改<br>c) 增加混淆代码覆盖率，把实际代码打散打碎(类之间增加垃圾类，变量之间增加垃圾变量，方法内增加垃圾代码，方法间增加垃圾方法)<br>d) 打乱方法代码位置顺序<br>e) 图片 bundle等其他资源(路径修改，名称修改，增加垃圾图片资源)</p>\n</li>\n<li><p>UI层(解决人审)<br>a) APP结构改动(如 底部tab结构改动,页面层级改动)<br>b) 页面显示主要控件文案内容改动<br>c) UI视觉(皮肤，图标)改动，文案字号，色值改动<br>d) 版权改动<br>e) 壳子和内容的UI尽量复用同一套页面布局,后端配置控件的文案等属性</p>\n</li>\n<li><p>环境层<br>a) Apple账号不同，iTunesConnect上面的所有信息不同(比如商店图，演示账号，联系人 等等)<br>b) 提交的电脑设备不同，网络IP不同</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>简单介绍下ios的马甲包</p>","more":"<p>###何为 马甲包 ？<br>代码基本一模一样，功能也是一模一样，就是 名字 和 图标 等 部分 元素不一样<br>代码重复率很高很高<br>Guideline4.3</p>\n<p>###如何制作马甲包？<br>这种马甲包 可以通过 shell 脚本 更改 工程里面的 config.plist 配置文件 进行 高效量产，工程里面的 入参都是 来源于 config.plist文件，运行下 shell脚本，更改下 APP名称 ，包名，图标 ，APP一些参数 等信息</p>\n<p>###如何保证马甲包的审核通过<br>通过 代码混淆，加固等方式 解决马甲包审核不通过问题</p>\n<ol>\n<li><p>代码层(解决机审)<br>操作对象: 文件、类、变量、方法、资源<br>操作方式: 改、加<br>操作目的: 更改运行中的程序结构、二进制代码、地址符号表<br>a) 文件(夹) -&gt; 名称修改,路径修改<br>b) 类名称、变量名称、方法名称 -&gt; 修改<br>c) 增加混淆代码覆盖率，把实际代码打散打碎(类之间增加垃圾类，变量之间增加垃圾变量，方法内增加垃圾代码，方法间增加垃圾方法)<br>d) 打乱方法代码位置顺序<br>e) 图片 bundle等其他资源(路径修改，名称修改，增加垃圾图片资源)</p>\n</li>\n<li><p>UI层(解决人审)<br>a) APP结构改动(如 底部tab结构改动,页面层级改动)<br>b) 页面显示主要控件文案内容改动<br>c) UI视觉(皮肤，图标)改动，文案字号，色值改动<br>d) 版权改动<br>e) 壳子和内容的UI尽量复用同一套页面布局,后端配置控件的文案等属性</p>\n</li>\n<li><p>环境层<br>a) Apple账号不同，iTunesConnect上面的所有信息不同(比如商店图，演示账号，联系人 等等)<br>b) 提交的电脑设备不同，网络IP不同</p>\n</li>\n</ol>"},{"title":"iOS 静态代码扫描","date":"2017-01-14T03:31:10.000Z","comments":1,"_content":"\n简单记录下搭建静态代码扫描流程\n\n<!-- more -->\n\n1. sonar   sonarqube  sonar-runner\n\n2. oclint\n\n3. xcpretty\n\n4. xctool\n\n","source":"_posts/sonar.md","raw":"---\ntitle: \"iOS 静态代码扫描\"\ndate: 2017-01-14 11:31:10 +0800\ncomments: true\ntags:\n- 静态代码扫描\ncategories:\n- [静态代码扫描]\n---\n\n简单记录下搭建静态代码扫描流程\n\n<!-- more -->\n\n1. sonar   sonarqube  sonar-runner\n\n2. oclint\n\n3. xcpretty\n\n4. xctool\n\n","slug":"sonar","published":1,"updated":"2020-06-27T11:21:41.813Z","layout":"post","photos":[],"link":"","_id":"ckbxmgp9e000xty3j6q8m46kr","content":"<p>简单记录下搭建静态代码扫描流程</p>\n<a id=\"more\"></a>\n\n<ol>\n<li><p>sonar   sonarqube  sonar-runner</p>\n</li>\n<li><p>oclint</p>\n</li>\n<li><p>xcpretty</p>\n</li>\n<li><p>xctool</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>简单记录下搭建静态代码扫描流程</p>","more":"<ol>\n<li><p>sonar   sonarqube  sonar-runner</p>\n</li>\n<li><p>oclint</p>\n</li>\n<li><p>xcpretty</p>\n</li>\n<li><p>xctool</p>\n</li>\n</ol>"},{"title":"php学习图谱","date":"2016-01-14T03:31:10.000Z","comments":1,"_content":"\nphp学习图谱\n\n<!-- more -->\n\n###php学习图谱\n\n![](/images/php.png)","source":"_posts/php.md","raw":"---\ntitle: \"php学习图谱\"\ndate: 2016-01-14 11:31:10 +0800\ncomments: true\ntags:\ncategories:\n---\n\nphp学习图谱\n\n<!-- more -->\n\n###php学习图谱\n\n![](/images/php.png)","slug":"php","published":1,"updated":"2020-06-28T07:15:49.094Z","layout":"post","photos":[],"link":"","_id":"ckbyvi8or0000wp3j909zh4n6","content":"<p>php学习图谱</p>\n<a id=\"more\"></a>\n\n<p>###php学习图谱</p>\n<p><img src=\"/images/php.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p>php学习图谱</p>","more":"<p>###php学习图谱</p>\n<p><img src=\"/images/php.png\" alt=\"\"></p>"},{"title":"iOS安全攻防之加固","date":"2020-01-03T10:01:37.337Z","comments":1,"_content":"\n简单介绍下iOS的安全攻防之加固\n\n<!-- more -->\n\n### 加固\n\n加固 和  代码混淆 是一回事，都是 防止 别人轻易的破解APP里面的内容，降低可读性，目的就是防止别人用class_dump等工具把代码明文给还原出来\n\n用这些加固方式 也可以 解决 apple审核时候遇到的4.3马甲包问题\n\n* 主要有5类加固维度\n\n1. 字符串加密\n\t\n\t![](/images/strong-1.png)\n\t\n2. 符号混淆(类、方法、变量 名称混淆)\n\t\n\t![](/images/strong-2.png)\n\t\n3. 逻辑混淆(指令混淆)\n\t\n\t逻辑混淆(指令混淆)：通过将原始代码的控制流进行切分、打乱、隐藏，或在函数中插入花指令来实现对代码的混淆，使代码逻辑复杂化但不影响原始代码逻辑。\n\t\n\t![](/images/strong-3.png)\n\t\n4. 代码虚拟化\n\n5. 防调试\n\n* 加固方式\n\n1. 源码加固( 编译前，在源工程里面 加入 混淆工具脚步等，执行build)\n\n2. 二进制加固(编译后，将 应用程序 .app 传入至加固平台，输出 加固后的 .app)\n\n* 加固开源厂商\n\nobfuscator-llvm  ： https://github.com/obfuscator-llvm/obfuscator/tree/llvm-4.0\n\nclass-guard  ： https://github.com/Polidea/ios-class-guard\n\npolidea / sirius  :  https://github.com/Polidea/SiriusObfuscator\n\nhttps://github.com/lyzz0612/iosMixTools\n\nhttps://www.jianshu.com/p/a631b5584de6\n\n\n","source":"_posts/strengthening.md","raw":"---\ntitle: \"iOS安全攻防之加固\"\ndate: 2018-10-00 18:00:00 +0800\ncomments: true\ntags:\n- 加固\n- 安全攻防\ncategories:\n- [加固]\n- [安全攻防]\n---\n\n简单介绍下iOS的安全攻防之加固\n\n<!-- more -->\n\n### 加固\n\n加固 和  代码混淆 是一回事，都是 防止 别人轻易的破解APP里面的内容，降低可读性，目的就是防止别人用class_dump等工具把代码明文给还原出来\n\n用这些加固方式 也可以 解决 apple审核时候遇到的4.3马甲包问题\n\n* 主要有5类加固维度\n\n1. 字符串加密\n\t\n\t![](/images/strong-1.png)\n\t\n2. 符号混淆(类、方法、变量 名称混淆)\n\t\n\t![](/images/strong-2.png)\n\t\n3. 逻辑混淆(指令混淆)\n\t\n\t逻辑混淆(指令混淆)：通过将原始代码的控制流进行切分、打乱、隐藏，或在函数中插入花指令来实现对代码的混淆，使代码逻辑复杂化但不影响原始代码逻辑。\n\t\n\t![](/images/strong-3.png)\n\t\n4. 代码虚拟化\n\n5. 防调试\n\n* 加固方式\n\n1. 源码加固( 编译前，在源工程里面 加入 混淆工具脚步等，执行build)\n\n2. 二进制加固(编译后，将 应用程序 .app 传入至加固平台，输出 加固后的 .app)\n\n* 加固开源厂商\n\nobfuscator-llvm  ： https://github.com/obfuscator-llvm/obfuscator/tree/llvm-4.0\n\nclass-guard  ： https://github.com/Polidea/ios-class-guard\n\npolidea / sirius  :  https://github.com/Polidea/SiriusObfuscator\n\nhttps://github.com/lyzz0612/iosMixTools\n\nhttps://www.jianshu.com/p/a631b5584de6\n\n\n","slug":"strengthening","published":1,"updated":"2020-06-28T09:23:58.201Z","layout":"post","photos":[],"link":"","_id":"ckbyvi8ox0001wp3j3crd1s8i","content":"<p>简单介绍下iOS的安全攻防之加固</p>\n<a id=\"more\"></a>\n\n<h3 id=\"加固\"><a href=\"#加固\" class=\"headerlink\" title=\"加固\"></a>加固</h3><p>加固 和  代码混淆 是一回事，都是 防止 别人轻易的破解APP里面的内容，降低可读性，目的就是防止别人用class_dump等工具把代码明文给还原出来</p>\n<p>用这些加固方式 也可以 解决 apple审核时候遇到的4.3马甲包问题</p>\n<ul>\n<li>主要有5类加固维度</li>\n</ul>\n<ol>\n<li><p>字符串加密</p>\n<p> <img src=\"/images/strong-1.png\" alt=\"\"></p>\n</li>\n<li><p>符号混淆(类、方法、变量 名称混淆)</p>\n<p> <img src=\"/images/strong-2.png\" alt=\"\"></p>\n</li>\n<li><p>逻辑混淆(指令混淆)</p>\n<p> 逻辑混淆(指令混淆)：通过将原始代码的控制流进行切分、打乱、隐藏，或在函数中插入花指令来实现对代码的混淆，使代码逻辑复杂化但不影响原始代码逻辑。</p>\n<p> <img src=\"/images/strong-3.png\" alt=\"\"></p>\n</li>\n<li><p>代码虚拟化</p>\n</li>\n<li><p>防调试</p>\n</li>\n</ol>\n<ul>\n<li>加固方式</li>\n</ul>\n<ol>\n<li><p>源码加固( 编译前，在源工程里面 加入 混淆工具脚步等，执行build)</p>\n</li>\n<li><p>二进制加固(编译后，将 应用程序 .app 传入至加固平台，输出 加固后的 .app)</p>\n</li>\n</ol>\n<ul>\n<li>加固开源厂商</li>\n</ul>\n<p>obfuscator-llvm  ： <a href=\"https://github.com/obfuscator-llvm/obfuscator/tree/llvm-4.0\" target=\"_blank\" rel=\"noopener\">https://github.com/obfuscator-llvm/obfuscator/tree/llvm-4.0</a></p>\n<p>class-guard  ： <a href=\"https://github.com/Polidea/ios-class-guard\" target=\"_blank\" rel=\"noopener\">https://github.com/Polidea/ios-class-guard</a></p>\n<p>polidea / sirius  :  <a href=\"https://github.com/Polidea/SiriusObfuscator\" target=\"_blank\" rel=\"noopener\">https://github.com/Polidea/SiriusObfuscator</a></p>\n<p><a href=\"https://github.com/lyzz0612/iosMixTools\" target=\"_blank\" rel=\"noopener\">https://github.com/lyzz0612/iosMixTools</a></p>\n<p><a href=\"https://www.jianshu.com/p/a631b5584de6\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/a631b5584de6</a></p>\n","site":{"data":{}},"excerpt":"<p>简单介绍下iOS的安全攻防之加固</p>","more":"<h3 id=\"加固\"><a href=\"#加固\" class=\"headerlink\" title=\"加固\"></a>加固</h3><p>加固 和  代码混淆 是一回事，都是 防止 别人轻易的破解APP里面的内容，降低可读性，目的就是防止别人用class_dump等工具把代码明文给还原出来</p>\n<p>用这些加固方式 也可以 解决 apple审核时候遇到的4.3马甲包问题</p>\n<ul>\n<li>主要有5类加固维度</li>\n</ul>\n<ol>\n<li><p>字符串加密</p>\n<p> <img src=\"/images/strong-1.png\" alt=\"\"></p>\n</li>\n<li><p>符号混淆(类、方法、变量 名称混淆)</p>\n<p> <img src=\"/images/strong-2.png\" alt=\"\"></p>\n</li>\n<li><p>逻辑混淆(指令混淆)</p>\n<p> 逻辑混淆(指令混淆)：通过将原始代码的控制流进行切分、打乱、隐藏，或在函数中插入花指令来实现对代码的混淆，使代码逻辑复杂化但不影响原始代码逻辑。</p>\n<p> <img src=\"/images/strong-3.png\" alt=\"\"></p>\n</li>\n<li><p>代码虚拟化</p>\n</li>\n<li><p>防调试</p>\n</li>\n</ol>\n<ul>\n<li>加固方式</li>\n</ul>\n<ol>\n<li><p>源码加固( 编译前，在源工程里面 加入 混淆工具脚步等，执行build)</p>\n</li>\n<li><p>二进制加固(编译后，将 应用程序 .app 传入至加固平台，输出 加固后的 .app)</p>\n</li>\n</ol>\n<ul>\n<li>加固开源厂商</li>\n</ul>\n<p>obfuscator-llvm  ： <a href=\"https://github.com/obfuscator-llvm/obfuscator/tree/llvm-4.0\" target=\"_blank\" rel=\"noopener\">https://github.com/obfuscator-llvm/obfuscator/tree/llvm-4.0</a></p>\n<p>class-guard  ： <a href=\"https://github.com/Polidea/ios-class-guard\" target=\"_blank\" rel=\"noopener\">https://github.com/Polidea/ios-class-guard</a></p>\n<p>polidea / sirius  :  <a href=\"https://github.com/Polidea/SiriusObfuscator\" target=\"_blank\" rel=\"noopener\">https://github.com/Polidea/SiriusObfuscator</a></p>\n<p><a href=\"https://github.com/lyzz0612/iosMixTools\" target=\"_blank\" rel=\"noopener\">https://github.com/lyzz0612/iosMixTools</a></p>\n<p><a href=\"https://www.jianshu.com/p/a631b5584de6\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/a631b5584de6</a></p>"},{"title":"UIScrollView嵌套联动效果","date":"2019-12-03T09:06:00.000Z","comments":1,"_content":"\n介绍下app iOS的UIScrollView嵌套联动效果\n\n<!-- more -->\n\n###UIScrollView嵌套联动效果\n\nUIScrollView嵌套 + Tab吸顶 联动效果\n\n能够保证 1、竖直方向联动效果很自然，不卡顿 2、tab内容区的左右切换很自然，并且不会影响到上下滑动，也就是 左右滑动和上下滑动能够做到互斥，不会同时发生\n\n看下图示效果\n\n![](/images/scroll-1.jpg)\n\n###解决思路\n\n整个上下滑动是个UIScrollView，tab分页的内容区是个UIScrollView，里面是UITableView，监听偏移量，初始化时，父UIScrollView可以滑动，子UIScrollView不可以滑动，当父UIScrollView上滑至可以吸顶位置时，不让它滑动，让子UIScrollView可以滑动\n\n###解决方案\n\n手势穿透 + 响应链，这样在子UIScrollView上的手势可以传递到父UIScrollView，达到共享手势\n\n内层的 UITableView（TAB 栏里面）和外层的 UIScrollView 同时响应用户的手势滑动事件\n\n父UIScrollView实现UIGestureRecognizerDelegate的代理方法\n\n```objc\n\n- (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer\n{\n  //在该方法中，判断otherGestureRecognizer.view如果为需要手势穿透的控件，则返回yes，否则返回no\n}\n\n父UIScrollView的hitTest方法返回值为 子UIScrollView\n- (UIView *)hitTest:(CGPoint)point withEvent:(nullable UIEvent *)event\n{\n\n}\n\n```\n\n代码实现\n\n```objc\n父UIScrollView\n\n1、遵守协议 <UIGestureRecognizerDelegate>\n\n- (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer\n{\n    if ([self.simultaneouslyScrollList containsObject:otherGestureRecognizer.view]) {\n        return YES;\n    }\n    \n    return NO;\n}\n\n2 - (void)scrollViewDidScroll:(UIScrollView *)scrollView中重置contentOffset\n\nif (self.scrollEnable) {\n                if (self.contentOffset.y > self.maxY) {\n                    \n                    self.scrollEnable = 0;\n                    \n                    self.contentOffset = CGPointMake(self.lockDirectionDefaultVaule, self.maxY);\n                }else{\n                    self.contentOffset = CGPointMake(self.lockDirectionDefaultVaule, self.contentOffset.y);\n                }\n            }else{\n                self.contentOffset = CGPointMake(self.lockDirectionDefaultVaule, self.maxY);\n            }\n```\n\n```objc\n子UITableView\n\nif (self.scrollEnable) {\n            if (scrollView.contentOffset.y < 0) {\n                self.scrollEnable = 0;\n\n\n                scrollView.contentOffset = CGPointMake(scrollView.contentOffset.x, 0);\n\n\n                if (superScrollBlock) {\n                    superScrollBlock(1);\n                }\n            }else{\n                if (superScrollBlock) {\n                    superScrollBlock(0);\n                }\n            }\n        }else{\n            scrollView.contentOffset = CGPointMake(scrollView.contentOffset.x, 0);\n\n\n            if (superScrollBlock) {\n                superScrollBlock(1);\n            }\n        }\n```\n\n###疑难点\n\n1. tab里面有的tableview或者scrollview里面嵌套webview，在滑动过程中特别容易导致卡顿，一顿一顿的，当去掉webview后，卡顿效果没有了，但是产品上要求联动效果里面必须支持webview，后来通过调试发现有webview，但是webview的userInteractionEnabled为0也不会导致页面卡顿，所以解决方案就是，只允许当前tab下的tableview的userInteractionEnabled为1，其他tab下的tableview的userInteractionEnabled为0\n\n2. 当tab的左右滑动时候，经常会导致主scrollview的上下滑动，水平滑动和竖直滑动没有互斥\n如何判断有偏斜角度的手势为 水平手势，还是竖直手势，检测 目的滑动方向\n因为父scrollview是允许手势穿透的，所以它里面的子scrolview的滑动都会传递到父scrollview，导致多个scrollview同时滑动的现象，原则上，同一时间只允许有一个scrollview可以滑动，不管是水平还是竖直，所以对父scrollview的contentInset设置为UIEdgeInsetsMake(1, 0, 0, 1); 这样能保证scrollview既能支持水平滑动，也能支持竖直滑动，(尽管实际上它应该只能竖直滑动)，这样的话，在手势代理方法gestureRecognizerShouldBegin中就能拿到 当前手势的 水平速度、竖直速度分别是多少，代码判断 水平速度>竖直速度 就为 水平滑动，反之为竖直滑动，如果父scrollview为竖直滑动效果，那么当手势为水平滑动时候，在scrolldidscroll代理方法中，重置scrollview的contentoffset，保证父scrollview不产生水平滑动现象，同时因为手势被判断为水平滑动，父scrollview竖直方向上也不会滑动\n\n这样处理后，原则上可以解决 水平和竖直滑动互斥，但是调试发现在gestureRecognizerShouldBegin中捕获手势速率经常为0 (主scrollvie在竖直方向已经滑动，有动画滑动，还未停止时候，再次有手势触发的时候会发生，tab左右滑动就会导致，两个方向同时滑动)，这种情况下，依然实现不了互斥，依然会发生 水平和竖直同时滑动现象\n\n自己处理手势方向识别，并做出是否滑动，并没有系统实现的好，所以在是否允许手势传递方法中，判断，是子tableView的时候才允许\n\n```objc\n- (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer\n{\n    if ([self.simultaneouslyScrollList containsObject:otherGestureRecognizer.view]) {\n        return YES;\n    }\n    \n    return NO;\n}\n```","source":"_posts/scrollview.md","raw":"---\ntitle: \"UIScrollView嵌套联动效果\"\ndate: 2019-12-03 17:06:00 +0800\ncomments: true\ntags:\n- UIScrollView嵌套联动效果\ncategories:\n- [UIScrollView嵌套联动效果]\n---\n\n介绍下app iOS的UIScrollView嵌套联动效果\n\n<!-- more -->\n\n###UIScrollView嵌套联动效果\n\nUIScrollView嵌套 + Tab吸顶 联动效果\n\n能够保证 1、竖直方向联动效果很自然，不卡顿 2、tab内容区的左右切换很自然，并且不会影响到上下滑动，也就是 左右滑动和上下滑动能够做到互斥，不会同时发生\n\n看下图示效果\n\n![](/images/scroll-1.jpg)\n\n###解决思路\n\n整个上下滑动是个UIScrollView，tab分页的内容区是个UIScrollView，里面是UITableView，监听偏移量，初始化时，父UIScrollView可以滑动，子UIScrollView不可以滑动，当父UIScrollView上滑至可以吸顶位置时，不让它滑动，让子UIScrollView可以滑动\n\n###解决方案\n\n手势穿透 + 响应链，这样在子UIScrollView上的手势可以传递到父UIScrollView，达到共享手势\n\n内层的 UITableView（TAB 栏里面）和外层的 UIScrollView 同时响应用户的手势滑动事件\n\n父UIScrollView实现UIGestureRecognizerDelegate的代理方法\n\n```objc\n\n- (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer\n{\n  //在该方法中，判断otherGestureRecognizer.view如果为需要手势穿透的控件，则返回yes，否则返回no\n}\n\n父UIScrollView的hitTest方法返回值为 子UIScrollView\n- (UIView *)hitTest:(CGPoint)point withEvent:(nullable UIEvent *)event\n{\n\n}\n\n```\n\n代码实现\n\n```objc\n父UIScrollView\n\n1、遵守协议 <UIGestureRecognizerDelegate>\n\n- (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer\n{\n    if ([self.simultaneouslyScrollList containsObject:otherGestureRecognizer.view]) {\n        return YES;\n    }\n    \n    return NO;\n}\n\n2 - (void)scrollViewDidScroll:(UIScrollView *)scrollView中重置contentOffset\n\nif (self.scrollEnable) {\n                if (self.contentOffset.y > self.maxY) {\n                    \n                    self.scrollEnable = 0;\n                    \n                    self.contentOffset = CGPointMake(self.lockDirectionDefaultVaule, self.maxY);\n                }else{\n                    self.contentOffset = CGPointMake(self.lockDirectionDefaultVaule, self.contentOffset.y);\n                }\n            }else{\n                self.contentOffset = CGPointMake(self.lockDirectionDefaultVaule, self.maxY);\n            }\n```\n\n```objc\n子UITableView\n\nif (self.scrollEnable) {\n            if (scrollView.contentOffset.y < 0) {\n                self.scrollEnable = 0;\n\n\n                scrollView.contentOffset = CGPointMake(scrollView.contentOffset.x, 0);\n\n\n                if (superScrollBlock) {\n                    superScrollBlock(1);\n                }\n            }else{\n                if (superScrollBlock) {\n                    superScrollBlock(0);\n                }\n            }\n        }else{\n            scrollView.contentOffset = CGPointMake(scrollView.contentOffset.x, 0);\n\n\n            if (superScrollBlock) {\n                superScrollBlock(1);\n            }\n        }\n```\n\n###疑难点\n\n1. tab里面有的tableview或者scrollview里面嵌套webview，在滑动过程中特别容易导致卡顿，一顿一顿的，当去掉webview后，卡顿效果没有了，但是产品上要求联动效果里面必须支持webview，后来通过调试发现有webview，但是webview的userInteractionEnabled为0也不会导致页面卡顿，所以解决方案就是，只允许当前tab下的tableview的userInteractionEnabled为1，其他tab下的tableview的userInteractionEnabled为0\n\n2. 当tab的左右滑动时候，经常会导致主scrollview的上下滑动，水平滑动和竖直滑动没有互斥\n如何判断有偏斜角度的手势为 水平手势，还是竖直手势，检测 目的滑动方向\n因为父scrollview是允许手势穿透的，所以它里面的子scrolview的滑动都会传递到父scrollview，导致多个scrollview同时滑动的现象，原则上，同一时间只允许有一个scrollview可以滑动，不管是水平还是竖直，所以对父scrollview的contentInset设置为UIEdgeInsetsMake(1, 0, 0, 1); 这样能保证scrollview既能支持水平滑动，也能支持竖直滑动，(尽管实际上它应该只能竖直滑动)，这样的话，在手势代理方法gestureRecognizerShouldBegin中就能拿到 当前手势的 水平速度、竖直速度分别是多少，代码判断 水平速度>竖直速度 就为 水平滑动，反之为竖直滑动，如果父scrollview为竖直滑动效果，那么当手势为水平滑动时候，在scrolldidscroll代理方法中，重置scrollview的contentoffset，保证父scrollview不产生水平滑动现象，同时因为手势被判断为水平滑动，父scrollview竖直方向上也不会滑动\n\n这样处理后，原则上可以解决 水平和竖直滑动互斥，但是调试发现在gestureRecognizerShouldBegin中捕获手势速率经常为0 (主scrollvie在竖直方向已经滑动，有动画滑动，还未停止时候，再次有手势触发的时候会发生，tab左右滑动就会导致，两个方向同时滑动)，这种情况下，依然实现不了互斥，依然会发生 水平和竖直同时滑动现象\n\n自己处理手势方向识别，并做出是否滑动，并没有系统实现的好，所以在是否允许手势传递方法中，判断，是子tableView的时候才允许\n\n```objc\n- (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer\n{\n    if ([self.simultaneouslyScrollList containsObject:otherGestureRecognizer.view]) {\n        return YES;\n    }\n    \n    return NO;\n}\n```","slug":"scrollview","published":1,"updated":"2020-06-28T07:13:08.126Z","layout":"post","photos":[],"link":"","_id":"ckbyvi8oy0002wp3jarfh6ptl","content":"<p>介绍下app iOS的UIScrollView嵌套联动效果</p>\n<a id=\"more\"></a>\n\n<p>###UIScrollView嵌套联动效果</p>\n<p>UIScrollView嵌套 + Tab吸顶 联动效果</p>\n<p>能够保证 1、竖直方向联动效果很自然，不卡顿 2、tab内容区的左右切换很自然，并且不会影响到上下滑动，也就是 左右滑动和上下滑动能够做到互斥，不会同时发生</p>\n<p>看下图示效果</p>\n<p><img src=\"/images/scroll-1.jpg\" alt=\"\"></p>\n<p>###解决思路</p>\n<p>整个上下滑动是个UIScrollView，tab分页的内容区是个UIScrollView，里面是UITableView，监听偏移量，初始化时，父UIScrollView可以滑动，子UIScrollView不可以滑动，当父UIScrollView上滑至可以吸顶位置时，不让它滑动，让子UIScrollView可以滑动</p>\n<p>###解决方案</p>\n<p>手势穿透 + 响应链，这样在子UIScrollView上的手势可以传递到父UIScrollView，达到共享手势</p>\n<p>内层的 UITableView（TAB 栏里面）和外层的 UIScrollView 同时响应用户的手势滑动事件</p>\n<p>父UIScrollView实现UIGestureRecognizerDelegate的代理方法</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)gestureRecognizer:(<span class=\"built_in\">UIGestureRecognizer</span> *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(<span class=\"built_in\">UIGestureRecognizer</span> *)otherGestureRecognizer</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">//在该方法中，判断otherGestureRecognizer.view如果为需要手势穿透的控件，则返回yes，否则返回no</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">父<span class=\"built_in\">UIScrollView</span>的hitTest方法返回值为 子<span class=\"built_in\">UIScrollView</span></span><br><span class=\"line\">- (<span class=\"built_in\">UIView</span> *)hitTest:(<span class=\"built_in\">CGPoint</span>)point withEvent:(<span class=\"keyword\">nullable</span> <span class=\"built_in\">UIEvent</span> *)event</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>代码实现</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">父<span class=\"built_in\">UIScrollView</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1</span>、遵守协议 &lt;<span class=\"built_in\">UIGestureRecognizerDelegate</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)gestureRecognizer:(<span class=\"built_in\">UIGestureRecognizer</span> *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(<span class=\"built_in\">UIGestureRecognizer</span> *)otherGestureRecognizer</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ([<span class=\"keyword\">self</span>.simultaneouslyScrollList containsObject:otherGestureRecognizer.view]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">YES</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">NO</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2</span> - (<span class=\"keyword\">void</span>)scrollViewDidScroll:(<span class=\"built_in\">UIScrollView</span> *)scrollView中重置contentOffset</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">self</span>.scrollEnable) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"keyword\">self</span>.contentOffset.y &gt; <span class=\"keyword\">self</span>.maxY) &#123;</span><br><span class=\"line\">                    </span><br><span class=\"line\">                    <span class=\"keyword\">self</span>.scrollEnable = <span class=\"number\">0</span>;</span><br><span class=\"line\">                    </span><br><span class=\"line\">                    <span class=\"keyword\">self</span>.contentOffset = <span class=\"built_in\">CGPointMake</span>(<span class=\"keyword\">self</span>.lockDirectionDefaultVaule, <span class=\"keyword\">self</span>.maxY);</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">self</span>.contentOffset = <span class=\"built_in\">CGPointMake</span>(<span class=\"keyword\">self</span>.lockDirectionDefaultVaule, <span class=\"keyword\">self</span>.contentOffset.y);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">self</span>.contentOffset = <span class=\"built_in\">CGPointMake</span>(<span class=\"keyword\">self</span>.lockDirectionDefaultVaule, <span class=\"keyword\">self</span>.maxY);</span><br><span class=\"line\">            &#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">子<span class=\"built_in\">UITableView</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">self</span>.scrollEnable) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (scrollView.contentOffset.y &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">self</span>.scrollEnable = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                scrollView.contentOffset = <span class=\"built_in\">CGPointMake</span>(scrollView.contentOffset.x, <span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (superScrollBlock) &#123;</span><br><span class=\"line\">                    superScrollBlock(<span class=\"number\">1</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (superScrollBlock) &#123;</span><br><span class=\"line\">                    superScrollBlock(<span class=\"number\">0</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            scrollView.contentOffset = <span class=\"built_in\">CGPointMake</span>(scrollView.contentOffset.x, <span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (superScrollBlock) &#123;</span><br><span class=\"line\">                superScrollBlock(<span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n\n<p>###疑难点</p>\n<ol>\n<li><p>tab里面有的tableview或者scrollview里面嵌套webview，在滑动过程中特别容易导致卡顿，一顿一顿的，当去掉webview后，卡顿效果没有了，但是产品上要求联动效果里面必须支持webview，后来通过调试发现有webview，但是webview的userInteractionEnabled为0也不会导致页面卡顿，所以解决方案就是，只允许当前tab下的tableview的userInteractionEnabled为1，其他tab下的tableview的userInteractionEnabled为0</p>\n</li>\n<li><p>当tab的左右滑动时候，经常会导致主scrollview的上下滑动，水平滑动和竖直滑动没有互斥<br>如何判断有偏斜角度的手势为 水平手势，还是竖直手势，检测 目的滑动方向<br>因为父scrollview是允许手势穿透的，所以它里面的子scrolview的滑动都会传递到父scrollview，导致多个scrollview同时滑动的现象，原则上，同一时间只允许有一个scrollview可以滑动，不管是水平还是竖直，所以对父scrollview的contentInset设置为UIEdgeInsetsMake(1, 0, 0, 1); 这样能保证scrollview既能支持水平滑动，也能支持竖直滑动，(尽管实际上它应该只能竖直滑动)，这样的话，在手势代理方法gestureRecognizerShouldBegin中就能拿到 当前手势的 水平速度、竖直速度分别是多少，代码判断 水平速度&gt;竖直速度 就为 水平滑动，反之为竖直滑动，如果父scrollview为竖直滑动效果，那么当手势为水平滑动时候，在scrolldidscroll代理方法中，重置scrollview的contentoffset，保证父scrollview不产生水平滑动现象，同时因为手势被判断为水平滑动，父scrollview竖直方向上也不会滑动</p>\n</li>\n</ol>\n<p>这样处理后，原则上可以解决 水平和竖直滑动互斥，但是调试发现在gestureRecognizerShouldBegin中捕获手势速率经常为0 (主scrollvie在竖直方向已经滑动，有动画滑动，还未停止时候，再次有手势触发的时候会发生，tab左右滑动就会导致，两个方向同时滑动)，这种情况下，依然实现不了互斥，依然会发生 水平和竖直同时滑动现象</p>\n<p>自己处理手势方向识别，并做出是否滑动，并没有系统实现的好，所以在是否允许手势传递方法中，判断，是子tableView的时候才允许</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)gestureRecognizer:(<span class=\"built_in\">UIGestureRecognizer</span> *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(<span class=\"built_in\">UIGestureRecognizer</span> *)otherGestureRecognizer</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ([<span class=\"keyword\">self</span>.simultaneouslyScrollList containsObject:otherGestureRecognizer.view]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">YES</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">NO</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>介绍下app iOS的UIScrollView嵌套联动效果</p>","more":"<p>###UIScrollView嵌套联动效果</p>\n<p>UIScrollView嵌套 + Tab吸顶 联动效果</p>\n<p>能够保证 1、竖直方向联动效果很自然，不卡顿 2、tab内容区的左右切换很自然，并且不会影响到上下滑动，也就是 左右滑动和上下滑动能够做到互斥，不会同时发生</p>\n<p>看下图示效果</p>\n<p><img src=\"/images/scroll-1.jpg\" alt=\"\"></p>\n<p>###解决思路</p>\n<p>整个上下滑动是个UIScrollView，tab分页的内容区是个UIScrollView，里面是UITableView，监听偏移量，初始化时，父UIScrollView可以滑动，子UIScrollView不可以滑动，当父UIScrollView上滑至可以吸顶位置时，不让它滑动，让子UIScrollView可以滑动</p>\n<p>###解决方案</p>\n<p>手势穿透 + 响应链，这样在子UIScrollView上的手势可以传递到父UIScrollView，达到共享手势</p>\n<p>内层的 UITableView（TAB 栏里面）和外层的 UIScrollView 同时响应用户的手势滑动事件</p>\n<p>父UIScrollView实现UIGestureRecognizerDelegate的代理方法</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)gestureRecognizer:(<span class=\"built_in\">UIGestureRecognizer</span> *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(<span class=\"built_in\">UIGestureRecognizer</span> *)otherGestureRecognizer</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">//在该方法中，判断otherGestureRecognizer.view如果为需要手势穿透的控件，则返回yes，否则返回no</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">父<span class=\"built_in\">UIScrollView</span>的hitTest方法返回值为 子<span class=\"built_in\">UIScrollView</span></span><br><span class=\"line\">- (<span class=\"built_in\">UIView</span> *)hitTest:(<span class=\"built_in\">CGPoint</span>)point withEvent:(<span class=\"keyword\">nullable</span> <span class=\"built_in\">UIEvent</span> *)event</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>代码实现</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">父<span class=\"built_in\">UIScrollView</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1</span>、遵守协议 &lt;<span class=\"built_in\">UIGestureRecognizerDelegate</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)gestureRecognizer:(<span class=\"built_in\">UIGestureRecognizer</span> *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(<span class=\"built_in\">UIGestureRecognizer</span> *)otherGestureRecognizer</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ([<span class=\"keyword\">self</span>.simultaneouslyScrollList containsObject:otherGestureRecognizer.view]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">YES</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">NO</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2</span> - (<span class=\"keyword\">void</span>)scrollViewDidScroll:(<span class=\"built_in\">UIScrollView</span> *)scrollView中重置contentOffset</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">self</span>.scrollEnable) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"keyword\">self</span>.contentOffset.y &gt; <span class=\"keyword\">self</span>.maxY) &#123;</span><br><span class=\"line\">                    </span><br><span class=\"line\">                    <span class=\"keyword\">self</span>.scrollEnable = <span class=\"number\">0</span>;</span><br><span class=\"line\">                    </span><br><span class=\"line\">                    <span class=\"keyword\">self</span>.contentOffset = <span class=\"built_in\">CGPointMake</span>(<span class=\"keyword\">self</span>.lockDirectionDefaultVaule, <span class=\"keyword\">self</span>.maxY);</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">self</span>.contentOffset = <span class=\"built_in\">CGPointMake</span>(<span class=\"keyword\">self</span>.lockDirectionDefaultVaule, <span class=\"keyword\">self</span>.contentOffset.y);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">self</span>.contentOffset = <span class=\"built_in\">CGPointMake</span>(<span class=\"keyword\">self</span>.lockDirectionDefaultVaule, <span class=\"keyword\">self</span>.maxY);</span><br><span class=\"line\">            &#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">子<span class=\"built_in\">UITableView</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">self</span>.scrollEnable) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (scrollView.contentOffset.y &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">self</span>.scrollEnable = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                scrollView.contentOffset = <span class=\"built_in\">CGPointMake</span>(scrollView.contentOffset.x, <span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (superScrollBlock) &#123;</span><br><span class=\"line\">                    superScrollBlock(<span class=\"number\">1</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (superScrollBlock) &#123;</span><br><span class=\"line\">                    superScrollBlock(<span class=\"number\">0</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            scrollView.contentOffset = <span class=\"built_in\">CGPointMake</span>(scrollView.contentOffset.x, <span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (superScrollBlock) &#123;</span><br><span class=\"line\">                superScrollBlock(<span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n\n<p>###疑难点</p>\n<ol>\n<li><p>tab里面有的tableview或者scrollview里面嵌套webview，在滑动过程中特别容易导致卡顿，一顿一顿的，当去掉webview后，卡顿效果没有了，但是产品上要求联动效果里面必须支持webview，后来通过调试发现有webview，但是webview的userInteractionEnabled为0也不会导致页面卡顿，所以解决方案就是，只允许当前tab下的tableview的userInteractionEnabled为1，其他tab下的tableview的userInteractionEnabled为0</p>\n</li>\n<li><p>当tab的左右滑动时候，经常会导致主scrollview的上下滑动，水平滑动和竖直滑动没有互斥<br>如何判断有偏斜角度的手势为 水平手势，还是竖直手势，检测 目的滑动方向<br>因为父scrollview是允许手势穿透的，所以它里面的子scrolview的滑动都会传递到父scrollview，导致多个scrollview同时滑动的现象，原则上，同一时间只允许有一个scrollview可以滑动，不管是水平还是竖直，所以对父scrollview的contentInset设置为UIEdgeInsetsMake(1, 0, 0, 1); 这样能保证scrollview既能支持水平滑动，也能支持竖直滑动，(尽管实际上它应该只能竖直滑动)，这样的话，在手势代理方法gestureRecognizerShouldBegin中就能拿到 当前手势的 水平速度、竖直速度分别是多少，代码判断 水平速度&gt;竖直速度 就为 水平滑动，反之为竖直滑动，如果父scrollview为竖直滑动效果，那么当手势为水平滑动时候，在scrolldidscroll代理方法中，重置scrollview的contentoffset，保证父scrollview不产生水平滑动现象，同时因为手势被判断为水平滑动，父scrollview竖直方向上也不会滑动</p>\n</li>\n</ol>\n<p>这样处理后，原则上可以解决 水平和竖直滑动互斥，但是调试发现在gestureRecognizerShouldBegin中捕获手势速率经常为0 (主scrollvie在竖直方向已经滑动，有动画滑动，还未停止时候，再次有手势触发的时候会发生，tab左右滑动就会导致，两个方向同时滑动)，这种情况下，依然实现不了互斥，依然会发生 水平和竖直同时滑动现象</p>\n<p>自己处理手势方向识别，并做出是否滑动，并没有系统实现的好，所以在是否允许手势传递方法中，判断，是子tableView的时候才允许</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (<span class=\"built_in\">BOOL</span>)gestureRecognizer:(<span class=\"built_in\">UIGestureRecognizer</span> *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(<span class=\"built_in\">UIGestureRecognizer</span> *)otherGestureRecognizer</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ([<span class=\"keyword\">self</span>.simultaneouslyScrollList containsObject:otherGestureRecognizer.view]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">YES</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">NO</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"iOS安全攻防之破壳","date":"2020-01-03T10:01:37.337Z","comments":1,"_content":"\n简单介绍下iOS的安全攻防之破壳\n\n<!-- more -->\n\n### 使用class_dump\n\nclass_dump : 利用runtime特性来dump出工程的class信息，也就是还原出.h文件\nclass_dump 只是 逆向破壳的第一阶段，后面还很多\n\n终端里面运行下载后的 class-dump 可执行文件\n\nclass_dump 只支持OC，不支持swift，有swift的会dump失败\n\n在终端，使用class-dump对 IPA里面的 .app 执行文件 进行dump\n\n![](/images/breakhull-1.png)\n\n### 使用 IDA 或 Hopper Disassembler\n\n反编译出来的伪代码  示例图如下，具体使用 可参考 加固厂商顶象加固报告\n\n![](/images/breakhull-2.png)\n\n```objc\n                     -[AuthInfoController streetAction]:\n00000001000b5b3c         sub        sp, sp, #0x70                               ; Objective C Implementation defined at 0x100bbded0 (instance method), Begin of try block, DATA XREF=0x100bbded0\n00000001000b5b40         stp        x24, x23, [sp, #0x30]\n00000001000b5b44         stp        x22, x21, [sp, #0x40]\n00000001000b5b48         stp        x20, x19, [sp, #0x50]\n00000001000b5b4c         stp        x29, x30, [sp, #0x60]\n00000001000b5b50         add        x29, sp, #0x60\n00000001000b5b54         mov        x20, x0\n00000001000b5b58         adrp      x8, #0x100c5b000                            ; &@selector(getLoanUseSignal)\n00000001000b5b5c         ldr        x1, [x8, #0xa68]                            ; \"resetFirstResponsder\",@selector(resetFirstResponsder)\n00000001000b5b60         bl        imp___stubs__objc_msgSend                   ; objc_msgSend\n00000001000b5b64         add        x0, sp, #0x28\n00000001000b5b68         mov        x1, x20\n00000001000b5b6c         bl        imp___stubs__objc_initWeak                  ; objc_initWeak\n00000001000b5b70         adrp      x8, #0x100c6d000\n00000001000b5b74         ldr        x0, [x8, #0xc8]                            ; objc_cls_ref_InfoSheetView,__objc_class_InfoSheetView_class\n00000001000b5b78         adrp      x8, #0x100c5b000                            ; &@selector(getLoanUseSignal)\n00000001000b5b7c         ldr        x1, [x8, #0xa70]                            ; \"instanceView\",@selector(instanceView)\n00000001000b5b80         bl        imp___stubs__objc_msgSend                   ; objc_msgSend, End of try block started at 0x1000b5b3c, Begin of try block (catch block at 0x1000b5d78)\n00000001000b5b84         mov        x29, x29                                    ; End of try block started at 0x1000b5b80, Begin of try block\n00000001000b5b88         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue\n00000001000b5b8c         mov        x19, x0\n00000001000b5b90         adrp      x8, #0x100c5b000                            ; &@selector(getLoanUseSignal)\n00000001000b5b94         ldr        x21, [x8, #0xaf8]                          ; \"streetDic\",@selector(streetDic)\n00000001000b5b98         mov        x0, x20                                     ; End of try block started at 0x1000b5b84, Begin of try block (catch block at 0x1000b5d78)\n00000001000b5b9c         mov        x1, x21\n00000001000b5ba0         bl        imp___stubs__objc_msgSend                   ; objc_msgSend\n00000001000b5ba4         mov        x29, x29                                    ; End of try block started at 0x1000b5b98, Begin of try block\n00000001000b5ba8         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue\n00000001000b5bac         mov        x22, x0\n00000001000b5bb0         adrp      x8, #0x100c5b000                            ; &@selector(getLoanUseSignal)\n00000001000b5bb4         ldr        x1, [x8, #0xa00]                            ; \"allKeys\",@selector(allKeys)\n00000001000b5bb8         bl        imp___stubs__objc_msgSend                   ; objc_msgSend, End of try block started at 0x1000b5ba4, Begin of try block (catch block at 0x1000b5d78)\n00000001000b5bbc         mov        x29, x29                                    ; End of try block started at 0x1000b5bb8, Begin of try block\n00000001000b5bc0         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue\n00000001000b5bc4         mov        x23, x0\n00000001000b5bc8         adrp      x8, #0x100c5b000                            ; &@selector(getLoanUseSignal)\n00000001000b5bcc         ldr        x1, [x8, #0xaa0]                            ; \"descendingOrder\",@selector(descendingOrder)\n00000001000b5bd0         bl        imp___stubs__objc_msgSend                   ; objc_msgSend, End of try block started at 0x1000b5bbc, Begin of try block (catch block at 0x1000b5d78)\n00000001000b5bd4         mov        x29, x29                                    ; End of try block started at 0x1000b5bd0, Begin of try block\n00000001000b5bd8         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue\n00000001000b5bdc         mov        x24, x0\n00000001000b5be0         adrp      x8, #0x100c5b000                            ; &@selector(getLoanUseSignal)\n00000001000b5be4         ldr        x1, [x8, #0xa80]                            ; \"setContentData:\",@selector(setContentData:)\n00000001000b5be8         mov        x0, x19                                     ; End of try block started at 0x1000b5bd4, Begin of try block (catch block at 0x1000b5d78)\n00000001000b5bec         mov        x2, x24\n00000001000b5bf0         bl        imp___stubs__objc_msgSend                   ; objc_msgSend\n00000001000b5bf4         mov        x0, x24                                     ; End of try block started at 0x1000b5be8, Begin of try block\n00000001000b5bf8         bl        imp___stubs__objc_release                   ; objc_release\n00000001000b5bfc         mov        x0, x23\n00000001000b5c00         bl        imp___stubs__objc_release                   ; objc_release\n00000001000b5c04         mov        x0, x22\n00000001000b5c08         bl        imp___stubs__objc_release                   ; objc_release\n00000001000b5c0c         mov        x0, x20                                     ; End of try block started at 0x1000b5bf4, Begin of try block (catch block at 0x1000b5d78)\n00000001000b5c10         mov        x1, x21\n00000001000b5c14         bl        imp___stubs__objc_msgSend                   ; objc_msgSend\n00000001000b5c18         mov        x29, x29                                    ; End of try block started at 0x1000b5c0c, Begin of try block\n00000001000b5c1c         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue\n00000001000b5c20         mov        x20, x0\n00000001000b5c24         adrp      x8, #0x100c5b000                            ; &@selector(getLoanUseSignal)\n00000001000b5c28         ldr        x1, [x8, #0xaa8]                            ; \"setContentParseData:\",@selector(setContentParseData:)\n00000001000b5c2c         mov        x0, x19                                     ; End of try block started at 0x1000b5c18, Begin of try block (catch block at 0x1000b5d78)\n00000001000b5c30         mov        x2, x20\n00000001000b5c34         bl        imp___stubs__objc_msgSend                   ; objc_msgSend\n00000001000b5c38         mov        x0, x20                                     ; End of try block started at 0x1000b5c2c, Begin of try block\n00000001000b5c3c         bl        imp___stubs__objc_release                   ; objc_release\n00000001000b5c40         adrp      x8, #0x100c6c000                            ; &@selector(initWithCountries:selectedCountry:appEventsLogger:loginType:)\n00000001000b5c44         ldr        x0, [x8, #0xeb0]                            ; objc_cls_ref_NSBundle,_OBJC_CLASS_$_NSBundle\n00000001000b5c48         adrp      x8, #0x100c5a000\n00000001000b5c4c         ldr        x1, [x8, #0x698]                            ; \"mainBundle\",@selector(mainBundle)\n00000001000b5c50         bl        imp___stubs__objc_msgSend                   ; objc_msgSend, End of try block started at 0x1000b5c38, Begin of try block (catch block at 0x1000b5d78)\n00000001000b5c54         mov        x29, x29                                    ; End of try block started at 0x1000b5c50, Begin of try block\n00000001000b5c58         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue\n00000001000b5c5c         mov        x20, x0\n00000001000b5c60         adrp      x8, #0x100c5a000\n00000001000b5c64         ldr        x1, [x8, #0x6a0]                            ; \"localizedStringForKey:value:table:\",@selector(localizedStringForKey:value:table:)\n00000001000b5c68         adrp      x2, #0x100b74000                            ; End of try block started at 0x1000b5c54, Begin of try block (catch block at 0x1000b5d78), 0x100b745a8@PAGE\n00000001000b5c6c         add        x2, x2, #0x5a8                              ; 0x100b745a8@PAGEOFF, @\"lab_auth_person_street\"\n00000001000b5c70         adrp      x3, #0x100b6b000                            ; 0x100b6b4c8@PAGE\n00000001000b5c74         add        x3, x3, #0x4c8                              ; 0x100b6b4c8@PAGEOFF, @\"\"\n00000001000b5c78         movz      x4, #0x0                                    ; argument \"instance\" for method imp___stubs__objc_msgSend\n00000001000b5c7c         bl        imp___stubs__objc_msgSend                   ; objc_msgSend\n00000001000b5c80         mov        x29, x29                                    ; End of try block started at 0x1000b5c68, Begin of try block\n00000001000b5c84         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue\n00000001000b5c88         mov        x21, x0\n00000001000b5c8c         adrp      x8, #0x100c5b000                            ; &@selector(getLoanUseSignal)\n00000001000b5c90         ldr        x1, [x8, #0x720]                            ; \"titleLab\",@selector(titleLab)\n00000001000b5c94         mov        x0, x19                                     ; End of try block started at 0x1000b5c80, Begin of try block (catch block at 0x1000b5d78)\n00000001000b5c98         bl        imp___stubs__objc_msgSend                   ; objc_msgSend\n00000001000b5c9c         mov        x29, x29                                    ; End of try block started at 0x1000b5c94, Begin of try block\n00000001000b5ca0         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue\n00000001000b5ca4         mov        x22, x0\n00000001000b5ca8         adrp      x8, #0x100c5a000\n00000001000b5cac         ldr        x1, [x8, #0xa50]                            ; \"setText:\",@selector(setText:)\n00000001000b5cb0         mov        x2, x21                                     ; End of try block started at 0x1000b5c9c, Begin of try block (catch block at 0x1000b5d78)\n00000001000b5cb4         bl        imp___stubs__objc_msgSend                   ; objc_msgSend\n00000001000b5cb8         mov        x0, x22                                     ; End of try block started at 0x1000b5cb0, Begin of try block\n00000001000b5cbc         bl        imp___stubs__objc_release                   ; objc_release\n00000001000b5cc0         mov        x0, x21\n00000001000b5cc4         bl        imp___stubs__objc_release                   ; objc_release\n00000001000b5cc8         mov        x0, x20\n00000001000b5ccc         bl        imp___stubs__objc_release                   ; objc_release\n00000001000b5cd0         mov        x8, sp\n00000001000b5cd4         add        x20, x8, #0x20\n00000001000b5cd8         adrp      x8, #_AVAudioSessionCategoryPlayback_100b28000 ; 0x100b28488@PAGE\n00000001000b5cdc         ldr        x8, [x8, #0x488]                            ; 0x100b28488@PAGEOFF, __NSConcreteStackBlock_100b28488,__NSConcreteStackBlock\n00000001000b5ce0         str        x8, [sp, #0x60 + var_60]\n00000001000b5ce4         adrp      x8, #0x100a1f000\n00000001000b5ce8         ldr        d0, [x8, #0x1c8]                            ; double_value_1_60807E_minus_314\n00000001000b5cec         str        d0, [sp, #0x60 + var_58]\n00000001000b5cf0         adr        x8, #0x1000b5d90\n00000001000b5cf4         nop\n00000001000b5cf8         str        x8, [sp, #0x60 + var_50]\n00000001000b5cfc         adrp      x8, #0x100b30000                            ; 0x100b30e00@PAGE\n00000001000b5d00         add        x8, x8, #0xe00                              ; 0x100b30e00@PAGEOFF, 0x100b30e00\n00000001000b5d04         str        x8, [sp, #0x60 + var_48]\n00000001000b5d08         add        x1, sp, #0x28\n00000001000b5d0c         mov        x0, x20\n00000001000b5d10         bl        imp___stubs__objc_copyWeak                  ; objc_copyWeak\n00000001000b5d14         adrp      x8, #0x100c5b000                            ; &@selector(getLoanUseSignal)\n00000001000b5d18         ldr        x1, [x8, #0xa90]                            ; \"selectItem:\",@selector(selectItem:)\n00000001000b5d1c         mov        x2, sp                                      ; End of try block started at 0x1000b5cb8, Begin of try block (catch block at 0x1000b5d68)\n00000001000b5d20         mov        x0, x19\n00000001000b5d24         bl        imp___stubs__objc_msgSend                   ; objc_msgSend\n00000001000b5d28         adrp      x8, #0x100c5b000                            ; &@selector(getLoanUseSignal)\n00000001000b5d2c         ldr        x1, [x8, #0xa98]                            ; \"show\",@selector(show)\n00000001000b5d30         mov        x0, x19\n00000001000b5d34         bl        imp___stubs__objc_msgSend                   ; objc_msgSend\n00000001000b5d38         mov        x0, x20                                     ; End of try block started at 0x1000b5d1c, Begin of try block\n00000001000b5d3c         bl        imp___stubs__objc_destroyWeak               ; objc_destroyWeak\n00000001000b5d40         mov        x0, x19\n00000001000b5d44         bl        imp___stubs__objc_release                   ; objc_release\n00000001000b5d48         add        x0, sp, #0x28                               ; argument \"instance\" for method imp___stubs__objc_destroyWeak\n00000001000b5d4c         bl        imp___stubs__objc_destroyWeak               ; objc_destroyWeak\n00000001000b5d50         ldp        x29, x30, [sp, #0x60]\n00000001000b5d54         ldp        x20, x19, [sp, #0x50]\n00000001000b5d58         ldp        x22, x21, [sp, #0x40]\n00000001000b5d5c         ldp        x24, x23, [sp, #0x30]\n00000001000b5d60         add        sp, sp, #0x70\n00000001000b5d64         ret\n                        ; endp\n```","source":"_posts/breakhull.md","raw":"---\ntitle: \"iOS安全攻防之破壳\"\ndate: 2018-10-00 19:00:00 +0800\ncomments: true\ntags:\n- 破壳\n- 安全攻防\ncategories:\n- [破壳]\n- [安全攻防]\n---\n\n简单介绍下iOS的安全攻防之破壳\n\n<!-- more -->\n\n### 使用class_dump\n\nclass_dump : 利用runtime特性来dump出工程的class信息，也就是还原出.h文件\nclass_dump 只是 逆向破壳的第一阶段，后面还很多\n\n终端里面运行下载后的 class-dump 可执行文件\n\nclass_dump 只支持OC，不支持swift，有swift的会dump失败\n\n在终端，使用class-dump对 IPA里面的 .app 执行文件 进行dump\n\n![](/images/breakhull-1.png)\n\n### 使用 IDA 或 Hopper Disassembler\n\n反编译出来的伪代码  示例图如下，具体使用 可参考 加固厂商顶象加固报告\n\n![](/images/breakhull-2.png)\n\n```objc\n                     -[AuthInfoController streetAction]:\n00000001000b5b3c         sub        sp, sp, #0x70                               ; Objective C Implementation defined at 0x100bbded0 (instance method), Begin of try block, DATA XREF=0x100bbded0\n00000001000b5b40         stp        x24, x23, [sp, #0x30]\n00000001000b5b44         stp        x22, x21, [sp, #0x40]\n00000001000b5b48         stp        x20, x19, [sp, #0x50]\n00000001000b5b4c         stp        x29, x30, [sp, #0x60]\n00000001000b5b50         add        x29, sp, #0x60\n00000001000b5b54         mov        x20, x0\n00000001000b5b58         adrp      x8, #0x100c5b000                            ; &@selector(getLoanUseSignal)\n00000001000b5b5c         ldr        x1, [x8, #0xa68]                            ; \"resetFirstResponsder\",@selector(resetFirstResponsder)\n00000001000b5b60         bl        imp___stubs__objc_msgSend                   ; objc_msgSend\n00000001000b5b64         add        x0, sp, #0x28\n00000001000b5b68         mov        x1, x20\n00000001000b5b6c         bl        imp___stubs__objc_initWeak                  ; objc_initWeak\n00000001000b5b70         adrp      x8, #0x100c6d000\n00000001000b5b74         ldr        x0, [x8, #0xc8]                            ; objc_cls_ref_InfoSheetView,__objc_class_InfoSheetView_class\n00000001000b5b78         adrp      x8, #0x100c5b000                            ; &@selector(getLoanUseSignal)\n00000001000b5b7c         ldr        x1, [x8, #0xa70]                            ; \"instanceView\",@selector(instanceView)\n00000001000b5b80         bl        imp___stubs__objc_msgSend                   ; objc_msgSend, End of try block started at 0x1000b5b3c, Begin of try block (catch block at 0x1000b5d78)\n00000001000b5b84         mov        x29, x29                                    ; End of try block started at 0x1000b5b80, Begin of try block\n00000001000b5b88         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue\n00000001000b5b8c         mov        x19, x0\n00000001000b5b90         adrp      x8, #0x100c5b000                            ; &@selector(getLoanUseSignal)\n00000001000b5b94         ldr        x21, [x8, #0xaf8]                          ; \"streetDic\",@selector(streetDic)\n00000001000b5b98         mov        x0, x20                                     ; End of try block started at 0x1000b5b84, Begin of try block (catch block at 0x1000b5d78)\n00000001000b5b9c         mov        x1, x21\n00000001000b5ba0         bl        imp___stubs__objc_msgSend                   ; objc_msgSend\n00000001000b5ba4         mov        x29, x29                                    ; End of try block started at 0x1000b5b98, Begin of try block\n00000001000b5ba8         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue\n00000001000b5bac         mov        x22, x0\n00000001000b5bb0         adrp      x8, #0x100c5b000                            ; &@selector(getLoanUseSignal)\n00000001000b5bb4         ldr        x1, [x8, #0xa00]                            ; \"allKeys\",@selector(allKeys)\n00000001000b5bb8         bl        imp___stubs__objc_msgSend                   ; objc_msgSend, End of try block started at 0x1000b5ba4, Begin of try block (catch block at 0x1000b5d78)\n00000001000b5bbc         mov        x29, x29                                    ; End of try block started at 0x1000b5bb8, Begin of try block\n00000001000b5bc0         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue\n00000001000b5bc4         mov        x23, x0\n00000001000b5bc8         adrp      x8, #0x100c5b000                            ; &@selector(getLoanUseSignal)\n00000001000b5bcc         ldr        x1, [x8, #0xaa0]                            ; \"descendingOrder\",@selector(descendingOrder)\n00000001000b5bd0         bl        imp___stubs__objc_msgSend                   ; objc_msgSend, End of try block started at 0x1000b5bbc, Begin of try block (catch block at 0x1000b5d78)\n00000001000b5bd4         mov        x29, x29                                    ; End of try block started at 0x1000b5bd0, Begin of try block\n00000001000b5bd8         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue\n00000001000b5bdc         mov        x24, x0\n00000001000b5be0         adrp      x8, #0x100c5b000                            ; &@selector(getLoanUseSignal)\n00000001000b5be4         ldr        x1, [x8, #0xa80]                            ; \"setContentData:\",@selector(setContentData:)\n00000001000b5be8         mov        x0, x19                                     ; End of try block started at 0x1000b5bd4, Begin of try block (catch block at 0x1000b5d78)\n00000001000b5bec         mov        x2, x24\n00000001000b5bf0         bl        imp___stubs__objc_msgSend                   ; objc_msgSend\n00000001000b5bf4         mov        x0, x24                                     ; End of try block started at 0x1000b5be8, Begin of try block\n00000001000b5bf8         bl        imp___stubs__objc_release                   ; objc_release\n00000001000b5bfc         mov        x0, x23\n00000001000b5c00         bl        imp___stubs__objc_release                   ; objc_release\n00000001000b5c04         mov        x0, x22\n00000001000b5c08         bl        imp___stubs__objc_release                   ; objc_release\n00000001000b5c0c         mov        x0, x20                                     ; End of try block started at 0x1000b5bf4, Begin of try block (catch block at 0x1000b5d78)\n00000001000b5c10         mov        x1, x21\n00000001000b5c14         bl        imp___stubs__objc_msgSend                   ; objc_msgSend\n00000001000b5c18         mov        x29, x29                                    ; End of try block started at 0x1000b5c0c, Begin of try block\n00000001000b5c1c         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue\n00000001000b5c20         mov        x20, x0\n00000001000b5c24         adrp      x8, #0x100c5b000                            ; &@selector(getLoanUseSignal)\n00000001000b5c28         ldr        x1, [x8, #0xaa8]                            ; \"setContentParseData:\",@selector(setContentParseData:)\n00000001000b5c2c         mov        x0, x19                                     ; End of try block started at 0x1000b5c18, Begin of try block (catch block at 0x1000b5d78)\n00000001000b5c30         mov        x2, x20\n00000001000b5c34         bl        imp___stubs__objc_msgSend                   ; objc_msgSend\n00000001000b5c38         mov        x0, x20                                     ; End of try block started at 0x1000b5c2c, Begin of try block\n00000001000b5c3c         bl        imp___stubs__objc_release                   ; objc_release\n00000001000b5c40         adrp      x8, #0x100c6c000                            ; &@selector(initWithCountries:selectedCountry:appEventsLogger:loginType:)\n00000001000b5c44         ldr        x0, [x8, #0xeb0]                            ; objc_cls_ref_NSBundle,_OBJC_CLASS_$_NSBundle\n00000001000b5c48         adrp      x8, #0x100c5a000\n00000001000b5c4c         ldr        x1, [x8, #0x698]                            ; \"mainBundle\",@selector(mainBundle)\n00000001000b5c50         bl        imp___stubs__objc_msgSend                   ; objc_msgSend, End of try block started at 0x1000b5c38, Begin of try block (catch block at 0x1000b5d78)\n00000001000b5c54         mov        x29, x29                                    ; End of try block started at 0x1000b5c50, Begin of try block\n00000001000b5c58         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue\n00000001000b5c5c         mov        x20, x0\n00000001000b5c60         adrp      x8, #0x100c5a000\n00000001000b5c64         ldr        x1, [x8, #0x6a0]                            ; \"localizedStringForKey:value:table:\",@selector(localizedStringForKey:value:table:)\n00000001000b5c68         adrp      x2, #0x100b74000                            ; End of try block started at 0x1000b5c54, Begin of try block (catch block at 0x1000b5d78), 0x100b745a8@PAGE\n00000001000b5c6c         add        x2, x2, #0x5a8                              ; 0x100b745a8@PAGEOFF, @\"lab_auth_person_street\"\n00000001000b5c70         adrp      x3, #0x100b6b000                            ; 0x100b6b4c8@PAGE\n00000001000b5c74         add        x3, x3, #0x4c8                              ; 0x100b6b4c8@PAGEOFF, @\"\"\n00000001000b5c78         movz      x4, #0x0                                    ; argument \"instance\" for method imp___stubs__objc_msgSend\n00000001000b5c7c         bl        imp___stubs__objc_msgSend                   ; objc_msgSend\n00000001000b5c80         mov        x29, x29                                    ; End of try block started at 0x1000b5c68, Begin of try block\n00000001000b5c84         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue\n00000001000b5c88         mov        x21, x0\n00000001000b5c8c         adrp      x8, #0x100c5b000                            ; &@selector(getLoanUseSignal)\n00000001000b5c90         ldr        x1, [x8, #0x720]                            ; \"titleLab\",@selector(titleLab)\n00000001000b5c94         mov        x0, x19                                     ; End of try block started at 0x1000b5c80, Begin of try block (catch block at 0x1000b5d78)\n00000001000b5c98         bl        imp___stubs__objc_msgSend                   ; objc_msgSend\n00000001000b5c9c         mov        x29, x29                                    ; End of try block started at 0x1000b5c94, Begin of try block\n00000001000b5ca0         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue\n00000001000b5ca4         mov        x22, x0\n00000001000b5ca8         adrp      x8, #0x100c5a000\n00000001000b5cac         ldr        x1, [x8, #0xa50]                            ; \"setText:\",@selector(setText:)\n00000001000b5cb0         mov        x2, x21                                     ; End of try block started at 0x1000b5c9c, Begin of try block (catch block at 0x1000b5d78)\n00000001000b5cb4         bl        imp___stubs__objc_msgSend                   ; objc_msgSend\n00000001000b5cb8         mov        x0, x22                                     ; End of try block started at 0x1000b5cb0, Begin of try block\n00000001000b5cbc         bl        imp___stubs__objc_release                   ; objc_release\n00000001000b5cc0         mov        x0, x21\n00000001000b5cc4         bl        imp___stubs__objc_release                   ; objc_release\n00000001000b5cc8         mov        x0, x20\n00000001000b5ccc         bl        imp___stubs__objc_release                   ; objc_release\n00000001000b5cd0         mov        x8, sp\n00000001000b5cd4         add        x20, x8, #0x20\n00000001000b5cd8         adrp      x8, #_AVAudioSessionCategoryPlayback_100b28000 ; 0x100b28488@PAGE\n00000001000b5cdc         ldr        x8, [x8, #0x488]                            ; 0x100b28488@PAGEOFF, __NSConcreteStackBlock_100b28488,__NSConcreteStackBlock\n00000001000b5ce0         str        x8, [sp, #0x60 + var_60]\n00000001000b5ce4         adrp      x8, #0x100a1f000\n00000001000b5ce8         ldr        d0, [x8, #0x1c8]                            ; double_value_1_60807E_minus_314\n00000001000b5cec         str        d0, [sp, #0x60 + var_58]\n00000001000b5cf0         adr        x8, #0x1000b5d90\n00000001000b5cf4         nop\n00000001000b5cf8         str        x8, [sp, #0x60 + var_50]\n00000001000b5cfc         adrp      x8, #0x100b30000                            ; 0x100b30e00@PAGE\n00000001000b5d00         add        x8, x8, #0xe00                              ; 0x100b30e00@PAGEOFF, 0x100b30e00\n00000001000b5d04         str        x8, [sp, #0x60 + var_48]\n00000001000b5d08         add        x1, sp, #0x28\n00000001000b5d0c         mov        x0, x20\n00000001000b5d10         bl        imp___stubs__objc_copyWeak                  ; objc_copyWeak\n00000001000b5d14         adrp      x8, #0x100c5b000                            ; &@selector(getLoanUseSignal)\n00000001000b5d18         ldr        x1, [x8, #0xa90]                            ; \"selectItem:\",@selector(selectItem:)\n00000001000b5d1c         mov        x2, sp                                      ; End of try block started at 0x1000b5cb8, Begin of try block (catch block at 0x1000b5d68)\n00000001000b5d20         mov        x0, x19\n00000001000b5d24         bl        imp___stubs__objc_msgSend                   ; objc_msgSend\n00000001000b5d28         adrp      x8, #0x100c5b000                            ; &@selector(getLoanUseSignal)\n00000001000b5d2c         ldr        x1, [x8, #0xa98]                            ; \"show\",@selector(show)\n00000001000b5d30         mov        x0, x19\n00000001000b5d34         bl        imp___stubs__objc_msgSend                   ; objc_msgSend\n00000001000b5d38         mov        x0, x20                                     ; End of try block started at 0x1000b5d1c, Begin of try block\n00000001000b5d3c         bl        imp___stubs__objc_destroyWeak               ; objc_destroyWeak\n00000001000b5d40         mov        x0, x19\n00000001000b5d44         bl        imp___stubs__objc_release                   ; objc_release\n00000001000b5d48         add        x0, sp, #0x28                               ; argument \"instance\" for method imp___stubs__objc_destroyWeak\n00000001000b5d4c         bl        imp___stubs__objc_destroyWeak               ; objc_destroyWeak\n00000001000b5d50         ldp        x29, x30, [sp, #0x60]\n00000001000b5d54         ldp        x20, x19, [sp, #0x50]\n00000001000b5d58         ldp        x22, x21, [sp, #0x40]\n00000001000b5d5c         ldp        x24, x23, [sp, #0x30]\n00000001000b5d60         add        sp, sp, #0x70\n00000001000b5d64         ret\n                        ; endp\n```","slug":"breakhull","published":1,"updated":"2020-06-28T09:18:54.063Z","layout":"post","photos":[],"link":"","_id":"ckbyvi8ph000fwp3j29fbfz2k","content":"<p>简单介绍下iOS的安全攻防之破壳</p>\n<a id=\"more\"></a>\n\n<h3 id=\"使用class-dump\"><a href=\"#使用class-dump\" class=\"headerlink\" title=\"使用class_dump\"></a>使用class_dump</h3><p>class_dump : 利用runtime特性来dump出工程的class信息，也就是还原出.h文件<br>class_dump 只是 逆向破壳的第一阶段，后面还很多</p>\n<p>终端里面运行下载后的 class-dump 可执行文件</p>\n<p>class_dump 只支持OC，不支持swift，有swift的会dump失败</p>\n<p>在终端，使用class-dump对 IPA里面的 .app 执行文件 进行dump</p>\n<p><img src=\"/images/breakhull-1.png\" alt=\"\"></p>\n<h3 id=\"使用-IDA-或-Hopper-Disassembler\"><a href=\"#使用-IDA-或-Hopper-Disassembler\" class=\"headerlink\" title=\"使用 IDA 或 Hopper Disassembler\"></a>使用 IDA 或 Hopper Disassembler</h3><p>反编译出来的伪代码  示例图如下，具体使用 可参考 加固厂商顶象加固报告</p>\n<p><img src=\"/images/breakhull-2.png\" alt=\"\"></p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">                     -[AuthInfoController streetAction]:</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b3c         sub        sp, sp, #<span class=\"number\">0x70</span>                               ; Objective C Implementation defined at <span class=\"number\">0x100bbded0</span> (instance method), Begin of try block, DATA XREF=<span class=\"number\">0x100bbded0</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b40         stp        x24, x23, [sp, #<span class=\"number\">0x30</span>]</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b44         stp        x22, x21, [sp, #<span class=\"number\">0x40</span>]</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b48         stp        x20, x19, [sp, #<span class=\"number\">0x50</span>]</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b4c         stp        x29, x30, [sp, #<span class=\"number\">0x60</span>]</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b50         add        x29, sp, #<span class=\"number\">0x60</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b54         mov        x20, x0</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b58         adrp      x8, #<span class=\"number\">0x100c5b000</span>                            ; &amp;<span class=\"keyword\">@selector</span>(getLoanUseSignal)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b5c         ldr        x1, [x8, #<span class=\"number\">0xa68</span>]                            ; <span class=\"string\">\"resetFirstResponsder\"</span>,<span class=\"keyword\">@selector</span>(resetFirstResponsder)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b60         bl        imp___stubs__objc_msgSend                   ; objc_msgSend</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b64         add        x0, sp, #<span class=\"number\">0x28</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b68         mov        x1, x20</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b6c         bl        imp___stubs__objc_initWeak                  ; objc_initWeak</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b70         adrp      x8, #<span class=\"number\">0x100c6d000</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b74         ldr        x0, [x8, #<span class=\"number\">0xc8</span>]                            ; objc_cls_ref_InfoSheetView,__objc_class_InfoSheetView_class</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b78         adrp      x8, #<span class=\"number\">0x100c5b000</span>                            ; &amp;<span class=\"keyword\">@selector</span>(getLoanUseSignal)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b7c         ldr        x1, [x8, #<span class=\"number\">0xa70</span>]                            ; <span class=\"string\">\"instanceView\"</span>,<span class=\"keyword\">@selector</span>(instanceView)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b80         bl        imp___stubs__objc_msgSend                   ; objc_msgSend, End of try block started at <span class=\"number\">0x1000b5b3c</span>, Begin of try block (catch block at <span class=\"number\">0x1000b5d78</span>)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b84         mov        x29, x29                                    ; End of try block started at <span class=\"number\">0x1000b5b80</span>, Begin of try block</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b88         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b8c         mov        x19, x0</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b90         adrp      x8, #<span class=\"number\">0x100c5b000</span>                            ; &amp;<span class=\"keyword\">@selector</span>(getLoanUseSignal)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b94         ldr        x21, [x8, #<span class=\"number\">0xaf8</span>]                          ; <span class=\"string\">\"streetDic\"</span>,<span class=\"keyword\">@selector</span>(streetDic)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b98         mov        x0, x20                                     ; End of try block started at <span class=\"number\">0x1000b5b84</span>, Begin of try block (catch block at <span class=\"number\">0x1000b5d78</span>)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b9c         mov        x1, x21</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5ba0         bl        imp___stubs__objc_msgSend                   ; objc_msgSend</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5ba4         mov        x29, x29                                    ; End of try block started at <span class=\"number\">0x1000b5b98</span>, Begin of try block</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5ba8         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bac         mov        x22, x0</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bb0         adrp      x8, #<span class=\"number\">0x100c5b000</span>                            ; &amp;<span class=\"keyword\">@selector</span>(getLoanUseSignal)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bb4         ldr        x1, [x8, #<span class=\"number\">0xa00</span>]                            ; <span class=\"string\">\"allKeys\"</span>,<span class=\"keyword\">@selector</span>(allKeys)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bb8         bl        imp___stubs__objc_msgSend                   ; objc_msgSend, End of try block started at <span class=\"number\">0x1000b5ba4</span>, Begin of try block (catch block at <span class=\"number\">0x1000b5d78</span>)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bbc         mov        x29, x29                                    ; End of try block started at <span class=\"number\">0x1000b5bb8</span>, Begin of try block</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bc0         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bc4         mov        x23, x0</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bc8         adrp      x8, #<span class=\"number\">0x100c5b000</span>                            ; &amp;<span class=\"keyword\">@selector</span>(getLoanUseSignal)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bcc         ldr        x1, [x8, #<span class=\"number\">0xaa0</span>]                            ; <span class=\"string\">\"descendingOrder\"</span>,<span class=\"keyword\">@selector</span>(descendingOrder)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bd0         bl        imp___stubs__objc_msgSend                   ; objc_msgSend, End of try block started at <span class=\"number\">0x1000b5bbc</span>, Begin of try block (catch block at <span class=\"number\">0x1000b5d78</span>)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bd4         mov        x29, x29                                    ; End of try block started at <span class=\"number\">0x1000b5bd0</span>, Begin of try block</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bd8         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bdc         mov        x24, x0</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5be0         adrp      x8, #<span class=\"number\">0x100c5b000</span>                            ; &amp;<span class=\"keyword\">@selector</span>(getLoanUseSignal)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5be4         ldr        x1, [x8, #<span class=\"number\">0xa80</span>]                            ; <span class=\"string\">\"setContentData:\"</span>,<span class=\"keyword\">@selector</span>(setContentData:)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5be8         mov        x0, x19                                     ; End of try block started at <span class=\"number\">0x1000b5bd4</span>, Begin of try block (catch block at <span class=\"number\">0x1000b5d78</span>)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bec         mov        x2, x24</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bf0         bl        imp___stubs__objc_msgSend                   ; objc_msgSend</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bf4         mov        x0, x24                                     ; End of try block started at <span class=\"number\">0x1000b5be8</span>, Begin of try block</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bf8         bl        imp___stubs__objc_release                   ; objc_release</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bfc         mov        x0, x23</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c00         bl        imp___stubs__objc_release                   ; objc_release</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c04         mov        x0, x22</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c08         bl        imp___stubs__objc_release                   ; objc_release</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c0c         mov        x0, x20                                     ; End of try block started at <span class=\"number\">0x1000b5bf4</span>, Begin of try block (catch block at <span class=\"number\">0x1000b5d78</span>)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c10         mov        x1, x21</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c14         bl        imp___stubs__objc_msgSend                   ; objc_msgSend</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c18         mov        x29, x29                                    ; End of try block started at <span class=\"number\">0x1000b5c0c</span>, Begin of try block</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c1c         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c20         mov        x20, x0</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c24         adrp      x8, #<span class=\"number\">0x100c5b000</span>                            ; &amp;<span class=\"keyword\">@selector</span>(getLoanUseSignal)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c28         ldr        x1, [x8, #<span class=\"number\">0xaa8</span>]                            ; <span class=\"string\">\"setContentParseData:\"</span>,<span class=\"keyword\">@selector</span>(setContentParseData:)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c2c         mov        x0, x19                                     ; End of try block started at <span class=\"number\">0x1000b5c18</span>, Begin of try block (catch block at <span class=\"number\">0x1000b5d78</span>)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c30         mov        x2, x20</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c34         bl        imp___stubs__objc_msgSend                   ; objc_msgSend</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c38         mov        x0, x20                                     ; End of try block started at <span class=\"number\">0x1000b5c2c</span>, Begin of try block</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c3c         bl        imp___stubs__objc_release                   ; objc_release</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c40         adrp      x8, #<span class=\"number\">0x100c6c000</span>                            ; &amp;<span class=\"keyword\">@selector</span>(initWithCountries:selectedCountry:appEventsLogger:loginType:)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c44         ldr        x0, [x8, #<span class=\"number\">0xeb0</span>]                            ; objc_cls_ref_NSBundle,_OBJC_CLASS_$_NSBundle</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c48         adrp      x8, #<span class=\"number\">0x100c5a000</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c4c         ldr        x1, [x8, #<span class=\"number\">0x698</span>]                            ; <span class=\"string\">\"mainBundle\"</span>,<span class=\"keyword\">@selector</span>(mainBundle)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c50         bl        imp___stubs__objc_msgSend                   ; objc_msgSend, End of try block started at <span class=\"number\">0x1000b5c38</span>, Begin of try block (catch block at <span class=\"number\">0x1000b5d78</span>)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c54         mov        x29, x29                                    ; End of try block started at <span class=\"number\">0x1000b5c50</span>, Begin of try block</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c58         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c5c         mov        x20, x0</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c60         adrp      x8, #<span class=\"number\">0x100c5a000</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c64         ldr        x1, [x8, #<span class=\"number\">0x6a0</span>]                            ; <span class=\"string\">\"localizedStringForKey:value:table:\"</span>,<span class=\"keyword\">@selector</span>(localizedStringForKey:value:table:)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c68         adrp      x2, #<span class=\"number\">0x100b74000</span>                            ; End of try block started at <span class=\"number\">0x1000b5c54</span>, Begin of try block (catch block at <span class=\"number\">0x1000b5d78</span>), <span class=\"number\">0x100b745a8</span>@PAGE</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c6c         add        x2, x2, #<span class=\"number\">0x5a8</span>                              ; <span class=\"number\">0x100b745a8</span>@PAGEOFF, <span class=\"string\">@\"lab_auth_person_street\"</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c70         adrp      x3, #<span class=\"number\">0x100b6b000</span>                            ; <span class=\"number\">0x100b6b4c8</span>@PAGE</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c74         add        x3, x3, #<span class=\"number\">0x4c8</span>                              ; <span class=\"number\">0x100b6b4c8</span>@PAGEOFF, <span class=\"string\">@\"\"</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c78         movz      x4, #<span class=\"number\">0x0</span>                                    ; argument <span class=\"string\">\"instance\"</span> <span class=\"keyword\">for</span> method imp___stubs__objc_msgSend</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c7c         bl        imp___stubs__objc_msgSend                   ; objc_msgSend</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c80         mov        x29, x29                                    ; End of try block started at <span class=\"number\">0x1000b5c68</span>, Begin of try block</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c84         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c88         mov        x21, x0</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c8c         adrp      x8, #<span class=\"number\">0x100c5b000</span>                            ; &amp;<span class=\"keyword\">@selector</span>(getLoanUseSignal)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c90         ldr        x1, [x8, #<span class=\"number\">0x720</span>]                            ; <span class=\"string\">\"titleLab\"</span>,<span class=\"keyword\">@selector</span>(titleLab)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c94         mov        x0, x19                                     ; End of try block started at <span class=\"number\">0x1000b5c80</span>, Begin of try block (catch block at <span class=\"number\">0x1000b5d78</span>)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c98         bl        imp___stubs__objc_msgSend                   ; objc_msgSend</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c9c         mov        x29, x29                                    ; End of try block started at <span class=\"number\">0x1000b5c94</span>, Begin of try block</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5ca0         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5ca4         mov        x22, x0</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5ca8         adrp      x8, #<span class=\"number\">0x100c5a000</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cac         ldr        x1, [x8, #<span class=\"number\">0xa50</span>]                            ; <span class=\"string\">\"setText:\"</span>,<span class=\"keyword\">@selector</span>(setText:)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cb0         mov        x2, x21                                     ; End of try block started at <span class=\"number\">0x1000b5c9c</span>, Begin of try block (catch block at <span class=\"number\">0x1000b5d78</span>)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cb4         bl        imp___stubs__objc_msgSend                   ; objc_msgSend</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cb8         mov        x0, x22                                     ; End of try block started at <span class=\"number\">0x1000b5cb0</span>, Begin of try block</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cbc         bl        imp___stubs__objc_release                   ; objc_release</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cc0         mov        x0, x21</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cc4         bl        imp___stubs__objc_release                   ; objc_release</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cc8         mov        x0, x20</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5ccc         bl        imp___stubs__objc_release                   ; objc_release</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cd0         mov        x8, sp</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cd4         add        x20, x8, #<span class=\"number\">0x20</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cd8         adrp      x8, #_AVAudioSessionCategoryPlayback_100b28000 ; <span class=\"number\">0x100b28488</span>@PAGE</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cdc         ldr        x8, [x8, #<span class=\"number\">0x488</span>]                            ; <span class=\"number\">0x100b28488</span>@PAGEOFF, __NSConcreteStackBlock_100b28488,__NSConcreteStackBlock</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5ce0         str        x8, [sp, #<span class=\"number\">0x60</span> + var_60]</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5ce4         adrp      x8, #<span class=\"number\">0x100a1f000</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5ce8         ldr        d0, [x8, #<span class=\"number\">0x1c8</span>]                            ; double_value_1_60807E_minus_314</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cec         str        d0, [sp, #<span class=\"number\">0x60</span> + var_58]</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cf0         adr        x8, #<span class=\"number\">0x1000b5d90</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cf4         nop</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cf8         str        x8, [sp, #<span class=\"number\">0x60</span> + var_50]</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cfc         adrp      x8, #<span class=\"number\">0x100b30000</span>                            ; <span class=\"number\">0x100b30e00</span>@PAGE</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d00         add        x8, x8, #<span class=\"number\">0xe00</span>                              ; <span class=\"number\">0x100b30e00</span>@PAGEOFF, <span class=\"number\">0x100b30e00</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d04         str        x8, [sp, #<span class=\"number\">0x60</span> + var_48]</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d08         add        x1, sp, #<span class=\"number\">0x28</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d0c         mov        x0, x20</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d10         bl        imp___stubs__objc_copyWeak                  ; objc_copyWeak</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d14         adrp      x8, #<span class=\"number\">0x100c5b000</span>                            ; &amp;<span class=\"keyword\">@selector</span>(getLoanUseSignal)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d18         ldr        x1, [x8, #<span class=\"number\">0xa90</span>]                            ; <span class=\"string\">\"selectItem:\"</span>,<span class=\"keyword\">@selector</span>(selectItem:)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d1c         mov        x2, sp                                      ; End of try block started at <span class=\"number\">0x1000b5cb8</span>, Begin of try block (catch block at <span class=\"number\">0x1000b5d68</span>)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d20         mov        x0, x19</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d24         bl        imp___stubs__objc_msgSend                   ; objc_msgSend</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d28         adrp      x8, #<span class=\"number\">0x100c5b000</span>                            ; &amp;<span class=\"keyword\">@selector</span>(getLoanUseSignal)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d2c         ldr        x1, [x8, #<span class=\"number\">0xa98</span>]                            ; <span class=\"string\">\"show\"</span>,<span class=\"keyword\">@selector</span>(show)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d30         mov        x0, x19</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d34         bl        imp___stubs__objc_msgSend                   ; objc_msgSend</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d38         mov        x0, x20                                     ; End of try block started at <span class=\"number\">0x1000b5d1c</span>, Begin of try block</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d3c         bl        imp___stubs__objc_destroyWeak               ; objc_destroyWeak</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d40         mov        x0, x19</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d44         bl        imp___stubs__objc_release                   ; objc_release</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d48         add        x0, sp, #<span class=\"number\">0x28</span>                               ; argument <span class=\"string\">\"instance\"</span> <span class=\"keyword\">for</span> method imp___stubs__objc_destroyWeak</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d4c         bl        imp___stubs__objc_destroyWeak               ; objc_destroyWeak</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d50         ldp        x29, x30, [sp, #<span class=\"number\">0x60</span>]</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d54         ldp        x20, x19, [sp, #<span class=\"number\">0x50</span>]</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d58         ldp        x22, x21, [sp, #<span class=\"number\">0x40</span>]</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d5c         ldp        x24, x23, [sp, #<span class=\"number\">0x30</span>]</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d60         add        sp, sp, #<span class=\"number\">0x70</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d64         ret</span><br><span class=\"line\">                        ; endp</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>简单介绍下iOS的安全攻防之破壳</p>","more":"<h3 id=\"使用class-dump\"><a href=\"#使用class-dump\" class=\"headerlink\" title=\"使用class_dump\"></a>使用class_dump</h3><p>class_dump : 利用runtime特性来dump出工程的class信息，也就是还原出.h文件<br>class_dump 只是 逆向破壳的第一阶段，后面还很多</p>\n<p>终端里面运行下载后的 class-dump 可执行文件</p>\n<p>class_dump 只支持OC，不支持swift，有swift的会dump失败</p>\n<p>在终端，使用class-dump对 IPA里面的 .app 执行文件 进行dump</p>\n<p><img src=\"/images/breakhull-1.png\" alt=\"\"></p>\n<h3 id=\"使用-IDA-或-Hopper-Disassembler\"><a href=\"#使用-IDA-或-Hopper-Disassembler\" class=\"headerlink\" title=\"使用 IDA 或 Hopper Disassembler\"></a>使用 IDA 或 Hopper Disassembler</h3><p>反编译出来的伪代码  示例图如下，具体使用 可参考 加固厂商顶象加固报告</p>\n<p><img src=\"/images/breakhull-2.png\" alt=\"\"></p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">                     -[AuthInfoController streetAction]:</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b3c         sub        sp, sp, #<span class=\"number\">0x70</span>                               ; Objective C Implementation defined at <span class=\"number\">0x100bbded0</span> (instance method), Begin of try block, DATA XREF=<span class=\"number\">0x100bbded0</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b40         stp        x24, x23, [sp, #<span class=\"number\">0x30</span>]</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b44         stp        x22, x21, [sp, #<span class=\"number\">0x40</span>]</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b48         stp        x20, x19, [sp, #<span class=\"number\">0x50</span>]</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b4c         stp        x29, x30, [sp, #<span class=\"number\">0x60</span>]</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b50         add        x29, sp, #<span class=\"number\">0x60</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b54         mov        x20, x0</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b58         adrp      x8, #<span class=\"number\">0x100c5b000</span>                            ; &amp;<span class=\"keyword\">@selector</span>(getLoanUseSignal)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b5c         ldr        x1, [x8, #<span class=\"number\">0xa68</span>]                            ; <span class=\"string\">\"resetFirstResponsder\"</span>,<span class=\"keyword\">@selector</span>(resetFirstResponsder)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b60         bl        imp___stubs__objc_msgSend                   ; objc_msgSend</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b64         add        x0, sp, #<span class=\"number\">0x28</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b68         mov        x1, x20</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b6c         bl        imp___stubs__objc_initWeak                  ; objc_initWeak</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b70         adrp      x8, #<span class=\"number\">0x100c6d000</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b74         ldr        x0, [x8, #<span class=\"number\">0xc8</span>]                            ; objc_cls_ref_InfoSheetView,__objc_class_InfoSheetView_class</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b78         adrp      x8, #<span class=\"number\">0x100c5b000</span>                            ; &amp;<span class=\"keyword\">@selector</span>(getLoanUseSignal)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b7c         ldr        x1, [x8, #<span class=\"number\">0xa70</span>]                            ; <span class=\"string\">\"instanceView\"</span>,<span class=\"keyword\">@selector</span>(instanceView)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b80         bl        imp___stubs__objc_msgSend                   ; objc_msgSend, End of try block started at <span class=\"number\">0x1000b5b3c</span>, Begin of try block (catch block at <span class=\"number\">0x1000b5d78</span>)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b84         mov        x29, x29                                    ; End of try block started at <span class=\"number\">0x1000b5b80</span>, Begin of try block</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b88         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b8c         mov        x19, x0</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b90         adrp      x8, #<span class=\"number\">0x100c5b000</span>                            ; &amp;<span class=\"keyword\">@selector</span>(getLoanUseSignal)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b94         ldr        x21, [x8, #<span class=\"number\">0xaf8</span>]                          ; <span class=\"string\">\"streetDic\"</span>,<span class=\"keyword\">@selector</span>(streetDic)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b98         mov        x0, x20                                     ; End of try block started at <span class=\"number\">0x1000b5b84</span>, Begin of try block (catch block at <span class=\"number\">0x1000b5d78</span>)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5b9c         mov        x1, x21</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5ba0         bl        imp___stubs__objc_msgSend                   ; objc_msgSend</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5ba4         mov        x29, x29                                    ; End of try block started at <span class=\"number\">0x1000b5b98</span>, Begin of try block</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5ba8         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bac         mov        x22, x0</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bb0         adrp      x8, #<span class=\"number\">0x100c5b000</span>                            ; &amp;<span class=\"keyword\">@selector</span>(getLoanUseSignal)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bb4         ldr        x1, [x8, #<span class=\"number\">0xa00</span>]                            ; <span class=\"string\">\"allKeys\"</span>,<span class=\"keyword\">@selector</span>(allKeys)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bb8         bl        imp___stubs__objc_msgSend                   ; objc_msgSend, End of try block started at <span class=\"number\">0x1000b5ba4</span>, Begin of try block (catch block at <span class=\"number\">0x1000b5d78</span>)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bbc         mov        x29, x29                                    ; End of try block started at <span class=\"number\">0x1000b5bb8</span>, Begin of try block</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bc0         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bc4         mov        x23, x0</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bc8         adrp      x8, #<span class=\"number\">0x100c5b000</span>                            ; &amp;<span class=\"keyword\">@selector</span>(getLoanUseSignal)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bcc         ldr        x1, [x8, #<span class=\"number\">0xaa0</span>]                            ; <span class=\"string\">\"descendingOrder\"</span>,<span class=\"keyword\">@selector</span>(descendingOrder)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bd0         bl        imp___stubs__objc_msgSend                   ; objc_msgSend, End of try block started at <span class=\"number\">0x1000b5bbc</span>, Begin of try block (catch block at <span class=\"number\">0x1000b5d78</span>)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bd4         mov        x29, x29                                    ; End of try block started at <span class=\"number\">0x1000b5bd0</span>, Begin of try block</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bd8         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bdc         mov        x24, x0</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5be0         adrp      x8, #<span class=\"number\">0x100c5b000</span>                            ; &amp;<span class=\"keyword\">@selector</span>(getLoanUseSignal)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5be4         ldr        x1, [x8, #<span class=\"number\">0xa80</span>]                            ; <span class=\"string\">\"setContentData:\"</span>,<span class=\"keyword\">@selector</span>(setContentData:)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5be8         mov        x0, x19                                     ; End of try block started at <span class=\"number\">0x1000b5bd4</span>, Begin of try block (catch block at <span class=\"number\">0x1000b5d78</span>)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bec         mov        x2, x24</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bf0         bl        imp___stubs__objc_msgSend                   ; objc_msgSend</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bf4         mov        x0, x24                                     ; End of try block started at <span class=\"number\">0x1000b5be8</span>, Begin of try block</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bf8         bl        imp___stubs__objc_release                   ; objc_release</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5bfc         mov        x0, x23</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c00         bl        imp___stubs__objc_release                   ; objc_release</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c04         mov        x0, x22</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c08         bl        imp___stubs__objc_release                   ; objc_release</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c0c         mov        x0, x20                                     ; End of try block started at <span class=\"number\">0x1000b5bf4</span>, Begin of try block (catch block at <span class=\"number\">0x1000b5d78</span>)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c10         mov        x1, x21</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c14         bl        imp___stubs__objc_msgSend                   ; objc_msgSend</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c18         mov        x29, x29                                    ; End of try block started at <span class=\"number\">0x1000b5c0c</span>, Begin of try block</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c1c         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c20         mov        x20, x0</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c24         adrp      x8, #<span class=\"number\">0x100c5b000</span>                            ; &amp;<span class=\"keyword\">@selector</span>(getLoanUseSignal)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c28         ldr        x1, [x8, #<span class=\"number\">0xaa8</span>]                            ; <span class=\"string\">\"setContentParseData:\"</span>,<span class=\"keyword\">@selector</span>(setContentParseData:)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c2c         mov        x0, x19                                     ; End of try block started at <span class=\"number\">0x1000b5c18</span>, Begin of try block (catch block at <span class=\"number\">0x1000b5d78</span>)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c30         mov        x2, x20</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c34         bl        imp___stubs__objc_msgSend                   ; objc_msgSend</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c38         mov        x0, x20                                     ; End of try block started at <span class=\"number\">0x1000b5c2c</span>, Begin of try block</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c3c         bl        imp___stubs__objc_release                   ; objc_release</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c40         adrp      x8, #<span class=\"number\">0x100c6c000</span>                            ; &amp;<span class=\"keyword\">@selector</span>(initWithCountries:selectedCountry:appEventsLogger:loginType:)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c44         ldr        x0, [x8, #<span class=\"number\">0xeb0</span>]                            ; objc_cls_ref_NSBundle,_OBJC_CLASS_$_NSBundle</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c48         adrp      x8, #<span class=\"number\">0x100c5a000</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c4c         ldr        x1, [x8, #<span class=\"number\">0x698</span>]                            ; <span class=\"string\">\"mainBundle\"</span>,<span class=\"keyword\">@selector</span>(mainBundle)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c50         bl        imp___stubs__objc_msgSend                   ; objc_msgSend, End of try block started at <span class=\"number\">0x1000b5c38</span>, Begin of try block (catch block at <span class=\"number\">0x1000b5d78</span>)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c54         mov        x29, x29                                    ; End of try block started at <span class=\"number\">0x1000b5c50</span>, Begin of try block</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c58         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c5c         mov        x20, x0</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c60         adrp      x8, #<span class=\"number\">0x100c5a000</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c64         ldr        x1, [x8, #<span class=\"number\">0x6a0</span>]                            ; <span class=\"string\">\"localizedStringForKey:value:table:\"</span>,<span class=\"keyword\">@selector</span>(localizedStringForKey:value:table:)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c68         adrp      x2, #<span class=\"number\">0x100b74000</span>                            ; End of try block started at <span class=\"number\">0x1000b5c54</span>, Begin of try block (catch block at <span class=\"number\">0x1000b5d78</span>), <span class=\"number\">0x100b745a8</span>@PAGE</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c6c         add        x2, x2, #<span class=\"number\">0x5a8</span>                              ; <span class=\"number\">0x100b745a8</span>@PAGEOFF, <span class=\"string\">@\"lab_auth_person_street\"</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c70         adrp      x3, #<span class=\"number\">0x100b6b000</span>                            ; <span class=\"number\">0x100b6b4c8</span>@PAGE</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c74         add        x3, x3, #<span class=\"number\">0x4c8</span>                              ; <span class=\"number\">0x100b6b4c8</span>@PAGEOFF, <span class=\"string\">@\"\"</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c78         movz      x4, #<span class=\"number\">0x0</span>                                    ; argument <span class=\"string\">\"instance\"</span> <span class=\"keyword\">for</span> method imp___stubs__objc_msgSend</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c7c         bl        imp___stubs__objc_msgSend                   ; objc_msgSend</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c80         mov        x29, x29                                    ; End of try block started at <span class=\"number\">0x1000b5c68</span>, Begin of try block</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c84         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c88         mov        x21, x0</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c8c         adrp      x8, #<span class=\"number\">0x100c5b000</span>                            ; &amp;<span class=\"keyword\">@selector</span>(getLoanUseSignal)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c90         ldr        x1, [x8, #<span class=\"number\">0x720</span>]                            ; <span class=\"string\">\"titleLab\"</span>,<span class=\"keyword\">@selector</span>(titleLab)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c94         mov        x0, x19                                     ; End of try block started at <span class=\"number\">0x1000b5c80</span>, Begin of try block (catch block at <span class=\"number\">0x1000b5d78</span>)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c98         bl        imp___stubs__objc_msgSend                   ; objc_msgSend</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5c9c         mov        x29, x29                                    ; End of try block started at <span class=\"number\">0x1000b5c94</span>, Begin of try block</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5ca0         bl        imp___stubs__objc_retainAutoreleasedReturnValue ; objc_retainAutoreleasedReturnValue</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5ca4         mov        x22, x0</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5ca8         adrp      x8, #<span class=\"number\">0x100c5a000</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cac         ldr        x1, [x8, #<span class=\"number\">0xa50</span>]                            ; <span class=\"string\">\"setText:\"</span>,<span class=\"keyword\">@selector</span>(setText:)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cb0         mov        x2, x21                                     ; End of try block started at <span class=\"number\">0x1000b5c9c</span>, Begin of try block (catch block at <span class=\"number\">0x1000b5d78</span>)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cb4         bl        imp___stubs__objc_msgSend                   ; objc_msgSend</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cb8         mov        x0, x22                                     ; End of try block started at <span class=\"number\">0x1000b5cb0</span>, Begin of try block</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cbc         bl        imp___stubs__objc_release                   ; objc_release</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cc0         mov        x0, x21</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cc4         bl        imp___stubs__objc_release                   ; objc_release</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cc8         mov        x0, x20</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5ccc         bl        imp___stubs__objc_release                   ; objc_release</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cd0         mov        x8, sp</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cd4         add        x20, x8, #<span class=\"number\">0x20</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cd8         adrp      x8, #_AVAudioSessionCategoryPlayback_100b28000 ; <span class=\"number\">0x100b28488</span>@PAGE</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cdc         ldr        x8, [x8, #<span class=\"number\">0x488</span>]                            ; <span class=\"number\">0x100b28488</span>@PAGEOFF, __NSConcreteStackBlock_100b28488,__NSConcreteStackBlock</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5ce0         str        x8, [sp, #<span class=\"number\">0x60</span> + var_60]</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5ce4         adrp      x8, #<span class=\"number\">0x100a1f000</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5ce8         ldr        d0, [x8, #<span class=\"number\">0x1c8</span>]                            ; double_value_1_60807E_minus_314</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cec         str        d0, [sp, #<span class=\"number\">0x60</span> + var_58]</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cf0         adr        x8, #<span class=\"number\">0x1000b5d90</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cf4         nop</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cf8         str        x8, [sp, #<span class=\"number\">0x60</span> + var_50]</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5cfc         adrp      x8, #<span class=\"number\">0x100b30000</span>                            ; <span class=\"number\">0x100b30e00</span>@PAGE</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d00         add        x8, x8, #<span class=\"number\">0xe00</span>                              ; <span class=\"number\">0x100b30e00</span>@PAGEOFF, <span class=\"number\">0x100b30e00</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d04         str        x8, [sp, #<span class=\"number\">0x60</span> + var_48]</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d08         add        x1, sp, #<span class=\"number\">0x28</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d0c         mov        x0, x20</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d10         bl        imp___stubs__objc_copyWeak                  ; objc_copyWeak</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d14         adrp      x8, #<span class=\"number\">0x100c5b000</span>                            ; &amp;<span class=\"keyword\">@selector</span>(getLoanUseSignal)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d18         ldr        x1, [x8, #<span class=\"number\">0xa90</span>]                            ; <span class=\"string\">\"selectItem:\"</span>,<span class=\"keyword\">@selector</span>(selectItem:)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d1c         mov        x2, sp                                      ; End of try block started at <span class=\"number\">0x1000b5cb8</span>, Begin of try block (catch block at <span class=\"number\">0x1000b5d68</span>)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d20         mov        x0, x19</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d24         bl        imp___stubs__objc_msgSend                   ; objc_msgSend</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d28         adrp      x8, #<span class=\"number\">0x100c5b000</span>                            ; &amp;<span class=\"keyword\">@selector</span>(getLoanUseSignal)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d2c         ldr        x1, [x8, #<span class=\"number\">0xa98</span>]                            ; <span class=\"string\">\"show\"</span>,<span class=\"keyword\">@selector</span>(show)</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d30         mov        x0, x19</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d34         bl        imp___stubs__objc_msgSend                   ; objc_msgSend</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d38         mov        x0, x20                                     ; End of try block started at <span class=\"number\">0x1000b5d1c</span>, Begin of try block</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d3c         bl        imp___stubs__objc_destroyWeak               ; objc_destroyWeak</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d40         mov        x0, x19</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d44         bl        imp___stubs__objc_release                   ; objc_release</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d48         add        x0, sp, #<span class=\"number\">0x28</span>                               ; argument <span class=\"string\">\"instance\"</span> <span class=\"keyword\">for</span> method imp___stubs__objc_destroyWeak</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d4c         bl        imp___stubs__objc_destroyWeak               ; objc_destroyWeak</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d50         ldp        x29, x30, [sp, #<span class=\"number\">0x60</span>]</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d54         ldp        x20, x19, [sp, #<span class=\"number\">0x50</span>]</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d58         ldp        x22, x21, [sp, #<span class=\"number\">0x40</span>]</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d5c         ldp        x24, x23, [sp, #<span class=\"number\">0x30</span>]</span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d60         add        sp, sp, #<span class=\"number\">0x70</span></span><br><span class=\"line\"><span class=\"number\">00000001000</span>b5d64         ret</span><br><span class=\"line\">                        ; endp</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"ck4xzj9af000988s65jb41cl0","category_id":"ck4xzj9an000l88s68kbgf45q","_id":"ck4xzj9aw001088s6a4im42ls"},{"post_id":"ck4xzj9af000988s65jb41cl0","category_id":"ck4xzj9aa000488s60zx0c2jq","_id":"ck4xzj9aw001388s6d2lc1jlg"},{"post_id":"ck4xzj9ag000c88s60t88eq65","category_id":"ck4xzj9ar000s88s6gkanfall","_id":"ck4xzj9ax001688s6ceue3a9p"},{"post_id":"ck4xzj9ag000c88s60t88eq65","category_id":"ck4xzj9aa000488s60zx0c2jq","_id":"ck4xzj9ax001888s63ygog1i9"},{"post_id":"ck4xzj9ai000e88s693veg5qc","category_id":"ck4xzj9ar000s88s6gkanfall","_id":"ck4xzj9ay001b88s6ajn13mzp"},{"post_id":"ck4xzj9ai000e88s693veg5qc","category_id":"ck4xzj9aa000488s60zx0c2jq","_id":"ck4xzj9ay001c88s6fajrb282"},{"post_id":"ck4xzj9aj000h88s62iv46y3y","category_id":"ck4xzj9ar000s88s6gkanfall","_id":"ck4xzj9az001f88s64vre12v4"},{"post_id":"ck4xzj9aj000h88s62iv46y3y","category_id":"ck4xzj9aa000488s60zx0c2jq","_id":"ck4xzj9b0001h88s636fwb1j8"},{"post_id":"ck4xzj9al000k88s65d2p26ae","category_id":"ck4xzj9ar000s88s6gkanfall","_id":"ck4xzj9b2001j88s61gt506a5"},{"post_id":"ck4xzj9al000k88s65d2p26ae","category_id":"ck4xzj9aa000488s60zx0c2jq","_id":"ck4xzj9b2001m88s62qw0bqut"},{"post_id":"ck4xzj9ae000888s6418ved7h","category_id":"ck4xzj9aj000g88s6818fc3w1","_id":"ck4xzj9b3001o88s68muh3yir"},{"post_id":"ck4xzj9ae000888s6418ved7h","category_id":"ck4xzj9ay001a88s641tg4tx7","_id":"ck4xzj9b3001r88s62qfabb0t"},{"post_id":"ck4xzj9an000m88s6966j9vkt","category_id":"ck4xzj9ar000s88s6gkanfall","_id":"ck4xzj9b4001t88s6fuj410o0"},{"post_id":"ck4xzj9an000m88s6966j9vkt","category_id":"ck4xzj9aa000488s60zx0c2jq","_id":"ck4xzj9b4001w88s6e2op7d2r"},{"post_id":"ck4xzj9ap000p88s68p45fbjy","category_id":"ck4xzj9b2001l88s64oup5bzh","_id":"ck4xzj9b5001y88s6dp378i84"},{"post_id":"ck4xzj9ap000p88s68p45fbjy","category_id":"ck4xzj9aa000488s60zx0c2jq","_id":"ck4xzj9b5001z88s6bcyn4kvd"},{"post_id":"ck4xzj9aq000r88s68lln6hj0","category_id":"ck4xzj9b3001q88s67rbo5wh4","_id":"ck4xzj9b5002088s64nkrgypc"},{"post_id":"ck4xzj9aq000r88s68lln6hj0","category_id":"ck4xzj9aa000488s60zx0c2jq","_id":"ck4xzj9b5002288s60w3s03e3"},{"post_id":"ck4xzj9as000u88s65un4axtj","category_id":"ck4xzj9b4001v88s6ddu939jq","_id":"ck4xzj9b6002488s6dwv3ec7p"},{"post_id":"ck4xzj9as000u88s65un4axtj","category_id":"ck4xzj9aa000488s60zx0c2jq","_id":"ck4xzj9b6002588s6dv7r9adc"},{"post_id":"ckbq74rf80001nc3j36ry28et","category_id":"ck4xzj9bf002888s69mwaf5sd","_id":"ckbq74rfb0003nc3j8z6shx7z"},{"post_id":"ckbq9wklh0000aj3j3ovle2g6","category_id":"ckbq9wklr0002aj3jdaof6uer","_id":"ckbq9wklu0007aj3jeqhe1ldi"},{"post_id":"ckbq9wklh0000aj3j3ovle2g6","category_id":"ckbq9wklt0004aj3j69pr8d9d","_id":"ckbq9wklu0008aj3j86k13l9u"},{"post_id":"ckbqeimtq0000uj3jcunkcuti","category_id":"ckbqeimtz0002uj3j5id41khy","_id":"ckbqeimu10007uj3j57291new"},{"post_id":"ckbqeimtq0000uj3jcunkcuti","category_id":"ckbqeimu00004uj3j2ozhgbx4","_id":"ckbqeimu10008uj3j7vgu6cpc"},{"post_id":"ckbqeimtq0000uj3jcunkcuti","category_id":"ckbqf5a6p0000ol3j0gox63lv","_id":"ckbqf5a6t0001ol3jg4r80gce"},{"post_id":"ckbrn0y3t00006u3j05i1fbm5","category_id":"ckbrn0y4500026u3jgreqe0rb","_id":"ckbrn0y4800076u3jhc0d3aws"},{"post_id":"ckbrn0y3t00006u3j05i1fbm5","category_id":"ckbrn0y4700046u3j5lrfeuze","_id":"ckbrn0y4800086u3j87ks73h6"},{"post_id":"ckbrn0y4f00096u3j18cz6iya","category_id":"ckbrn0y4h000b6u3j72x74l31","_id":"ckbrn0y4i000g6u3jfk2rdvb3"},{"post_id":"ckbrn0y4f00096u3j18cz6iya","category_id":"ckbrn0y4h000d6u3j3hiwado0","_id":"ckbrn0y4i000h6u3j94sj4h2u"},{"post_id":"ckbszw79a0000l73jglqodf9a","category_id":"ckbszw79o0004l73j9l1j7yvn","_id":"ckbszw79u000il73j3r7y7hig"},{"post_id":"ckbszw79a0000l73jglqodf9a","category_id":"ckbszw79s000cl73j2dsw7yqd","_id":"ckbszw79u000kl73j6ts05vx3"},{"post_id":"ckbszw79h0001l73j1us84m6i","category_id":"ckbszw79q0006l73j3m6u0oej","_id":"ckbszw79u000ml73jg2bw7z4s"},{"post_id":"ckbszw79h0001l73j1us84m6i","category_id":"ckbszw79t000el73ja19f94dp","_id":"ckbszw79u000nl73j2y1i8m5v"},{"post_id":"ckbszw79n0003l73j7apbcn2m","category_id":"ckbszw79r0008l73jb5j54stl","_id":"ckbszw79v000ol73j4uxt45z9"},{"post_id":"ckbszw79n0003l73j7apbcn2m","category_id":"ckbszw79t000hl73jb9yo4xav","_id":"ckbszw79v000pl73jdedk4b1m"},{"post_id":"ckbxmgp900003ty3jen8pdigx","category_id":"ckbxmgp95000cty3j9xx2dx9y","_id":"ckbxmgp9c000oty3jhoxc9x9g"},{"post_id":"ckbxmgp910005ty3jhe0z55ym","category_id":"ckbxmgp98000ity3jgabgfugp","_id":"ckbxmgp9e000vty3j4is9b2kb"},{"post_id":"ckbxmgp8n0000ty3jack2bgjw","category_id":"ckbxmgp900004ty3jh6le8tzb","_id":"ckbxmgp9g0013ty3j6wetalku"},{"post_id":"ckbxmgp8n0000ty3jack2bgjw","category_id":"ckbxmgp9d000uty3j35izh6n5","_id":"ckbxmgp9g0014ty3j6k79ejo9"},{"post_id":"ckbxmgp940009ty3jgquqg2n8","category_id":"ckbxmgp9f000zty3jevw375yp","_id":"ckbxmgp9h0017ty3j63y466kl"},{"post_id":"ckbxmgp8t0001ty3j76769qjt","category_id":"ckbxmgp930008ty3jeq3q0nr2","_id":"ckbxmgp9k001fty3j43tn1xlg"},{"post_id":"ckbxmgp8t0001ty3j76769qjt","category_id":"ckbxmgp9h0016ty3jbx1y1l2o","_id":"ckbxmgp9l001hty3jdoj7fn5s"},{"post_id":"ckbxmgp9b000mty3j30lcfqz2","category_id":"ckbxmgp9l001lty3jc0uyg93b","_id":"ckbxmgp9o001sty3jfhx1ckzn"},{"post_id":"ckbxmgp9c000qty3j43wg43w9","category_id":"ckbxmgp9n001pty3jbytt2ze9","_id":"ckbxmgp9q001xty3j44dkdkls"},{"post_id":"ckbxmgp9d000sty3j2cg3141d","category_id":"ckbxmgp9o001rty3j6peparnf","_id":"ckbxmgp9r0020ty3jaeige0mn"},{"post_id":"ckbxmgp9e000xty3j6q8m46kr","category_id":"ckbxmgp9q001zty3jc5zehtrj","_id":"ckbxmgp9s0027ty3jbs39b5r9"},{"post_id":"ckbxmgp95000aty3j6inkb491","category_id":"ckbxmgp9g0012ty3jdgrcag2f","_id":"ckbxmgp9t002cty3j5vic9l1n"},{"post_id":"ckbxmgp95000aty3j6inkb491","category_id":"ckbxmgp9r0024ty3j43045n7b","_id":"ckbxmgp9t002ety3j29auaupq"},{"post_id":"ckbxmgp96000dty3j0ktw36pm","category_id":"ckbxmgp9i0019ty3j0lyq44el","_id":"ckbxmgp9v002hty3jcxd94ggf"},{"post_id":"ckbxmgp96000dty3j0ktw36pm","category_id":"ckbxmgp9r0026ty3j69l2hijw","_id":"ckbxmgp9v002jty3jfbf4cy07"},{"post_id":"ckbxmgp98000jty3jeluydn7u","category_id":"ckbxmgp9k001dty3ja0d2cfz1","_id":"ckbxmgp9w002mty3j9dwycsed"},{"post_id":"ckbxmgp98000jty3jeluydn7u","category_id":"ckbxmgp9s002bty3jg0eudnra","_id":"ckbxmgp9w002oty3jaerw3nxv"},{"post_id":"ckbxmgp9a000kty3jacdlbr4x","category_id":"ckbxmgp9l001jty3j9ix0eu0h","_id":"ckbxmgp9w002pty3jd74z24c8"},{"post_id":"ckbxmgp9a000kty3jacdlbr4x","category_id":"ckbxmgp9t002gty3jat8r028u","_id":"ckbxmgp9w002rty3j66wt3qrq"},{"post_id":"ckbxmgp920006ty3j0clu4ji2","category_id":"ckbxmgp9b000nty3j7efo3x03","_id":"ckbxmgp9w002sty3jh7zohpbq"},{"post_id":"ckbxmgp920006ty3j0clu4ji2","category_id":"ckbxmgp9p001wty3jah5e0e3o","_id":"ckbxmgp9w002tty3j4bdh51te"},{"post_id":"ckbxmgp920006ty3j0clu4ji2","category_id":"ckbxmgp9v002lty3j1mm157f7","_id":"ckbxmgp9w002uty3j2gvd6nri"},{"post_id":"ckbyvi8oy0002wp3jarfh6ptl","category_id":"ckbyvi8p60006wp3j8k8h4xg8","_id":"ckbyvi8p8000bwp3j99um9mqb"},{"post_id":"ckbyvi8ox0001wp3j3crd1s8i","category_id":"ckbyvi8p50004wp3j1tzv0r0o","_id":"ckbyvi8p8000dwp3jam330oqx"},{"post_id":"ckbyvi8ox0001wp3j3crd1s8i","category_id":"ckbyvi8p70008wp3j7iyca9n3","_id":"ckbyvi8p8000ewp3j70lka3ew"},{"post_id":"ckbyvi8ph000fwp3j29fbfz2k","category_id":"ckbyvi8pi000hwp3jbbv45j0x","_id":"ckbyvi8pj000kwp3j313r2iwq"},{"post_id":"ckbyvi8ph000fwp3j29fbfz2k","category_id":"ckbyvi8p70008wp3j7iyca9n3","_id":"ckbyvi8pj000lwp3j1ezh23xp"}],"PostTag":[{"post_id":"ck4xzj9ae000888s6418ved7h","tag_id":"ck4xzj9ag000b88s62cxg6ni3","_id":"ck4xzj9al000j88s66mkadtty"},{"post_id":"ck4xzj9af000988s65jb41cl0","tag_id":"ck4xzj9ak000i88s68otcc0e4","_id":"ck4xzj9as000v88s68k1098xh"},{"post_id":"ck4xzj9af000988s65jb41cl0","tag_id":"ck4xzj9ao000n88s64spmejw3","_id":"ck4xzj9au000w88s61om7ebq1"},{"post_id":"ck4xzj9ag000c88s60t88eq65","tag_id":"ck4xzj9ar000t88s653ew03ok","_id":"ck4xzj9av000z88s6ehlt0qsc"},{"post_id":"ck4xzj9ai000e88s693veg5qc","tag_id":"ck4xzj9av000y88s69jcu7dpz","_id":"ck4xzj9ax001488s6h9bj67b8"},{"post_id":"ck4xzj9aj000h88s62iv46y3y","tag_id":"ck4xzj9aw001288s6az78h20c","_id":"ck4xzj9ay001988s6ed1w9gp4"},{"post_id":"ck4xzj9al000k88s65d2p26ae","tag_id":"ck4xzj9ax001788s6ggcb0rhk","_id":"ck4xzj9az001e88s6914v3enl"},{"post_id":"ck4xzj9an000m88s6966j9vkt","tag_id":"ck4xzj9ay001d88s68t4b43e8","_id":"ck4xzj9b2001k88s6bspt8mo2"},{"post_id":"ck4xzj9ap000p88s68p45fbjy","tag_id":"ck4xzj9b0001i88s634o41zwc","_id":"ck4xzj9b3001p88s60vcw0fxk"},{"post_id":"ck4xzj9aq000r88s68lln6hj0","tag_id":"ck4xzj9b3001n88s615dhfxgo","_id":"ck4xzj9b4001u88s64vi1fp8s"},{"post_id":"ck4xzj9as000u88s65un4axtj","tag_id":"ck4xzj9b4001s88s6ab9abk1h","_id":"ck4xzj9b5002188s6auzu3zg4"},{"post_id":"ck4xzj9as000u88s65un4axtj","tag_id":"ck4xzj9b5001x88s6gqez4jmr","_id":"ck4xzj9b5002388s62lmla0nm"},{"post_id":"ckbq74rf80001nc3j36ry28et","tag_id":"ck4xzj9be002788s652op7299","_id":"ckbq74rfa0002nc3ja69c5pik"},{"post_id":"ckbq9wklh0000aj3j3ovle2g6","tag_id":"ckbq9wklp0001aj3jeu4lffp7","_id":"ckbq9wklu0005aj3jcho4d0aq"},{"post_id":"ckbq9wklh0000aj3j3ovle2g6","tag_id":"ckbq9wklt0003aj3j9wyw88jq","_id":"ckbq9wklu0006aj3j22u2a24d"},{"post_id":"ckbqeimtq0000uj3jcunkcuti","tag_id":"ckbqeimtw0001uj3j2jrg44k8","_id":"ckbqeimu00005uj3j9aqjfnou"},{"post_id":"ckbqeimtq0000uj3jcunkcuti","tag_id":"ckbqeimu00003uj3jcblnhk05","_id":"ckbqeimu10006uj3j00stdjes"},{"post_id":"ckbrn0y3t00006u3j05i1fbm5","tag_id":"ckbrn0y4000016u3jaa2s6ol8","_id":"ckbrn0y4700056u3j6996bsqf"},{"post_id":"ckbrn0y3t00006u3j05i1fbm5","tag_id":"ckbrn0y4600036u3jd5tfhlpb","_id":"ckbrn0y4700066u3j0xub26v8"},{"post_id":"ckbrn0y4f00096u3j18cz6iya","tag_id":"ckbrn0y4g000a6u3jhw866k41","_id":"ckbrn0y4i000e6u3jc9v5hriu"},{"post_id":"ckbrn0y4f00096u3j18cz6iya","tag_id":"ckbrn0y4h000c6u3j8xmv8hfq","_id":"ckbrn0y4i000f6u3j8kd3cukv"},{"post_id":"ckbszw79a0000l73jglqodf9a","tag_id":"ckbszw79j0002l73jdjitgge5","_id":"ckbszw79s0009l73jbkeje288"},{"post_id":"ckbszw79a0000l73jglqodf9a","tag_id":"ckbszw79p0005l73j9jlj0t5o","_id":"ckbszw79s000al73j9uycgjtx"},{"post_id":"ckbszw79h0001l73j1us84m6i","tag_id":"ckbszw79r0007l73jd53b07py","_id":"ckbszw79t000fl73j7l3w29l8"},{"post_id":"ckbszw79h0001l73j1us84m6i","tag_id":"ckbszw79s000bl73jeitp37s6","_id":"ckbszw79t000gl73jh5abd7sa"},{"post_id":"ckbszw79n0003l73j7apbcn2m","tag_id":"ckbqeimtw0001uj3j2jrg44k8","_id":"ckbszw79u000jl73jgbd2ccn2"},{"post_id":"ckbszw79n0003l73j7apbcn2m","tag_id":"ckbszw79t000dl73j2tg44agu","_id":"ckbszw79u000ll73jda2o54ag"},{"post_id":"ckbxmgp8n0000ty3jack2bgjw","tag_id":"ckbxmgp8v0002ty3jhxik5ytx","_id":"ckbxmgp96000ety3jfwgyb7qc"},{"post_id":"ckbxmgp8n0000ty3jack2bgjw","tag_id":"ckbxmgp930007ty3jffxb0u7a","_id":"ckbxmgp97000gty3j7bxye8pb"},{"post_id":"ckbxmgp8t0001ty3j76769qjt","tag_id":"ckbxmgp95000bty3j8cbqgkwc","_id":"ckbxmgp9c000pty3jcr4q5440"},{"post_id":"ckbxmgp8t0001ty3j76769qjt","tag_id":"ckbxmgp97000hty3jg7vb3z50","_id":"ckbxmgp9d000rty3jfw12bp2x"},{"post_id":"ckbxmgp900003ty3jen8pdigx","tag_id":"ckbxmgp9b000lty3j9iz6du2v","_id":"ckbxmgp9e000wty3j07de2cj8"},{"post_id":"ckbxmgp910005ty3jhe0z55ym","tag_id":"ckbxmgp9d000tty3jfpgu5ws8","_id":"ckbxmgp9g0010ty3jcuccdxfy"},{"post_id":"ckbxmgp920006ty3j0clu4ji2","tag_id":"ckbxmgp9f000yty3je9c711t9","_id":"ckbxmgp9i001aty3j7vhx6z3f"},{"post_id":"ckbxmgp920006ty3j0clu4ji2","tag_id":"ckbxmgp9g0011ty3jfgdueki5","_id":"ckbxmgp9i001bty3jfppi48uo"},{"post_id":"ckbxmgp920006ty3j0clu4ji2","tag_id":"ckbxmgp9g0015ty3j6y9850e1","_id":"ckbxmgp9k001ety3j60it42gg"},{"post_id":"ckbxmgp940009ty3jgquqg2n8","tag_id":"ckbxmgp9h0018ty3j2yaag8yq","_id":"ckbxmgp9l001gty3ja17bbf2x"},{"post_id":"ckbxmgp95000aty3j6inkb491","tag_id":"ckbxmgp9i001cty3j80i568su","_id":"ckbxmgp9m001mty3jdoaxeu3o"},{"post_id":"ckbxmgp95000aty3j6inkb491","tag_id":"ckbxmgp9l001ity3j07511w9i","_id":"ckbxmgp9n001nty3jfmzmdyug"},{"post_id":"ckbxmgp96000dty3j0ktw36pm","tag_id":"ckbxmgp9l001kty3ja9dnb7z1","_id":"ckbxmgp9p001tty3j8dz3gdfk"},{"post_id":"ckbxmgp96000dty3j0ktw36pm","tag_id":"ckbxmgp9n001oty3j0ato8nm0","_id":"ckbxmgp9p001uty3j6v3w6j5p"},{"post_id":"ckbxmgp98000jty3jeluydn7u","tag_id":"ckbxmgp9o001qty3j0nld9ah5","_id":"ckbxmgp9r0021ty3jf0d2a54e"},{"post_id":"ckbxmgp98000jty3jeluydn7u","tag_id":"ckbxmgp9p001vty3j506zhzuw","_id":"ckbxmgp9r0022ty3jbb36079i"},{"post_id":"ckbxmgp9a000kty3jacdlbr4x","tag_id":"ckbxmgp9q001yty3jdumi25tr","_id":"ckbxmgp9s0028ty3j1jab63io"},{"post_id":"ckbxmgp9a000kty3jacdlbr4x","tag_id":"ckbxmgp9r0023ty3j2zl75ek1","_id":"ckbxmgp9s0029ty3j4e90hvmf"},{"post_id":"ckbxmgp9b000mty3j30lcfqz2","tag_id":"ckbxmgp9r0025ty3jbihu8nfd","_id":"ckbxmgp9t002dty3jghfpfwjc"},{"post_id":"ckbxmgp9c000qty3j43wg43w9","tag_id":"ckbxmgp9s002aty3j8qymfusq","_id":"ckbxmgp9v002ity3jav1y28i9"},{"post_id":"ckbxmgp9d000sty3j2cg3141d","tag_id":"ckbxmgp9t002fty3j9gz5gtb1","_id":"ckbxmgp9w002nty3j47x2g84j"},{"post_id":"ckbxmgp9e000xty3j6q8m46kr","tag_id":"ckbxmgp9v002kty3j0m12f7ew","_id":"ckbxmgp9w002qty3j74653uax"},{"post_id":"ckbyvi8ox0001wp3j3crd1s8i","tag_id":"ckbyvi8p00003wp3j1hu86ye9","_id":"ckbyvi8p70009wp3j8r2e3dj2"},{"post_id":"ckbyvi8ox0001wp3j3crd1s8i","tag_id":"ckbyvi8p60005wp3j40zib32d","_id":"ckbyvi8p7000awp3j4dljfcif"},{"post_id":"ckbyvi8oy0002wp3jarfh6ptl","tag_id":"ckbyvi8p70007wp3j9sea5nh5","_id":"ckbyvi8p8000cwp3j7rn1aejk"},{"post_id":"ckbyvi8ph000fwp3j29fbfz2k","tag_id":"ckbyvi8pi000gwp3j051b86l0","_id":"ckbyvi8pj000iwp3jeugqc06q"},{"post_id":"ckbyvi8ph000fwp3j29fbfz2k","tag_id":"ckbyvi8p60005wp3j40zib32d","_id":"ckbyvi8pj000jwp3j84y05my8"}],"Tag":[{"name":"测滑返回","_id":"ck4xzj9a7000288s6ckrzc83y"},{"name":"动画","_id":"ck4xzj9ad000788s69d8n96s4"},{"name":"MVVM","_id":"ck4xzj9ag000b88s62cxg6ni3"},{"name":"线程安全","_id":"ck4xzj9ak000i88s68otcc0e4"},{"name":"线程的分类","_id":"ck4xzj9ao000n88s64spmejw3"},{"name":"variable","_id":"ck4xzj9ar000t88s653ew03ok"},{"name":"class","_id":"ck4xzj9av000y88s69jcu7dpz"},{"name":"运行时","_id":"ck4xzj9aw001288s6az78h20c"},{"name":"method","_id":"ck4xzj9ax001788s6ggcb0rhk"},{"name":"消息转发","_id":"ck4xzj9ay001d88s68t4b43e8"},{"name":"sdwebimage","_id":"ck4xzj9b0001i88s634o41zwc"},{"name":"NSCalendar","_id":"ck4xzj9b3001n88s615dhfxgo"},{"name":"UITextField","_id":"ck4xzj9b4001s88s6ab9abk1h"},{"name":"inputView","_id":"ck4xzj9b5001x88s6gqez4jmr"},{"name":"macdown","_id":"ck4xzj9be002788s652op7299"},{"name":"Apple","_id":"ckbq9wklp0001aj3jeu4lffp7"},{"name":"续费","_id":"ckbq9wklt0003aj3j9wyw88jq"},{"name":"iOS","_id":"ckbqeimtw0001uj3j2jrg44k8"},{"name":"crash","_id":"ckbqeimu00003uj3jcblnhk05"},{"name":"加密","_id":"ckbrn0y4000016u3jaa2s6ol8"},{"name":"算法","_id":"ckbrn0y4600036u3jd5tfhlpb"},{"name":"证书链","_id":"ckbrn0y4g000a6u3jhw866k41"},{"name":"数字证书","_id":"ckbrn0y4h000c6u3j8xmv8hfq"},{"name":"deeplinking","_id":"ckbszw79j0002l73jdjitgge5"},{"name":"通用链接","_id":"ckbszw79p0005l73j9jlj0t5o"},{"name":"热修复","_id":"ckbszw79r0007l73jd53b07py"},{"name":"JSPatch","_id":"ckbszw79s000bl73jeitp37s6"},{"name":"RunLoop","_id":"ckbszw79t000dl73j2tg44agu"},{"name":"组件化","_id":"ckbxmgp8v0002ty3jhxik5ytx"},{"name":"资源文件","_id":"ckbxmgp930007ty3jffxb0u7a"},{"name":"app","_id":"ckbxmgp95000bty3j8cbqgkwc"},{"name":"开发模式","_id":"ckbxmgp97000hty3jg7vb3z50"},{"name":"Jenkins","_id":"ckbxmgp9b000lty3j9iz6du2v"},{"name":"编程方式","_id":"ckbxmgp9d000tty3jfpgu5ws8"},{"name":"私有化仓库","_id":"ckbxmgp9f000yty3je9c711t9"},{"name":"cocoapods","_id":"ckbxmgp9g0011ty3jfgdueki5"},{"name":"工程组织结构","_id":"ckbxmgp9g0015ty3j6y9850e1"},{"name":"程序软件下载器","_id":"ckbxmgp9h0018ty3j2yaag8yq"},{"name":"framework","_id":"ckbxmgp9i001cty3j80i568su"},{"name":"static library","_id":"ckbxmgp9l001ity3j07511w9i"},{"name":"函数响应式编程","_id":"ckbxmgp9l001kty3ja9dnb7z1"},{"name":"FRP","_id":"ckbxmgp9n001oty3j0ato8nm0"},{"name":"页面布局自动化","_id":"ckbxmgp9o001qty3j0nld9ah5"},{"name":"页面跳转自动化","_id":"ckbxmgp9p001vty3j506zhzuw"},{"name":"模块化","_id":"ckbxmgp9q001yty3jdumi25tr"},{"name":"去耦合","_id":"ckbxmgp9r0023ty3j2zl75ek1"},{"name":"自动化打包部署","_id":"ckbxmgp9r0025ty3jbihu8nfd"},{"name":"无痕埋点","_id":"ckbxmgp9s002aty3j8qymfusq"},{"name":"马甲包","_id":"ckbxmgp9t002fty3j9gz5gtb1"},{"name":"静态代码扫描","_id":"ckbxmgp9v002kty3j0m12f7ew"},{"name":"加固","_id":"ckbyvi8p00003wp3j1hu86ye9"},{"name":"安全攻防","_id":"ckbyvi8p60005wp3j40zib32d"},{"name":"UIScrollView嵌套联动效果","_id":"ckbyvi8p70007wp3j9sea5nh5"},{"name":"破壳","_id":"ckbyvi8pi000gwp3j051b86l0"}]}}